

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 05 09:53:14 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1,minocg
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F45K20 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataBANK0
    84  001D8E                     __pidataBANK0:
    85                           	opt callstack 0
    86                           
    87                           ;initializer for _randx
    88  001D8E  0001               	dw	1
    89  001D90  0000               	dw	0
    90                           
    91                           ;initializer for _m_tabMines
    92  001D92  20                 	db	32
    93  001D93  20                 	db	32
    94  001D94  20                 	db	32
    95  001D95  20                 	db	32
    96  001D96  20                 	db	32
    97  001D97  20                 	db	32
    98  001D98  20                 	db	32
    99  001D99  20                 	db	32
   100  001D9A  20                 	db	32
   101  001D9B  20                 	db	32
   102  001D9C  20                 	db	32
   103  001D9D  20                 	db	32
   104  001D9E  20                 	db	32
   105  001D9F  20                 	db	32
   106  001DA0  20                 	db	32
   107  001DA1  20                 	db	32
   108  001DA2  20                 	db	32
   109  001DA3  20                 	db	32
   110  001DA4  20                 	db	32
   111  001DA5  20                 	db	32
   112  001DA6  00                 	db	0
   113  001DA7  20                 	db	32
   114  001DA8  20                 	db	32
   115  001DA9  20                 	db	32
   116  001DAA  20                 	db	32
   117  001DAB  20                 	db	32
   118  001DAC  20                 	db	32
   119  001DAD  20                 	db	32
   120  001DAE  20                 	db	32
   121  001DAF  20                 	db	32
   122  001DB0  20                 	db	32
   123  001DB1  20                 	db	32
   124  001DB2  20                 	db	32
   125  001DB3  20                 	db	32
   126  001DB4  20                 	db	32
   127  001DB5  20                 	db	32
   128  001DB6  20                 	db	32
   129  001DB7  20                 	db	32
   130  001DB8  20                 	db	32
   131  001DB9  20                 	db	32
   132  001DBA  20                 	db	32
   133  001DBB  00                 	db	0
   134  001DBC  20                 	db	32
   135  001DBD  20                 	db	32
   136  001DBE  20                 	db	32
   137  001DBF  20                 	db	32
   138  001DC0  20                 	db	32
   139  001DC1  20                 	db	32
   140  001DC2  20                 	db	32
   141  001DC3  20                 	db	32
   142  001DC4  20                 	db	32
   143  001DC5  20                 	db	32
   144  001DC6  20                 	db	32
   145  001DC7  20                 	db	32
   146  001DC8  20                 	db	32
   147  001DC9  20                 	db	32
   148  001DCA  20                 	db	32
   149  001DCB  20                 	db	32
   150  001DCC  20                 	db	32
   151  001DCD  20                 	db	32
   152  001DCE  20                 	db	32
   153  001DCF  20                 	db	32
   154  001DD0  00                 	db	0
   155  001DD1  20                 	db	32
   156  001DD2  20                 	db	32
   157  001DD3  20                 	db	32
   158  001DD4  20                 	db	32
   159  001DD5  20                 	db	32
   160  001DD6  20                 	db	32
   161  001DD7  20                 	db	32
   162  001DD8  20                 	db	32
   163  001DD9  20                 	db	32
   164  001DDA  20                 	db	32
   165  001DDB  20                 	db	32
   166  001DDC  20                 	db	32
   167  001DDD  20                 	db	32
   168  001DDE  20                 	db	32
   169  001DDF  20                 	db	32
   170  001DE0  20                 	db	32
   171  001DE1  20                 	db	32
   172  001DE2  20                 	db	32
   173  001DE3  20                 	db	32
   174  001DE4  20                 	db	32
   175  001DE5  00                 	db	0
   176                           
   177                           	psect	idataBANK1
   178  002006                     __pidataBANK1:
   179                           	opt callstack 0
   180                           
   181                           ;initializer for _matCGRAM
   182  002006  08                 	db	8
   183  002007  04                 	db	4
   184  002008  04                 	db	4
   185  002009  0A                 	db	10
   186  00200A  11                 	db	17
   187  00200B  1F                 	db	31
   188  00200C  11                 	db	17
   189  00200D  00                 	db	0
   190  00200E  00                 	db	0
   191  00200F  0E                 	db	14
   192  002010  1F                 	db	31
   193  002011  1F                 	db	31
   194  002012  1F                 	db	31
   195  002013  1F                 	db	31
   196  002014  0E                 	db	14
   197  002015  00                 	db	0
   198  002016  08                 	db	8
   199  002017  14                 	db	20
   200  002018  04                 	db	4
   201  002019  0E                 	db	14
   202  00201A  1F                 	db	31
   203  00201B  1F                 	db	31
   204  00201C  1F                 	db	31
   205  00201D  0E                 	db	14
   206  00201E  0A                 	db	10
   207  00201F  11                 	db	17
   208  002020  0A                 	db	10
   209  002021  0E                 	db	14
   210  002022  1B                 	db	27
   211  002023  0E                 	db	14
   212  002024  04                 	db	4
   213  002025  04                 	db	4
   214  002026  0A                 	db	10
   215  002027  0A                 	db	10
   216  002028  0A                 	db	10
   217  002029  0E                 	db	14
   218  00202A  1B                 	db	27
   219  00202B  11                 	db	17
   220  00202C  1F                 	db	31
   221  00202D  15                 	db	21
   222  00202E  04                 	db	4
   223  00202F  0A                 	db	10
   224  002030  0E                 	db	14
   225  002031  11                 	db	17
   226  002032  1F                 	db	31
   227  002033  10                 	db	16
   228  002034  0E                 	db	14
   229  002035  00                 	db	0
   230  002036  08                 	db	8
   231  002037  04                 	db	4
   232  002038  0E                 	db	14
   233  002039  01                 	db	1
   234  00203A  0F                 	db	15
   235  00203B  11                 	db	17
   236  00203C  0F                 	db	15
   237  00203D  00                 	db	0
   238  00203E  04                 	db	4
   239  00203F  0A                 	db	10
   240  002040  0E                 	db	14
   241  002041  01                 	db	1
   242  002042  0F                 	db	15
   243  002043  11                 	db	17
   244  002044  0F                 	db	15
   245  002045  00                 	db	0
   246  0000                     _TRISCbits	set	3988
   247  0000                     _PORTAbits	set	3968
   248  0000                     _PORTD	set	3971
   249  0000                     _ANSELbits	set	3966
   250  0000                     _TRISA	set	3986
   251  0000                     _ANSEL	set	3966
   252  0000                     _TRISB	set	3987
   253  0000                     _ANSELH	set	3967
   254  0000                     _TRISD	set	3989
   255  0000                     _PORTBbits	set	3969
   256  0000                     _TMR1	set	4046
   257  0000                     _RCREG	set	4014
   258  0000                     _TXREG	set	4013
   259  0000                     _RCSTAbits	set	4011
   260  0000                     _TXSTAbits	set	4012
   261  0000                     _BAUDCONbits	set	4024
   262  0000                     _SPBRG	set	4015
   263  0000                     _SPBRGH	set	4016
   264  0000                     _ADCON2bits	set	4032
   265  0000                     _ADCON1	set	4033
   266  0000                     _T1CONbits	set	4045
   267  0000                     _ADRESH	set	4036
   268  0000                     _ADCON0bits	set	4034
   269  0000                     _RCIF	set	31989
   270  0000                     _T0CONbits	set	4053
   271  0000                     _INTCONbits	set	4082
   272                           
   273                           	psect	smallconst
   274  000600                     __psmallconst:
   275                           	opt callstack 0
   276  000600  00                 	db	0
   277  000601                     STR_1:
   278                           
   279                           ; BSR set to: 0
   280  000601  20                 	db	32
   281  000602  20                 	db	32
   282  000603  20                 	db	32
   283  000604  20                 	db	32
   284  000605  20                 	db	32
   285  000606  20                 	db	32
   286  000607  20                 	db	32
   287  000608  20                 	db	32
   288  000609  20                 	db	32
   289  00060A  20                 	db	32
   290  00060B  20                 	db	32
   291  00060C  20                 	db	32
   292  00060D  20                 	db	32
   293  00060E  20                 	db	32
   294  00060F  20                 	db	32
   295  000610  20                 	db	32
   296  000611  20                 	db	32
   297  000612  20                 	db	32
   298  000613  20                 	db	32
   299  000614  20                 	db	32
   300  000615  00                 	db	0
   301                           
   302                           ; #config settings
   303  000616  00                 	db	0	; dummy byte at the end
   304  0000                     
   305                           	psect	cinit
   306  001E90                     __pcinit:
   307                           	opt callstack 0
   308  001E90                     start_initialization:
   309                           	opt callstack 0
   310  001E90                     __initialization:
   311                           	opt callstack 0
   312                           
   313                           ; Initialize objects allocated to BANK1 (64 bytes)
   314                           ; load TBLPTR registers with __pidataBANK1
   315  001E90  0E06               	movlw	low __pidataBANK1
   316  001E92  6EF6               	movwf	tblptrl,c
   317  001E94  0E20               	movlw	high __pidataBANK1
   318  001E96  6EF7               	movwf	tblptrh,c
   319  001E98  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   320  001E9A  6EF8               	movwf	tblptru,c
   321  001E9C  EE01  F054         	lfsr	0,__pdataBANK1
   322  001EA0  EE10 F040          	lfsr	1,64
   323  001EA4                     copy_data0:
   324  001EA4  0009               	tblrd		*+
   325  001EA6  CFF5 FFEE          	movff	tablat,postinc0
   326  001EAA  50E5               	movf	postdec1,w,c
   327  001EAC  50E1               	movf	fsr1l,w,c
   328  001EAE  E1FA               	bnz	copy_data0
   329                           
   330                           ; Initialize objects allocated to BANK0 (88 bytes)
   331                           ; load TBLPTR registers with __pidataBANK0
   332  001EB0  0E8E               	movlw	low __pidataBANK0
   333  001EB2  6EF6               	movwf	tblptrl,c
   334  001EB4  0E1D               	movlw	high __pidataBANK0
   335  001EB6  6EF7               	movwf	tblptrh,c
   336  001EB8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   337  001EBA  6EF8               	movwf	tblptru,c
   338  001EBC  EE00  F060         	lfsr	0,__pdataBANK0
   339  001EC0  EE10 F058          	lfsr	1,88
   340  001EC4                     copy_data1:
   341  001EC4  0009               	tblrd		*+
   342  001EC6  CFF5 FFEE          	movff	tablat,postinc0
   343  001ECA  50E5               	movf	postdec1,w,c
   344  001ECC  50E1               	movf	fsr1l,w,c
   345  001ECE  E1FA               	bnz	copy_data1
   346                           
   347                           ; Clear objects allocated to BANK1 (84 bytes)
   348  001ED0  EE01  F000         	lfsr	0,__pbssBANK1
   349  001ED4  0E54               	movlw	84
   350  001ED6                     clear_0:
   351  001ED6  6AEE               	clrf	postinc0,c
   352  001ED8  06E8               	decf	wreg,f,c
   353  001EDA  E1FD               	bnz	clear_0
   354  001EDC                     end_of_initialization:
   355                           	opt callstack 0
   356  001EDC                     __end_of__initialization:
   357                           	opt callstack 0
   358  001EDC  0100               	movlb	0
   359  001EDE  EF43  F00B         	goto	_main	;jump to C main() function
   360                           
   361                           	psect	dataBANK0
   362  000060                     __pdataBANK0:
   363                           	opt callstack 0
   364  000060                     _randx:
   365                           	opt callstack 0
   366  000060                     	ds	4
   367  000064                     _m_tabMines:
   368                           	opt callstack 0
   369  000064                     	ds	84
   370                           
   371                           	psect	bssBANK1
   372  000100                     __pbssBANK1:
   373                           	opt callstack 0
   374  000100                     _m_tabVue:
   375                           	opt callstack 0
   376  000100                     	ds	84
   377                           
   378                           	psect	dataBANK1
   379  000154                     __pdataBANK1:
   380                           	opt callstack 0
   381  000154                     _matCGRAM:
   382                           	opt callstack 0
   383  000154                     	ds	64
   384                           
   385                           	psect	cstackBANK0
   386  0000B8                     __pcstackBANK0:
   387                           	opt callstack 0
   388  0000B8                     ??_getAnalog:
   389  0000B8                     ??_lcd_ecrireDonnees:
   390  0000B8                     ??_lcd_busy:
   391  0000B8                     ?___wmul:
   392                           	opt callstack 0
   393  0000B8                     ?___lmul:
   394                           	opt callstack 0
   395  0000B8                     enleveTuilesAutour@y:
   396                           	opt callstack 0
   397  0000B8                     gagne@pMines:
   398                           	opt callstack 0
   399  0000B8                     ___wmul@multiplier:
   400                           	opt callstack 0
   401  0000B8                     srand@x:
   402                           	opt callstack 0
   403  0000B8                     ___lmul@multiplier:
   404                           	opt callstack 0
   405                           
   406                           ; 4 bytes @ 0x0
   407  0000B8                     	ds	1
   408  0000B9                     ??_enleveTuilesAutour:
   409  0000B9                     getAnalog@canal:
   410                           	opt callstack 0
   411  0000B9                     lcd_ecrireDonnees@donnee:
   412                           	opt callstack 0
   413  0000B9                     lcd_busy@adresse:
   414                           	opt callstack 0
   415                           
   416                           ; 1 bytes @ 0x1
   417  0000B9                     	ds	1
   418  0000BA                     ??_gagne:
   419  0000BA                     ??_lcd_resetSequence:
   420  0000BA                     lcd_wrCom@commande:
   421                           	opt callstack 0
   422  0000BA                     lcd_wrData@caractere:
   423                           	opt callstack 0
   424  0000BA                     ___wmul@multiplicand:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x2
   428  0000BA                     	ds	1
   429  0000BB                     ??_lcd_initCGRam:
   430  0000BB                     lcd_gotoXY@y:
   431                           	opt callstack 0
   432  0000BB                     lcd_ecritChar@car:
   433                           	opt callstack 0
   434                           
   435                           ; 1 bytes @ 0x3
   436  0000BB                     	ds	1
   437  0000BC                     lcd_gotoXY@x:
   438                           	opt callstack 0
   439  0000BC                     lcd_ecritChar@posRam:
   440                           	opt callstack 0
   441  0000BC                     ___wmul@product:
   442                           	opt callstack 0
   443  0000BC                     ___lmul@multiplicand:
   444                           	opt callstack 0
   445                           
   446                           ; 4 bytes @ 0x4
   447  0000BC                     	ds	1
   448  0000BD                     lcd_initCGRam@i:
   449                           	opt callstack 0
   450  0000BD                     deplace@x:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x5
   454  0000BD                     	ds	1
   455  0000BE                     ??_initTabVue:
   456  0000BE                     ?_strcpy:
   457                           	opt callstack 0
   458  0000BE                     gagne@count:
   459                           	opt callstack 0
   460  0000BE                     lcd_initCGRam@j:
   461                           	opt callstack 0
   462  0000BE                     calculToucheCombien@ligne:
   463                           	opt callstack 0
   464  0000BE                     lcd_putMessage@chaine:
   465                           	opt callstack 0
   466  0000BE                     strcpy@to:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0x6
   470  0000BE                     	ds	1
   471  0000BF                     gagne@i:
   472                           	opt callstack 0
   473  0000BF                     deplace@y:
   474                           	opt callstack 0
   475                           
   476                           ; 2 bytes @ 0x7
   477  0000BF                     	ds	1
   478  0000C0                     gagne@j:
   479                           	opt callstack 0
   480  0000C0                     lcd_putMessage@j:
   481                           	opt callstack 0
   482  0000C0                     initTabVue@j:
   483                           	opt callstack 0
   484  0000C0                     calculToucheCombien@colonne:
   485                           	opt callstack 0
   486  0000C0                     strcpy@from:
   487                           	opt callstack 0
   488  0000C0                     ___lmul@product:
   489                           	opt callstack 0
   490                           
   491                           ; 4 bytes @ 0x8
   492  0000C0                     	ds	1
   493  0000C1                     ??_deplace:
   494  0000C1                     enleveTuilesAutour@x:
   495                           	opt callstack 0
   496  0000C1                     afficheTabVue@i:
   497                           	opt callstack 0
   498  0000C1                     afficheTabMines@i:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0x9
   502  0000C1                     	ds	1
   503  0000C2                     ??_calculToucheCombien:
   504  0000C2                     demine@y:
   505                           	opt callstack 0
   506  0000C2                     initTabVue@i:
   507                           	opt callstack 0
   508  0000C2                     strcpy@cp:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0xA
   512  0000C2                     	ds	1
   513  0000C3                     ??_demine:
   514                           
   515                           ; 1 bytes @ 0xB
   516  0000C3                     	ds	1
   517  0000C4                     ?_rand:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0xC
   521  0000C4                     	ds	2
   522  0000C6                     ?___awmod:
   523                           	opt callstack 0
   524  0000C6                     ___awmod@dividend:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0xE
   528  0000C6                     	ds	1
   529  0000C7                     calculToucheCombien@countMine:
   530                           	opt callstack 0
   531  0000C7                     demine@x:
   532                           	opt callstack 0
   533                           
   534                           ; 1 bytes @ 0xF
   535  0000C7                     	ds	1
   536  0000C8                     ??_metToucheCombien:
   537  0000C8                     ___awmod@divisor:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x10
   541  0000C8                     	ds	2
   542  0000CA                     ___awmod@counter:
   543                           	opt callstack 0
   544                           
   545                           ; 1 bytes @ 0x12
   546  0000CA                     	ds	1
   547  0000CB                     metToucheCombien@i:
   548                           	opt callstack 0
   549  0000CB                     ___awmod@sign:
   550                           	opt callstack 0
   551                           
   552                           ; 1 bytes @ 0x13
   553  0000CB                     	ds	1
   554  0000CC                     metToucheCombien@j:
   555                           	opt callstack 0
   556  0000CC                     rempliMines@nb:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x14
   560  0000CC                     	ds	2
   561  0000CE                     ??_rempliMines:
   562                           
   563                           ; 1 bytes @ 0x16
   564  0000CE                     	ds	3
   565  0000D1                     rempliMines@i_497:
   566                           	opt callstack 0
   567                           
   568                           ; 1 bytes @ 0x19
   569  0000D1                     	ds	1
   570  0000D2                     rempliMines@x:
   571                           	opt callstack 0
   572                           
   573                           ; 1 bytes @ 0x1A
   574  0000D2                     	ds	1
   575  0000D3                     rempliMines@y:
   576                           	opt callstack 0
   577                           
   578                           ; 1 bytes @ 0x1B
   579  0000D3                     	ds	1
   580  0000D4                     rempliMines@i:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x1C
   584  0000D4                     	ds	2
   585  0000D6                     ??_main:
   586                           
   587                           ; 1 bytes @ 0x1E
   588  0000D6                     	ds	1
   589  0000D7                     main@lose:
   590                           	opt callstack 0
   591                           
   592                           ; 1 bytes @ 0x1F
   593  0000D7                     	ds	1
   594  0000D8                     main@win:
   595                           	opt callstack 0
   596                           
   597                           ; 1 bytes @ 0x20
   598  0000D8                     	ds	1
   599  0000D9                     main@nbMines:
   600                           	opt callstack 0
   601                           
   602                           ; 2 bytes @ 0x21
   603  0000D9                     	ds	2
   604  0000DB                     main@posY:
   605                           	opt callstack 0
   606                           
   607                           ; 1 bytes @ 0x23
   608  0000DB                     	ds	1
   609  0000DC                     main@posX:
   610                           	opt callstack 0
   611                           
   612                           ; 1 bytes @ 0x24
   613  0000DC                     	ds	1
   614                           
   615 ;;
   616 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   617 ;;
   618 ;; *************** function _main *****************
   619 ;; Defined at:
   620 ;;		line 65 in file "main.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  nbMines         2   33[BANK0 ] int 
   625 ;;  posX            1   36[BANK0 ] unsigned char 
   626 ;;  posY            1   35[BANK0 ] unsigned char 
   627 ;;  win             1   32[BANK0 ] unsigned char 
   628 ;;  lose            1   31[BANK0 ] unsigned char 
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   638 ;;      Params:         0       0       0       0       0       0       0
   639 ;;      Locals:         0       6       0       0       0       0       0
   640 ;;      Temps:          0       1       0       0       0       0       0
   641 ;;      Totals:         0       7       0       0       0       0       0
   642 ;;Total ram usage:        7 bytes
   643 ;; Hardware stack levels required when called:    6
   644 ;; This function calls:
   645 ;;		_afficheTabMines
   646 ;;		_afficheTabVue
   647 ;;		_demine
   648 ;;		_deplace
   649 ;;		_gagne
   650 ;;		_initTabVue
   651 ;;		_initialisation
   652 ;;		_lcd_init
   653 ;;		_metToucheCombien
   654 ;;		_rempliMines
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661  001686                     __ptext0:
   662                           	opt callstack 0
   663  001686                     _main:
   664                           	opt callstack 25
   665  001686                     
   666                           ;main.c: 67: char posY=1;
   667  001686  0E01               	movlw	1
   668  001688  0100               	movlb	0	; force () banked
   669  00168A  6FDB               	movwf	main@posY& (0+255),b
   670                           
   671                           ;main.c: 68: char posX=1;
   672  00168C  0E01               	movlw	1
   673  00168E  0100               	movlb	0	; force () banked
   674  001690  6FDC               	movwf	main@posX& (0+255),b
   675                           
   676                           ;main.c: 69: bool lose=1;
   677  001692  0E01               	movlw	1
   678  001694  0100               	movlb	0	; force () banked
   679  001696  6FD7               	movwf	main@lose& (0+255),b
   680                           
   681                           ;main.c: 70: bool win=0;
   682  001698  0E00               	movlw	0
   683  00169A  0100               	movlb	0	; force () banked
   684  00169C  6FD8               	movwf	main@win& (0+255),b
   685                           
   686                           ;main.c: 71: int nbMines=5;
   687  00169E  0E00               	movlw	0
   688  0016A0  0100               	movlb	0	; force () banked
   689  0016A2  6FDA               	movwf	(main@nbMines+1)& (0+255),b
   690  0016A4  0E05               	movlw	5
   691  0016A6  6FD9               	movwf	main@nbMines& (0+255),b
   692  0016A8                     
   693                           ; BSR set to: 0
   694                           ;main.c: 73: initialisation();
   695  0016A8  EC98  F00F         	call	_initialisation	;wreg free
   696  0016AC                     
   697                           ;main.c: 74: lcd_init();
   698  0016AC  EC53  F010         	call	_lcd_init	;wreg free
   699  0016B0                     
   700                           ;main.c: 75: initTabVue();
   701  0016B0  ECBA  F00A         	call	_initTabVue	;wreg free
   702  0016B4                     
   703                           ;main.c: 76: afficheTabVue();
   704  0016B4  EC5F  F00D         	call	_afficheTabVue	;wreg free
   705  0016B8                     
   706                           ;main.c: 77: rempliMines(nbMines);
   707  0016B8  C0D9  F0CC         	movff	main@nbMines,rempliMines@nb
   708  0016BC  C0DA  F0CD         	movff	main@nbMines+1,rempliMines@nb+1
   709  0016C0  ECB9  F008         	call	_rempliMines	;wreg free
   710  0016C4                     
   711                           ;main.c: 78: metToucheCombien();
   712  0016C4  EC6C  F009         	call	_metToucheCombien	;wreg free
   713  0016C8                     l2456:
   714                           
   715                           ;main.c: 89: {;main.c: 90: deplace(&posX,&posY);
   716  0016C8  0EDC               	movlw	low main@posX
   717  0016CA  0100               	movlb	0	; force () banked
   718  0016CC  6FBD               	movwf	deplace@x& (0+255),b
   719  0016CE  0E00               	movlw	high main@posX
   720  0016D0  6FBE               	movwf	(deplace@x+1)& (0+255),b
   721  0016D2  0EDB               	movlw	low main@posY
   722  0016D4  0100               	movlb	0	; force () banked
   723  0016D6  6FBF               	movwf	deplace@y& (0+255),b
   724  0016D8  0E00               	movlw	high main@posY
   725  0016DA  6FC0               	movwf	(deplace@y+1)& (0+255),b
   726  0016DC  EC1B  F00A         	call	_deplace	;wreg free
   727  0016E0                     
   728                           ;main.c: 91: if(PORTBbits.RB1==0)
   729  0016E0  B281               	btfsc	129,1,c	;volatile
   730  0016E2  EF75  F00B         	goto	u1841
   731  0016E6  EF77  F00B         	goto	u1840
   732  0016EA                     u1841:
   733  0016EA  EFBA  F00B         	goto	l2480
   734  0016EE                     u1840:
   735  0016EE                     l79:
   736  0016EE  A281               	btfss	129,1,c	;volatile
   737  0016F0  EF7C  F00B         	goto	u1851
   738  0016F4  EF7E  F00B         	goto	u1850
   739  0016F8                     u1851:
   740  0016F8  EF77  F00B         	goto	l79
   741  0016FC                     u1850:
   742  0016FC                     
   743                           ;main.c: 94: lose = demine(posX-1,posY-1);
   744  0016FC  0100               	movlb	0	; force () banked
   745  0016FE  05DB               	decf	main@posY& (0+255),w,b
   746  001700  0100               	movlb	0	; force () banked
   747  001702  6FC2               	movwf	demine@y& (0+255),b
   748  001704  0100               	movlb	0	; force () banked
   749  001706  05DC               	decf	main@posX& (0+255),w,b
   750  001708  ECC7  F00B         	call	_demine
   751  00170C  0100               	movlb	0	; force () banked
   752  00170E  6FD7               	movwf	main@lose& (0+255),b
   753  001710                     
   754                           ; BSR set to: 0
   755                           ;main.c: 95: win = gagne(&nbMines);
   756  001710  0ED9               	movlw	low main@nbMines
   757  001712  0100               	movlb	0	; force () banked
   758  001714  6FB8               	movwf	gagne@pMines& (0+255),b
   759  001716  0E00               	movlw	high main@nbMines
   760  001718  6FB9               	movwf	(gagne@pMines+1)& (0+255),b
   761  00171A  EC3F  F00C         	call	_gagne	;wreg free
   762  00171E  0100               	movlb	0	; force () banked
   763  001720  6FD8               	movwf	main@win& (0+255),b
   764  001722                     
   765                           ; BSR set to: 0
   766                           ;main.c: 96: if((lose==0)||(win==1))
   767  001722  0100               	movlb	0	; force () banked
   768  001724  51D7               	movf	main@lose& (0+255),w,b
   769  001726  B4D8               	btfsc	status,2,c
   770  001728  EF98  F00B         	goto	u1861
   771  00172C  EF9A  F00B         	goto	u1860
   772  001730                     u1861:
   773  001730  EFA3  F00B         	goto	l2470
   774  001734                     u1860:
   775  001734                     
   776                           ; BSR set to: 0
   777  001734  0100               	movlb	0	; force () banked
   778  001736  05D8               	decf	main@win& (0+255),w,b
   779  001738  A4D8               	btfss	status,2,c
   780  00173A  EFA1  F00B         	goto	u1871
   781  00173E  EFA3  F00B         	goto	u1870
   782  001742                     u1871:
   783  001742  EFB8  F00B         	goto	l2478
   784  001746                     u1870:
   785  001746                     l2470:
   786                           
   787                           ; BSR set to: 0
   788                           ;main.c: 97: {;main.c: 98: afficheTabMines();
   789  001746  ECA6  F00D         	call	_afficheTabMines	;wreg free
   790  00174A                     l85:
   791  00174A  B281               	btfsc	129,1,c	;volatile
   792  00174C  EFAA  F00B         	goto	u1881
   793  001750  EFAC  F00B         	goto	u1880
   794  001754                     u1881:
   795  001754  EFA5  F00B         	goto	l85
   796  001758                     u1880:
   797  001758                     
   798                           ;main.c: 100: initTabVue();
   799  001758  ECBA  F00A         	call	_initTabVue	;wreg free
   800                           
   801                           ;main.c: 101: afficheTabVue();
   802  00175C  EC5F  F00D         	call	_afficheTabVue	;wreg free
   803  001760                     
   804                           ;main.c: 102: rempliMines(nbMines);
   805  001760  C0D9  F0CC         	movff	main@nbMines,rempliMines@nb
   806  001764  C0DA  F0CD         	movff	main@nbMines+1,rempliMines@nb+1
   807  001768  ECB9  F008         	call	_rempliMines	;wreg free
   808  00176C                     
   809                           ;main.c: 103: metToucheCombien();
   810  00176C  EC6C  F009         	call	_metToucheCombien	;wreg free
   811  001770                     l2478:
   812                           
   813                           ;main.c: 104: };main.c: 105: afficheTabVue();
   814  001770  EC5F  F00D         	call	_afficheTabVue	;wreg free
   815  001774                     l2480:
   816                           
   817                           ;main.c: 106: };main.c: 107: _delay((unsigned long)((100)*(1000000/4000.0)));
   818  001774  0E21               	movlw	33
   819  001776  0100               	movlb	0	; force () banked
   820  001778  6FD6               	movwf	??_main& (0+255),b
   821  00177A  0E76               	movlw	118
   822  00177C                     u1897:
   823  00177C  2EE8               	decfsz	wreg,f,c
   824  00177E  D7FE               	bra	u1897
   825  001780  2FD6               	decfsz	??_main& (0+255),f,b
   826  001782  D7FC               	bra	u1897
   827  001784  F000               	nop	
   828  001786  EF64  F00B         	goto	l2456
   829  00178A  EF00  F000         	goto	start
   830  00178E                     __end_of_main:
   831                           	opt callstack 0
   832                           
   833 ;; *************** function _rempliMines *****************
   834 ;; Defined at:
   835 ;;		line 163 in file "main.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  nb              2   20[BANK0 ] int 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  i               1   25[BANK0 ] unsigned char 
   840 ;;  i               2   28[BANK0 ] int 
   841 ;;  y               1   27[BANK0 ] unsigned char 
   842 ;;  x               1   26[BANK0 ] unsigned char 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   852 ;;      Params:         0       2       0       0       0       0       0
   853 ;;      Locals:         0       5       0       0       0       0       0
   854 ;;      Temps:          0       3       0       0       0       0       0
   855 ;;      Totals:         0      10       0       0       0       0       0
   856 ;;Total ram usage:       10 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    2
   859 ;; This function calls:
   860 ;;		___awmod
   861 ;;		___wmul
   862 ;;		_rand
   863 ;;		_strcpy
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text1
   870  001172                     __ptext1:
   871                           	opt callstack 0
   872  001172                     _rempliMines:
   873                           	opt callstack 28
   874  001172                     
   875                           ;main.c: 165: char x;;main.c: 166: char y;;main.c: 168: for(int i=0;i<4;i++)
   876  001172  0E00               	movlw	0
   877  001174  0100               	movlb	0	; force () banked
   878  001176  6FD5               	movwf	(rempliMines@i+1)& (0+255),b
   879  001178  0E00               	movlw	0
   880  00117A  6FD4               	movwf	rempliMines@i& (0+255),b
   881  00117C                     
   882                           ; BSR set to: 0
   883  00117C  0100               	movlb	0	; force () banked
   884  00117E  BFD5               	btfsc	(rempliMines@i+1)& (0+255),7,b
   885  001180  EFCB  F008         	goto	u1551
   886  001184  51D5               	movf	(rempliMines@i+1)& (0+255),w,b
   887  001186  E109               	bnz	u1550
   888  001188  0E04               	movlw	4
   889  00118A  5DD4               	subwf	rempliMines@i& (0+255),w,b
   890  00118C  A0D8               	btfss	status,0,c
   891  00118E  EFCB  F008         	goto	u1551
   892  001192  EFCD  F008         	goto	u1550
   893  001196                     u1551:
   894  001196  EFCF  F008         	goto	l2288
   895  00119A                     u1550:
   896  00119A  EFFD  F008         	goto	l2294
   897  00119E                     l2288:
   898                           
   899                           ; BSR set to: 0
   900                           ;main.c: 169: {;main.c: 170: strcpy(m_tabMines[i],"                    ");
   901  00119E  C0D4  F0B8         	movff	rempliMines@i,___wmul@multiplier
   902  0011A2  C0D5  F0B9         	movff	rempliMines@i+1,___wmul@multiplier+1
   903  0011A6  0E00               	movlw	0
   904  0011A8  0100               	movlb	0	; force () banked
   905  0011AA  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
   906  0011AC  0E15               	movlw	21
   907  0011AE  6FBA               	movwf	___wmul@multiplicand& (0+255),b
   908  0011B0  EC67  F010         	call	___wmul	;wreg free
   909  0011B4  0E64               	movlw	low _m_tabMines
   910  0011B6  0100               	movlb	0	; force () banked
   911  0011B8  25B8               	addwf	?___wmul& (0+255),w,b
   912  0011BA  0100               	movlb	0	; force () banked
   913  0011BC  6FBE               	movwf	strcpy@to& (0+255),b
   914  0011BE  0E00               	movlw	high _m_tabMines
   915  0011C0  0100               	movlb	0	; force () banked
   916  0011C2  21B9               	addwfc	(?___wmul+1)& (0+255),w,b
   917  0011C4  0100               	movlb	0	; force () banked
   918  0011C6  6FBF               	movwf	(strcpy@to+1)& (0+255),b
   919  0011C8  0E01               	movlw	low STR_1
   920  0011CA  0100               	movlb	0	; force () banked
   921  0011CC  6FC0               	movwf	strcpy@from& (0+255),b
   922  0011CE  0E06               	movlw	high STR_1
   923  0011D0  6FC1               	movwf	(strcpy@from+1)& (0+255),b
   924  0011D2  ECBE  F00F         	call	_strcpy	;wreg free
   925  0011D6  0100               	movlb	0	; force () banked
   926  0011D8  4BD4               	infsnz	rempliMines@i& (0+255),f,b
   927  0011DA  2BD5               	incf	(rempliMines@i+1)& (0+255),f,b
   928  0011DC                     
   929                           ; BSR set to: 0
   930  0011DC  0100               	movlb	0	; force () banked
   931  0011DE  BFD5               	btfsc	(rempliMines@i+1)& (0+255),7,b
   932  0011E0  EFFB  F008         	goto	u1561
   933  0011E4  51D5               	movf	(rempliMines@i+1)& (0+255),w,b
   934  0011E6  E109               	bnz	u1560
   935  0011E8  0E04               	movlw	4
   936  0011EA  5DD4               	subwf	rempliMines@i& (0+255),w,b
   937  0011EC  A0D8               	btfss	status,0,c
   938  0011EE  EFFB  F008         	goto	u1561
   939  0011F2  EFFD  F008         	goto	u1560
   940  0011F6                     u1561:
   941  0011F6  EFCF  F008         	goto	l2288
   942  0011FA                     u1560:
   943  0011FA                     l2294:
   944                           
   945                           ; BSR set to: 0
   946                           ;main.c: 171: };main.c: 172: for(char i=0;i<nb;i++)
   947  0011FA  0E00               	movlw	0
   948  0011FC  0100               	movlb	0	; force () banked
   949  0011FE  6FD1               	movwf	rempliMines@i_497& (0+255),b
   950  001200  EF53  F009         	goto	l2304
   951  001204                     l2296:
   952                           
   953                           ; BSR set to: 0
   954                           ;main.c: 175: {;main.c: 176: y=rand()%4;
   955  001204  ECF3  F00E         	call	_rand	;wreg free
   956  001208  0100               	movlb	0	; force () banked
   957  00120A  51C4               	movf	?_rand& (0+255),w,b
   958  00120C  0B03               	andlw	3
   959  00120E  0100               	movlb	0	; force () banked
   960  001210  6FD3               	movwf	rempliMines@y& (0+255),b
   961                           
   962                           ;main.c: 177: x=rand()%20;
   963  001212  ECF3  F00E         	call	_rand	;wreg free
   964  001216  C0C4  F0C6         	movff	?_rand,___awmod@dividend
   965  00121A  C0C5  F0C7         	movff	?_rand+1,___awmod@dividend+1
   966  00121E  0E00               	movlw	0
   967  001220  0100               	movlb	0	; force () banked
   968  001222  6FC9               	movwf	(___awmod@divisor+1)& (0+255),b
   969  001224  0E14               	movlw	20
   970  001226  6FC8               	movwf	___awmod@divisor& (0+255),b
   971  001228  ECB5  F00C         	call	___awmod	;wreg free
   972  00122C  0100               	movlb	0	; force () banked
   973  00122E  51C6               	movf	?___awmod& (0+255),w,b
   974  001230  0100               	movlb	0	; force () banked
   975  001232  6FD2               	movwf	rempliMines@x& (0+255),b
   976  001234                     
   977                           ; BSR set to: 0
   978                           ;main.c: 178: }while(m_tabMines[y][x]!=' ');
   979  001234  0100               	movlb	0	; force () banked
   980  001236  51D3               	movf	rempliMines@y& (0+255),w,b
   981  001238  0D15               	mullw	21
   982  00123A  0E64               	movlw	low _m_tabMines
   983  00123C  0100               	movlb	0	; force () banked
   984  00123E  6FCE               	movwf	??_rempliMines& (0+255),b
   985  001240  0E00               	movlw	high _m_tabMines
   986  001242  6FCF               	movwf	(??_rempliMines+1)& (0+255),b
   987  001244  50F3               	movf	243,w,c
   988  001246  27CE               	addwf	??_rempliMines& (0+255),f,b
   989  001248  50F4               	movf	244,w,c
   990  00124A  23CF               	addwfc	(??_rempliMines+1)& (0+255),f,b
   991  00124C  0100               	movlb	0	; force () banked
   992  00124E  51D2               	movf	rempliMines@x& (0+255),w,b
   993  001250  0100               	movlb	0	; force () banked
   994  001252  25CE               	addwf	??_rempliMines& (0+255),w,b
   995  001254  6ED9               	movwf	fsr2l,c
   996  001256  0100               	movlb	0	; force () banked
   997  001258  0E00               	movlw	0
   998  00125A  0100               	movlb	0	; force () banked
   999  00125C  21CF               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1000  00125E  6EDA               	movwf	fsr2h,c
  1001  001260  0E20               	movlw	32
  1002  001262  18DE               	xorwf	postinc2,w,c
  1003  001264  A4D8               	btfss	status,2,c
  1004  001266  EF37  F009         	goto	u1571
  1005  00126A  EF39  F009         	goto	u1570
  1006  00126E                     u1571:
  1007  00126E  EF02  F009         	goto	l2296
  1008  001272                     u1570:
  1009  001272                     
  1010                           ; BSR set to: 0
  1011                           ;main.c: 179: m_tabMines[y][x]=2;
  1012  001272  0100               	movlb	0	; force () banked
  1013  001274  51D3               	movf	rempliMines@y& (0+255),w,b
  1014  001276  0D15               	mullw	21
  1015  001278  0E64               	movlw	low _m_tabMines
  1016  00127A  0100               	movlb	0	; force () banked
  1017  00127C  6FCE               	movwf	??_rempliMines& (0+255),b
  1018  00127E  0E00               	movlw	high _m_tabMines
  1019  001280  6FCF               	movwf	(??_rempliMines+1)& (0+255),b
  1020  001282  50F3               	movf	243,w,c
  1021  001284  27CE               	addwf	??_rempliMines& (0+255),f,b
  1022  001286  50F4               	movf	244,w,c
  1023  001288  23CF               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1024  00128A  0100               	movlb	0	; force () banked
  1025  00128C  51D2               	movf	rempliMines@x& (0+255),w,b
  1026  00128E  0100               	movlb	0	; force () banked
  1027  001290  25CE               	addwf	??_rempliMines& (0+255),w,b
  1028  001292  6ED9               	movwf	fsr2l,c
  1029  001294  0100               	movlb	0	; force () banked
  1030  001296  0E00               	movlw	0
  1031  001298  0100               	movlb	0	; force () banked
  1032  00129A  21CF               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1033  00129C  6EDA               	movwf	fsr2h,c
  1034  00129E  0E02               	movlw	2
  1035  0012A0  6EDF               	movwf	indf2,c
  1036  0012A2                     
  1037                           ; BSR set to: 0
  1038  0012A2  0100               	movlb	0	; force () banked
  1039  0012A4  2BD1               	incf	rempliMines@i_497& (0+255),f,b
  1040  0012A6                     l2304:
  1041                           
  1042                           ; BSR set to: 0
  1043  0012A6  0100               	movlb	0	; force () banked
  1044  0012A8  51D1               	movf	rempliMines@i_497& (0+255),w,b
  1045  0012AA  0100               	movlb	0	; force () banked
  1046  0012AC  6FCE               	movwf	??_rempliMines& (0+255),b
  1047  0012AE  6BCF               	clrf	(??_rempliMines+1)& (0+255),b
  1048  0012B0  0100               	movlb	0	; force () banked
  1049  0012B2  51CC               	movf	rempliMines@nb& (0+255),w,b
  1050  0012B4  0100               	movlb	0	; force () banked
  1051  0012B6  5DCE               	subwf	??_rempliMines& (0+255),w,b
  1052  0012B8  51CF               	movf	(??_rempliMines+1)& (0+255),w,b
  1053  0012BA  0A80               	xorlw	128
  1054  0012BC  6FD0               	movwf	(??_rempliMines+2)& (0+255),b
  1055  0012BE  0100               	movlb	0	; force () banked
  1056  0012C0  51CD               	movf	(rempliMines@nb+1)& (0+255),w,b
  1057  0012C2  0A80               	xorlw	128
  1058  0012C4  0100               	movlb	0	; force () banked
  1059  0012C6  59D0               	subwfb	(??_rempliMines+2)& (0+255),w,b
  1060  0012C8  A0D8               	btfss	status,0,c
  1061  0012CA  EF69  F009         	goto	u1581
  1062  0012CE  EF6B  F009         	goto	u1580
  1063  0012D2                     u1581:
  1064  0012D2  EF02  F009         	goto	l2296
  1065  0012D6                     u1580:
  1066  0012D6                     
  1067                           ; BSR set to: 0
  1068  0012D6  0012               	return		;funcret
  1069  0012D8                     __end_of_rempliMines:
  1070                           	opt callstack 0
  1071                           
  1072 ;; *************** function _strcpy *****************
  1073 ;; Defined at:
  1074 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  to              2    6[BANK0 ] PTR unsigned char 
  1077 ;;		 -> m_tabMines(84), 
  1078 ;;  from            2    8[BANK0 ] PTR const unsigned char 
  1079 ;;		 -> STR_1(21), 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  cp              2   10[BANK0 ] PTR unsigned char 
  1082 ;;		 -> m_tabMines(84), 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  2    6[BANK0 ] PTR unsigned char 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1092 ;;      Params:         0       4       0       0       0       0       0
  1093 ;;      Locals:         0       2       0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0
  1095 ;;      Totals:         0       6       0       0       0       0       0
  1096 ;;Total ram usage:        6 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_rempliMines
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text2
  1106  001F7C                     __ptext2:
  1107                           	opt callstack 0
  1108  001F7C                     _strcpy:
  1109                           	opt callstack 29
  1110  001F7C  C0BE  F0C2         	movff	strcpy@to,strcpy@cp
  1111  001F80  C0BF  F0C3         	movff	strcpy@to+1,strcpy@cp+1
  1112  001F84  EFC9  F00F         	goto	l1984
  1113  001F88                     l1982:
  1114  001F88  0100               	movlb	0	; () banked
  1115  001F8A  4BC2               	infsnz	strcpy@cp& (0+255),f,b
  1116  001F8C  2BC3               	incf	(strcpy@cp+1)& (0+255),f,b
  1117  001F8E  4BC0               	infsnz	strcpy@from& (0+255),f,b
  1118  001F90  2BC1               	incf	(strcpy@from+1)& (0+255),f,b
  1119  001F92                     l1984:
  1120  001F92  C0C0  FFF6         	movff	strcpy@from,tblptrl
  1121  001F96  C0C1  FFF7         	movff	strcpy@from+1,tblptrh
  1122  001F9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1123  001F9A  6AF8               	clrf	tblptru,c
  1124  001F9C                     	endif
  1125  001F9C                     	if	0	;tblptru may be non-zero
  1126  001F9C                     	endif
  1127  001F9C  C0C2  FFD9         	movff	strcpy@cp,fsr2l
  1128  001FA0  C0C3  FFDA         	movff	strcpy@cp+1,fsr2h
  1129  001FA4  0008               	tblrd		*
  1130  001FA6  CFF5 FFDF          	movff	tablat,indf2
  1131  001FAA  50DF               	movf	indf2,w,c
  1132  001FAC  A4D8               	btfss	status,2,c
  1133  001FAE  EFDB  F00F         	goto	u1041
  1134  001FB2  EFDD  F00F         	goto	u1040
  1135  001FB6                     u1041:
  1136  001FB6  EFC4  F00F         	goto	l1982
  1137  001FBA                     u1040:
  1138  001FBA  C0BE  F0BE         	movff	strcpy@to,?_strcpy
  1139  001FBE  C0BF  F0BF         	movff	strcpy@to+1,?_strcpy+1
  1140  001FC2  0012               	return		;funcret
  1141  001FC4                     __end_of_strcpy:
  1142                           	opt callstack 0
  1143                           
  1144 ;; *************** function _rand *****************
  1145 ;; Defined at:
  1146 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  2   12[BANK0 ] int 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1160 ;;      Params:         0       2       0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0       0
  1163 ;;      Totals:         0       2       0       0       0       0       0
  1164 ;;Total ram usage:        2 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    1
  1167 ;; This function calls:
  1168 ;;		___lmul
  1169 ;; This function is called by:
  1170 ;;		_rempliMines
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text3
  1175  001DE6                     __ptext3:
  1176                           	opt callstack 0
  1177  001DE6                     _rand:
  1178                           	opt callstack 28
  1179  001DE6  C060  F0B8         	movff	_randx,___lmul@multiplier
  1180  001DEA  C061  F0B9         	movff	_randx+1,___lmul@multiplier+1
  1181  001DEE  C062  F0BA         	movff	_randx+2,___lmul@multiplier+2
  1182  001DF2  C063  F0BB         	movff	_randx+3,___lmul@multiplier+3
  1183  001DF6  0E6D               	movlw	109
  1184  001DF8  0100               	movlb	0	; () banked
  1185  001DFA  6FBC               	movwf	___lmul@multiplicand& (0+255),b
  1186  001DFC  0E4E               	movlw	78
  1187  001DFE  6FBD               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1188  001E00  0EC6               	movlw	198
  1189  001E02  6FBE               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1190  001E04  0E41               	movlw	65
  1191  001E06  6FBF               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1192  001E08  EC26  F00E         	call	___lmul	;wreg free
  1193  001E0C  C0B8  F060         	movff	?___lmul,_randx
  1194  001E10  C0B9  F061         	movff	?___lmul+1,_randx+1
  1195  001E14  C0BA  F062         	movff	?___lmul+2,_randx+2
  1196  001E18  C0BB  F063         	movff	?___lmul+3,_randx+3
  1197  001E1C  0E39               	movlw	57
  1198  001E1E  0100               	movlb	0	; () banked
  1199  001E20  2760               	addwf	_randx& (0+255),f,b
  1200  001E22  0E30               	movlw	48
  1201  001E24  2361               	addwfc	(_randx+1)& (0+255),f,b
  1202  001E26  0E00               	movlw	0
  1203  001E28  2362               	addwfc	(_randx+2)& (0+255),f,b
  1204  001E2A  0E00               	movlw	0
  1205  001E2C  2363               	addwfc	(_randx+3)& (0+255),f,b
  1206  001E2E                     
  1207                           ; BSR set to: 0
  1208  001E2E  0EFF               	movlw	255
  1209  001E30  1562               	andwf	(_randx+2)& (0+255),w,b
  1210  001E32  6FC4               	movwf	?_rand& (0+255),b
  1211  001E34  0E7F               	movlw	127
  1212  001E36  1563               	andwf	(_randx+3)& (0+255),w,b
  1213  001E38  6FC5               	movwf	(?_rand+1)& (0+255),b
  1214  001E3A                     
  1215                           ; BSR set to: 0
  1216  001E3A  0012               	return		;funcret
  1217  001E3C                     __end_of_rand:
  1218                           	opt callstack 0
  1219                           
  1220 ;; *************** function ___lmul *****************
  1221 ;; Defined at:
  1222 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1225 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  product         4    8[BANK0 ] unsigned long 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  4    0[BANK0 ] unsigned long 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, status,0
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1237 ;;      Params:         0       8       0       0       0       0       0
  1238 ;;      Locals:         0       4       0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0
  1240 ;;      Totals:         0      12       0       0       0       0       0
  1241 ;;Total ram usage:       12 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_rand
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text4
  1251  001C4C                     __ptext4:
  1252                           	opt callstack 0
  1253  001C4C                     ___lmul:
  1254                           	opt callstack 28
  1255  001C4C  0E00               	movlw	0
  1256  001C4E  0100               	movlb	0	; () banked
  1257  001C50  6FC0               	movwf	___lmul@product& (0+255),b
  1258  001C52  0E00               	movlw	0
  1259  001C54  6FC1               	movwf	(___lmul@product+1)& (0+255),b
  1260  001C56  0E00               	movlw	0
  1261  001C58  6FC2               	movwf	(___lmul@product+2)& (0+255),b
  1262  001C5A  0E00               	movlw	0
  1263  001C5C  6FC3               	movwf	(___lmul@product+3)& (0+255),b
  1264  001C5E                     l1950:
  1265                           
  1266                           ; BSR set to: 0
  1267  001C5E  A1B8               	btfss	___lmul@multiplier& (0+255),0,b
  1268  001C60  EF34  F00E         	goto	u1011
  1269  001C64  EF36  F00E         	goto	u1010
  1270  001C68                     u1011:
  1271  001C68  EF3E  F00E         	goto	l1954
  1272  001C6C                     u1010:
  1273  001C6C                     
  1274                           ; BSR set to: 0
  1275  001C6C  51BC               	movf	___lmul@multiplicand& (0+255),w,b
  1276  001C6E  27C0               	addwf	___lmul@product& (0+255),f,b
  1277  001C70  51BD               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1278  001C72  23C1               	addwfc	(___lmul@product+1)& (0+255),f,b
  1279  001C74  51BE               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1280  001C76  23C2               	addwfc	(___lmul@product+2)& (0+255),f,b
  1281  001C78  51BF               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1282  001C7A  23C3               	addwfc	(___lmul@product+3)& (0+255),f,b
  1283  001C7C                     l1954:
  1284                           
  1285                           ; BSR set to: 0
  1286  001C7C  90D8               	bcf	status,0,c
  1287  001C7E  37BC               	rlcf	___lmul@multiplicand& (0+255),f,b
  1288  001C80  37BD               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1289  001C82  37BE               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1290  001C84  37BF               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1291  001C86                     
  1292                           ; BSR set to: 0
  1293  001C86  90D8               	bcf	status,0,c
  1294  001C88  33BB               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1295  001C8A  33BA               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1296  001C8C  33B9               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1297  001C8E  33B8               	rrcf	___lmul@multiplier& (0+255),f,b
  1298  001C90  51B8               	movf	___lmul@multiplier& (0+255),w,b
  1299  001C92  11B9               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1300  001C94  11BA               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1301  001C96  11BB               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1302  001C98  A4D8               	btfss	status,2,c
  1303  001C9A  EF51  F00E         	goto	u1021
  1304  001C9E  EF53  F00E         	goto	u1020
  1305  001CA2                     u1021:
  1306  001CA2  EF2F  F00E         	goto	l1950
  1307  001CA6                     u1020:
  1308  001CA6                     
  1309                           ; BSR set to: 0
  1310  001CA6  C0C0  F0B8         	movff	___lmul@product,?___lmul
  1311  001CAA  C0C1  F0B9         	movff	___lmul@product+1,?___lmul+1
  1312  001CAE  C0C2  F0BA         	movff	___lmul@product+2,?___lmul+2
  1313  001CB2  C0C3  F0BB         	movff	___lmul@product+3,?___lmul+3
  1314  001CB6                     
  1315                           ; BSR set to: 0
  1316  001CB6  0012               	return		;funcret
  1317  001CB8                     __end_of___lmul:
  1318                           	opt callstack 0
  1319                           
  1320 ;; *************** function ___awmod *****************
  1321 ;; Defined at:
  1322 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  dividend        2   14[BANK0 ] int 
  1325 ;;  divisor         2   16[BANK0 ] int 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  sign            1   19[BANK0 ] unsigned char 
  1328 ;;  counter         1   18[BANK0 ] unsigned char 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  2   14[BANK0 ] int 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1338 ;;      Params:         0       4       0       0       0       0       0
  1339 ;;      Locals:         0       2       0       0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0
  1341 ;;      Totals:         0       6       0       0       0       0       0
  1342 ;;Total ram usage:        6 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_rempliMines
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text5
  1352  00196A                     __ptext5:
  1353                           	opt callstack 0
  1354  00196A                     ___awmod:
  1355                           	opt callstack 29
  1356  00196A  0E00               	movlw	0
  1357  00196C  0100               	movlb	0	; () banked
  1358  00196E  6FCB               	movwf	___awmod@sign& (0+255),b
  1359  001970                     
  1360                           ; BSR set to: 0
  1361  001970  BFC7               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1362  001972  EFBF  F00C         	goto	u1430
  1363  001976  EFBD  F00C         	goto	u1431
  1364  00197A                     u1431:
  1365  00197A  EFC5  F00C         	goto	l2174
  1366  00197E                     u1430:
  1367  00197E                     
  1368                           ; BSR set to: 0
  1369  00197E  6DC6               	negf	___awmod@dividend& (0+255),b
  1370  001980  1FC7               	comf	(___awmod@dividend+1)& (0+255),f,b
  1371  001982  B0D8               	btfsc	status,0,c
  1372  001984  2BC7               	incf	(___awmod@dividend+1)& (0+255),f,b
  1373  001986                     
  1374                           ; BSR set to: 0
  1375  001986  0E01               	movlw	1
  1376  001988  6FCB               	movwf	___awmod@sign& (0+255),b
  1377  00198A                     l2174:
  1378                           
  1379                           ; BSR set to: 0
  1380  00198A  BFC9               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1381  00198C  EFCC  F00C         	goto	u1440
  1382  001990  EFCA  F00C         	goto	u1441
  1383  001994                     u1441:
  1384  001994  EFD0  F00C         	goto	l2178
  1385  001998                     u1440:
  1386  001998                     
  1387                           ; BSR set to: 0
  1388  001998  6DC8               	negf	___awmod@divisor& (0+255),b
  1389  00199A  1FC9               	comf	(___awmod@divisor+1)& (0+255),f,b
  1390  00199C  B0D8               	btfsc	status,0,c
  1391  00199E  2BC9               	incf	(___awmod@divisor+1)& (0+255),f,b
  1392  0019A0                     l2178:
  1393                           
  1394                           ; BSR set to: 0
  1395  0019A0  51C8               	movf	___awmod@divisor& (0+255),w,b
  1396  0019A2  11C9               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1397  0019A4  B4D8               	btfsc	status,2,c
  1398  0019A6  EFD7  F00C         	goto	u1451
  1399  0019AA  EFD9  F00C         	goto	u1450
  1400  0019AE                     u1451:
  1401  0019AE  EFFD  F00C         	goto	l2194
  1402  0019B2                     u1450:
  1403  0019B2                     
  1404                           ; BSR set to: 0
  1405  0019B2  0E01               	movlw	1
  1406  0019B4  6FCA               	movwf	___awmod@counter& (0+255),b
  1407  0019B6  EFE1  F00C         	goto	l2184
  1408  0019BA                     l2182:
  1409                           
  1410                           ; BSR set to: 0
  1411  0019BA  90D8               	bcf	status,0,c
  1412  0019BC  37C8               	rlcf	___awmod@divisor& (0+255),f,b
  1413  0019BE  37C9               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1414  0019C0  2BCA               	incf	___awmod@counter& (0+255),f,b
  1415  0019C2                     l2184:
  1416                           
  1417                           ; BSR set to: 0
  1418  0019C2  AFC9               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1419  0019C4  EFE6  F00C         	goto	u1461
  1420  0019C8  EFE8  F00C         	goto	u1460
  1421  0019CC                     u1461:
  1422  0019CC  EFDD  F00C         	goto	l2182
  1423  0019D0                     u1460:
  1424  0019D0                     l2186:
  1425                           
  1426                           ; BSR set to: 0
  1427  0019D0  51C8               	movf	___awmod@divisor& (0+255),w,b
  1428  0019D2  5DC6               	subwf	___awmod@dividend& (0+255),w,b
  1429  0019D4  51C9               	movf	(___awmod@divisor+1)& (0+255),w,b
  1430  0019D6  59C7               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1431  0019D8  A0D8               	btfss	status,0,c
  1432  0019DA  EFF1  F00C         	goto	u1471
  1433  0019DE  EFF3  F00C         	goto	u1470
  1434  0019E2                     u1471:
  1435  0019E2  EFF7  F00C         	goto	l2190
  1436  0019E6                     u1470:
  1437  0019E6                     
  1438                           ; BSR set to: 0
  1439  0019E6  51C8               	movf	___awmod@divisor& (0+255),w,b
  1440  0019E8  5FC6               	subwf	___awmod@dividend& (0+255),f,b
  1441  0019EA  51C9               	movf	(___awmod@divisor+1)& (0+255),w,b
  1442  0019EC  5BC7               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1443  0019EE                     l2190:
  1444                           
  1445                           ; BSR set to: 0
  1446  0019EE  90D8               	bcf	status,0,c
  1447  0019F0  33C9               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1448  0019F2  33C8               	rrcf	___awmod@divisor& (0+255),f,b
  1449  0019F4                     
  1450                           ; BSR set to: 0
  1451  0019F4  2FCA               	decfsz	___awmod@counter& (0+255),f,b
  1452  0019F6  EFE8  F00C         	goto	l2186
  1453  0019FA                     l2194:
  1454                           
  1455                           ; BSR set to: 0
  1456  0019FA  51CB               	movf	___awmod@sign& (0+255),w,b
  1457  0019FC  B4D8               	btfsc	status,2,c
  1458  0019FE  EF03  F00D         	goto	u1481
  1459  001A02  EF05  F00D         	goto	u1480
  1460  001A06                     u1481:
  1461  001A06  EF09  F00D         	goto	l2198
  1462  001A0A                     u1480:
  1463  001A0A                     
  1464                           ; BSR set to: 0
  1465  001A0A  6DC6               	negf	___awmod@dividend& (0+255),b
  1466  001A0C  1FC7               	comf	(___awmod@dividend+1)& (0+255),f,b
  1467  001A0E  B0D8               	btfsc	status,0,c
  1468  001A10  2BC7               	incf	(___awmod@dividend+1)& (0+255),f,b
  1469  001A12                     l2198:
  1470                           
  1471                           ; BSR set to: 0
  1472  001A12  C0C6  F0C6         	movff	___awmod@dividend,?___awmod
  1473  001A16  C0C7  F0C7         	movff	___awmod@dividend+1,?___awmod+1
  1474  001A1A                     
  1475                           ; BSR set to: 0
  1476  001A1A  0012               	return		;funcret
  1477  001A1C                     __end_of___awmod:
  1478                           	opt callstack 0
  1479                           
  1480 ;; *************** function _metToucheCombien *****************
  1481 ;; Defined at:
  1482 ;;		line 194 in file "main.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  j               1   20[BANK0 ] unsigned char 
  1487 ;;  i               1   19[BANK0 ] unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1497 ;;      Params:         0       0       0       0       0       0       0
  1498 ;;      Locals:         0       2       0       0       0       0       0
  1499 ;;      Temps:          0       3       0       0       0       0       0
  1500 ;;      Totals:         0       5       0       0       0       0       0
  1501 ;;Total ram usage:        5 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    2
  1504 ;; This function calls:
  1505 ;;		_calculToucheCombien
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text6
  1512  0012D8                     __ptext6:
  1513                           	opt callstack 0
  1514  0012D8                     _metToucheCombien:
  1515                           	opt callstack 28
  1516  0012D8                     
  1517                           ;main.c: 196: for(char i=0;i<4;i++)
  1518  0012D8  0E00               	movlw	0
  1519  0012DA  0100               	movlb	0	; force () banked
  1520  0012DC  6FCB               	movwf	metToucheCombien@i& (0+255),b
  1521  0012DE                     
  1522                           ; BSR set to: 0
  1523  0012DE  0E03               	movlw	3
  1524  0012E0  0100               	movlb	0	; force () banked
  1525  0012E2  65CB               	cpfsgt	metToucheCombien@i& (0+255),b
  1526  0012E4  EF76  F009         	goto	u1591
  1527  0012E8  EF78  F009         	goto	u1590
  1528  0012EC                     u1591:
  1529  0012EC  EF7A  F009         	goto	l2312
  1530  0012F0                     u1590:
  1531  0012F0  EF1A  F00A         	goto	l126
  1532  0012F4                     l2312:
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;main.c: 197: {;main.c: 198: for(char j=0;j<20;j++)
  1536  0012F4  0E00               	movlw	0
  1537  0012F6  0100               	movlb	0	; force () banked
  1538  0012F8  6FCC               	movwf	metToucheCombien@j& (0+255),b
  1539  0012FA                     
  1540                           ; BSR set to: 0
  1541  0012FA  0E13               	movlw	19
  1542  0012FC  0100               	movlb	0	; force () banked
  1543  0012FE  65CC               	cpfsgt	metToucheCombien@j& (0+255),b
  1544  001300  EF84  F009         	goto	u1601
  1545  001304  EF86  F009         	goto	u1600
  1546  001308                     u1601:
  1547  001308  EF88  F009         	goto	l2318
  1548  00130C                     u1600:
  1549  00130C  EF0F  F00A         	goto	l2330
  1550  001310                     l2318:
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;main.c: 199: {;main.c: 200: if(m_tabMines[i][j]!=2)
  1554  001310  0100               	movlb	0	; force () banked
  1555  001312  51CB               	movf	metToucheCombien@i& (0+255),w,b
  1556  001314  0D15               	mullw	21
  1557  001316  0E64               	movlw	low _m_tabMines
  1558  001318  0100               	movlb	0	; force () banked
  1559  00131A  6FC8               	movwf	??_metToucheCombien& (0+255),b
  1560  00131C  0E00               	movlw	high _m_tabMines
  1561  00131E  6FC9               	movwf	(??_metToucheCombien+1)& (0+255),b
  1562  001320  50F3               	movf	243,w,c
  1563  001322  27C8               	addwf	??_metToucheCombien& (0+255),f,b
  1564  001324  50F4               	movf	244,w,c
  1565  001326  23C9               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1566  001328  0100               	movlb	0	; force () banked
  1567  00132A  51CC               	movf	metToucheCombien@j& (0+255),w,b
  1568  00132C  0100               	movlb	0	; force () banked
  1569  00132E  25C8               	addwf	??_metToucheCombien& (0+255),w,b
  1570  001330  6ED9               	movwf	fsr2l,c
  1571  001332  0100               	movlb	0	; force () banked
  1572  001334  0E00               	movlw	0
  1573  001336  0100               	movlb	0	; force () banked
  1574  001338  21C9               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1575  00133A  6EDA               	movwf	fsr2h,c
  1576  00133C  0E02               	movlw	2
  1577  00133E  18DE               	xorwf	postinc2,w,c
  1578  001340  B4D8               	btfsc	status,2,c
  1579  001342  EFA5  F009         	goto	u1611
  1580  001346  EFA7  F009         	goto	u1610
  1581  00134A                     u1611:
  1582  00134A  EF04  F00A         	goto	l2326
  1583  00134E                     u1610:
  1584  00134E                     
  1585                           ; BSR set to: 0
  1586                           ;main.c: 201: {;main.c: 202: m_tabMines[i][j]=(calculToucheCombien(i,j)+0x30);
  1587  00134E  C0CB  F0BE         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1588  001352  0100               	movlb	0	; force () banked
  1589  001354  6BBF               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1590  001356  C0CC  F0C0         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1591  00135A  0100               	movlb	0	; force () banked
  1592  00135C  6BC1               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1593  00135E  EC3D  F006         	call	_calculToucheCombien	;wreg free
  1594  001362  0100               	movlb	0	; force () banked
  1595  001364  6FC8               	movwf	??_metToucheCombien& (0+255),b
  1596  001366  0E30               	movlw	48
  1597  001368  27C8               	addwf	??_metToucheCombien& (0+255),f,b
  1598  00136A  0100               	movlb	0	; force () banked
  1599  00136C  51CB               	movf	metToucheCombien@i& (0+255),w,b
  1600  00136E  0D15               	mullw	21
  1601  001370  0E64               	movlw	low _m_tabMines
  1602  001372  0100               	movlb	0	; force () banked
  1603  001374  6FC9               	movwf	(??_metToucheCombien+1)& (0+255),b
  1604  001376  0E00               	movlw	high _m_tabMines
  1605  001378  6FCA               	movwf	(??_metToucheCombien+2)& (0+255),b
  1606  00137A  50F3               	movf	243,w,c
  1607  00137C  27C9               	addwf	(??_metToucheCombien+1)& (0+255),f,b
  1608  00137E  50F4               	movf	244,w,c
  1609  001380  23CA               	addwfc	(??_metToucheCombien+2)& (0+255),f,b
  1610  001382  0100               	movlb	0	; force () banked
  1611  001384  51CC               	movf	metToucheCombien@j& (0+255),w,b
  1612  001386  0100               	movlb	0	; force () banked
  1613  001388  25C9               	addwf	(??_metToucheCombien+1)& (0+255),w,b
  1614  00138A  6ED9               	movwf	fsr2l,c
  1615  00138C  0100               	movlb	0	; force () banked
  1616  00138E  0E00               	movlw	0
  1617  001390  0100               	movlb	0	; force () banked
  1618  001392  21CA               	addwfc	(??_metToucheCombien+2)& (0+255),w,b
  1619  001394  6EDA               	movwf	fsr2h,c
  1620  001396  C0C8  FFDF         	movff	??_metToucheCombien,indf2
  1621  00139A                     
  1622                           ; BSR set to: 0
  1623                           ;main.c: 203: if(m_tabMines[i][j]==0x30)
  1624  00139A  0100               	movlb	0	; force () banked
  1625  00139C  51CB               	movf	metToucheCombien@i& (0+255),w,b
  1626  00139E  0D15               	mullw	21
  1627  0013A0  0E64               	movlw	low _m_tabMines
  1628  0013A2  0100               	movlb	0	; force () banked
  1629  0013A4  6FC8               	movwf	??_metToucheCombien& (0+255),b
  1630  0013A6  0E00               	movlw	high _m_tabMines
  1631  0013A8  6FC9               	movwf	(??_metToucheCombien+1)& (0+255),b
  1632  0013AA  50F3               	movf	243,w,c
  1633  0013AC  27C8               	addwf	??_metToucheCombien& (0+255),f,b
  1634  0013AE  50F4               	movf	244,w,c
  1635  0013B0  23C9               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1636  0013B2  0100               	movlb	0	; force () banked
  1637  0013B4  51CC               	movf	metToucheCombien@j& (0+255),w,b
  1638  0013B6  0100               	movlb	0	; force () banked
  1639  0013B8  25C8               	addwf	??_metToucheCombien& (0+255),w,b
  1640  0013BA  6ED9               	movwf	fsr2l,c
  1641  0013BC  0100               	movlb	0	; force () banked
  1642  0013BE  0E00               	movlw	0
  1643  0013C0  0100               	movlb	0	; force () banked
  1644  0013C2  21C9               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1645  0013C4  6EDA               	movwf	fsr2h,c
  1646  0013C6  0E30               	movlw	48
  1647  0013C8  18DE               	xorwf	postinc2,w,c
  1648  0013CA  A4D8               	btfss	status,2,c
  1649  0013CC  EFEA  F009         	goto	u1621
  1650  0013D0  EFEC  F009         	goto	u1620
  1651  0013D4                     u1621:
  1652  0013D4  EF04  F00A         	goto	l2326
  1653  0013D8                     u1620:
  1654  0013D8                     
  1655                           ; BSR set to: 0
  1656                           ;main.c: 204: {;main.c: 205: m_tabMines[i][j]=' ';
  1657  0013D8  0100               	movlb	0	; force () banked
  1658  0013DA  51CB               	movf	metToucheCombien@i& (0+255),w,b
  1659  0013DC  0D15               	mullw	21
  1660  0013DE  0E64               	movlw	low _m_tabMines
  1661  0013E0  0100               	movlb	0	; force () banked
  1662  0013E2  6FC8               	movwf	??_metToucheCombien& (0+255),b
  1663  0013E4  0E00               	movlw	high _m_tabMines
  1664  0013E6  6FC9               	movwf	(??_metToucheCombien+1)& (0+255),b
  1665  0013E8  50F3               	movf	243,w,c
  1666  0013EA  27C8               	addwf	??_metToucheCombien& (0+255),f,b
  1667  0013EC  50F4               	movf	244,w,c
  1668  0013EE  23C9               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1669  0013F0  0100               	movlb	0	; force () banked
  1670  0013F2  51CC               	movf	metToucheCombien@j& (0+255),w,b
  1671  0013F4  0100               	movlb	0	; force () banked
  1672  0013F6  25C8               	addwf	??_metToucheCombien& (0+255),w,b
  1673  0013F8  6ED9               	movwf	fsr2l,c
  1674  0013FA  0100               	movlb	0	; force () banked
  1675  0013FC  0E00               	movlw	0
  1676  0013FE  0100               	movlb	0	; force () banked
  1677  001400  21C9               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1678  001402  6EDA               	movwf	fsr2h,c
  1679  001404  0E20               	movlw	32
  1680  001406  6EDF               	movwf	indf2,c
  1681  001408                     l2326:
  1682                           
  1683                           ; BSR set to: 0
  1684  001408  0100               	movlb	0	; force () banked
  1685  00140A  2BCC               	incf	metToucheCombien@j& (0+255),f,b
  1686  00140C                     
  1687                           ; BSR set to: 0
  1688  00140C  0E13               	movlw	19
  1689  00140E  0100               	movlb	0	; force () banked
  1690  001410  65CC               	cpfsgt	metToucheCombien@j& (0+255),b
  1691  001412  EF0D  F00A         	goto	u1631
  1692  001416  EF0F  F00A         	goto	u1630
  1693  00141A                     u1631:
  1694  00141A  EF88  F009         	goto	l2318
  1695  00141E                     u1630:
  1696  00141E                     l2330:
  1697                           
  1698                           ; BSR set to: 0
  1699  00141E  0100               	movlb	0	; force () banked
  1700  001420  2BCB               	incf	metToucheCombien@i& (0+255),f,b
  1701  001422                     
  1702                           ; BSR set to: 0
  1703  001422  0E03               	movlw	3
  1704  001424  0100               	movlb	0	; force () banked
  1705  001426  65CB               	cpfsgt	metToucheCombien@i& (0+255),b
  1706  001428  EF18  F00A         	goto	u1641
  1707  00142C  EF1A  F00A         	goto	u1640
  1708  001430                     u1641:
  1709  001430  EF7A  F009         	goto	l2312
  1710  001434                     u1640:
  1711  001434                     l126:
  1712                           
  1713                           ; BSR set to: 0
  1714  001434  0012               	return		;funcret
  1715  001436                     __end_of_metToucheCombien:
  1716                           	opt callstack 0
  1717                           
  1718 ;; *************** function _calculToucheCombien *****************
  1719 ;; Defined at:
  1720 ;;		line 217 in file "main.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  ligne           2    6[BANK0 ] int 
  1723 ;;  colonne         2    8[BANK0 ] int 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  countMine       1   15[BANK0 ] unsigned char 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      unsigned char 
  1728 ;; Registers used:
  1729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1735 ;;      Params:         0       4       0       0       0       0       0
  1736 ;;      Locals:         0       1       0       0       0       0       0
  1737 ;;      Temps:          0       5       0       0       0       0       0
  1738 ;;      Totals:         0      10       0       0       0       0       0
  1739 ;;Total ram usage:       10 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    1
  1742 ;; This function calls:
  1743 ;;		___wmul
  1744 ;; This function is called by:
  1745 ;;		_metToucheCombien
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text7
  1750  000C7A                     __ptext7:
  1751                           	opt callstack 0
  1752  000C7A                     _calculToucheCombien:
  1753                           	opt callstack 28
  1754  000C7A                     
  1755                           ;main.c: 219: char countMine=0;
  1756  000C7A  0E00               	movlw	0
  1757  000C7C  0100               	movlb	0	; force () banked
  1758  000C7E  6FC7               	movwf	calculToucheCombien@countMine& (0+255),b
  1759  000C80                     
  1760                           ; BSR set to: 0
  1761                           ;main.c: 231: if((m_tabMines[ligne-1][colonne-1]==2)&&(ligne-1>=0)&&(colonne-1>=0))
  1762  000C80  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1763  000C84  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1764  000C88  0E00               	movlw	0
  1765  000C8A  0100               	movlb	0	; force () banked
  1766  000C8C  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1767  000C8E  0E15               	movlw	21
  1768  000C90  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  1769  000C92  EC67  F010         	call	___wmul	;wreg free
  1770  000C96  0EEA               	movlw	234
  1771  000C98  0100               	movlb	0	; force () banked
  1772  000C9A  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  1773  000C9C  0EFF               	movlw	255
  1774  000C9E  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1775  000CA0  0E64               	movlw	low _m_tabMines
  1776  000CA2  6FC4               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1777  000CA4  0E00               	movlw	high _m_tabMines
  1778  000CA6  6FC5               	movwf	(??_calculToucheCombien+3)& (0+255),b
  1779  000CA8  51C2               	movf	??_calculToucheCombien& (0+255),w,b
  1780  000CAA  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1781  000CAC  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1782  000CAE  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1783  000CB0  0100               	movlb	0	; force () banked
  1784  000CB2  51B8               	movf	?___wmul& (0+255),w,b
  1785  000CB4  0100               	movlb	0	; force () banked
  1786  000CB6  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1787  000CB8  0100               	movlb	0	; force () banked
  1788  000CBA  51B9               	movf	(?___wmul+1)& (0+255),w,b
  1789  000CBC  0100               	movlb	0	; force () banked
  1790  000CBE  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1791  000CC0  0100               	movlb	0	; force () banked
  1792  000CC2  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  1793  000CC4  0100               	movlb	0	; force () banked
  1794  000CC6  25C4               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  1795  000CC8  6ED9               	movwf	fsr2l,c
  1796  000CCA  0100               	movlb	0	; force () banked
  1797  000CCC  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1798  000CCE  0100               	movlb	0	; force () banked
  1799  000CD0  21C5               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  1800  000CD2  6EDA               	movwf	fsr2h,c
  1801  000CD4  0E02               	movlw	2
  1802  000CD6  18DE               	xorwf	postinc2,w,c
  1803  000CD8  A4D8               	btfss	status,2,c
  1804  000CDA  EF71  F006         	goto	u1051
  1805  000CDE  EF73  F006         	goto	u1050
  1806  000CE2                     u1051:
  1807  000CE2  EF8F  F006         	goto	l2008
  1808  000CE6                     u1050:
  1809  000CE6                     
  1810                           ; BSR set to: 0
  1811  000CE6  0EFF               	movlw	255
  1812  000CE8  0100               	movlb	0	; force () banked
  1813  000CEA  25BE               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1814  000CEC  0EFF               	movlw	255
  1815  000CEE  21BF               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1816  000CF0  0B80               	andlw	128
  1817  000CF2  A4D8               	btfss	status,2,c
  1818  000CF4  EF7E  F006         	goto	u1061
  1819  000CF8  EF80  F006         	goto	u1060
  1820  000CFC                     u1061:
  1821  000CFC  EF8F  F006         	goto	l2008
  1822  000D00                     u1060:
  1823  000D00                     
  1824                           ; BSR set to: 0
  1825  000D00  0EFF               	movlw	255
  1826  000D02  0100               	movlb	0	; force () banked
  1827  000D04  25C0               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1828  000D06  0EFF               	movlw	255
  1829  000D08  21C1               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1830  000D0A  0B80               	andlw	128
  1831  000D0C  A4D8               	btfss	status,2,c
  1832  000D0E  EF8B  F006         	goto	u1071
  1833  000D12  EF8D  F006         	goto	u1070
  1834  000D16                     u1071:
  1835  000D16  EF8F  F006         	goto	l2008
  1836  000D1A                     u1070:
  1837  000D1A                     
  1838                           ; BSR set to: 0
  1839                           ;main.c: 232: {;main.c: 233: countMine++;
  1840  000D1A  0100               	movlb	0	; force () banked
  1841  000D1C  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  1842  000D1E                     l2008:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;main.c: 234: };main.c: 235: if((m_tabMines[ligne][colonne-1]==2)&&(colonne-1>=0))
  1846  000D1E  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1847  000D22  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1848  000D26  0E00               	movlw	0
  1849  000D28  0100               	movlb	0	; force () banked
  1850  000D2A  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1851  000D2C  0E15               	movlw	21
  1852  000D2E  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  1853  000D30  EC67  F010         	call	___wmul	;wreg free
  1854  000D34  0EFF               	movlw	255
  1855  000D36  0100               	movlb	0	; force () banked
  1856  000D38  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  1857  000D3A  0EFF               	movlw	255
  1858  000D3C  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1859  000D3E  0E64               	movlw	low _m_tabMines
  1860  000D40  6FC4               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1861  000D42  0E00               	movlw	high _m_tabMines
  1862  000D44  6FC5               	movwf	(??_calculToucheCombien+3)& (0+255),b
  1863  000D46  51C2               	movf	??_calculToucheCombien& (0+255),w,b
  1864  000D48  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1865  000D4A  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1866  000D4C  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1867  000D4E  0100               	movlb	0	; force () banked
  1868  000D50  51B8               	movf	?___wmul& (0+255),w,b
  1869  000D52  0100               	movlb	0	; force () banked
  1870  000D54  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1871  000D56  0100               	movlb	0	; force () banked
  1872  000D58  51B9               	movf	(?___wmul+1)& (0+255),w,b
  1873  000D5A  0100               	movlb	0	; force () banked
  1874  000D5C  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1875  000D5E  0100               	movlb	0	; force () banked
  1876  000D60  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  1877  000D62  0100               	movlb	0	; force () banked
  1878  000D64  25C4               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  1879  000D66  6ED9               	movwf	fsr2l,c
  1880  000D68  0100               	movlb	0	; force () banked
  1881  000D6A  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1882  000D6C  0100               	movlb	0	; force () banked
  1883  000D6E  21C5               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  1884  000D70  6EDA               	movwf	fsr2h,c
  1885  000D72  0E02               	movlw	2
  1886  000D74  18DE               	xorwf	postinc2,w,c
  1887  000D76  A4D8               	btfss	status,2,c
  1888  000D78  EFC0  F006         	goto	u1081
  1889  000D7C  EFC2  F006         	goto	u1080
  1890  000D80                     u1081:
  1891  000D80  EFD1  F006         	goto	l2014
  1892  000D84                     u1080:
  1893  000D84                     
  1894                           ; BSR set to: 0
  1895  000D84  0EFF               	movlw	255
  1896  000D86  0100               	movlb	0	; force () banked
  1897  000D88  25C0               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1898  000D8A  0EFF               	movlw	255
  1899  000D8C  21C1               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1900  000D8E  0B80               	andlw	128
  1901  000D90  A4D8               	btfss	status,2,c
  1902  000D92  EFCD  F006         	goto	u1091
  1903  000D96  EFCF  F006         	goto	u1090
  1904  000D9A                     u1091:
  1905  000D9A  EFD1  F006         	goto	l2014
  1906  000D9E                     u1090:
  1907  000D9E                     
  1908                           ; BSR set to: 0
  1909                           ;main.c: 236: {;main.c: 237: countMine++;
  1910  000D9E  0100               	movlb	0	; force () banked
  1911  000DA0  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  1912  000DA2                     l2014:
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;main.c: 238: };main.c: 239: if((m_tabMines[ligne+1][colonne-1]==2)&&(colonne-1>=0)&&(li
      +                          gne+1<20))
  1916  000DA2  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1917  000DA6  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1918  000DAA  0E00               	movlw	0
  1919  000DAC  0100               	movlb	0	; force () banked
  1920  000DAE  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1921  000DB0  0E15               	movlw	21
  1922  000DB2  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  1923  000DB4  EC67  F010         	call	___wmul	;wreg free
  1924  000DB8  0E64               	movlw	low _m_tabMines
  1925  000DBA  0100               	movlb	0	; force () banked
  1926  000DBC  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  1927  000DBE  0E00               	movlw	high _m_tabMines
  1928  000DC0  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1929  000DC2  0E14               	movlw	20
  1930  000DC4  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  1931  000DC6  0E00               	movlw	0
  1932  000DC8  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1933  000DCA  0100               	movlb	0	; force () banked
  1934  000DCC  51B8               	movf	?___wmul& (0+255),w,b
  1935  000DCE  0100               	movlb	0	; force () banked
  1936  000DD0  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  1937  000DD2  0100               	movlb	0	; force () banked
  1938  000DD4  51B9               	movf	(?___wmul+1)& (0+255),w,b
  1939  000DD6  0100               	movlb	0	; force () banked
  1940  000DD8  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1941  000DDA  0100               	movlb	0	; force () banked
  1942  000DDC  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  1943  000DDE  0100               	movlb	0	; force () banked
  1944  000DE0  25C2               	addwf	??_calculToucheCombien& (0+255),w,b
  1945  000DE2  6ED9               	movwf	fsr2l,c
  1946  000DE4  0100               	movlb	0	; force () banked
  1947  000DE6  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1948  000DE8  0100               	movlb	0	; force () banked
  1949  000DEA  21C3               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1950  000DEC  6EDA               	movwf	fsr2h,c
  1951  000DEE  0E02               	movlw	2
  1952  000DF0  18DE               	xorwf	postinc2,w,c
  1953  000DF2  A4D8               	btfss	status,2,c
  1954  000DF4  EFFE  F006         	goto	u1101
  1955  000DF8  EF00  F007         	goto	u1100
  1956  000DFC                     u1101:
  1957  000DFC  EF27  F007         	goto	l2022
  1958  000E00                     u1100:
  1959  000E00                     
  1960                           ; BSR set to: 0
  1961  000E00  0EFF               	movlw	255
  1962  000E02  0100               	movlb	0	; force () banked
  1963  000E04  25C0               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1964  000E06  0EFF               	movlw	255
  1965  000E08  21C1               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1966  000E0A  0B80               	andlw	128
  1967  000E0C  A4D8               	btfss	status,2,c
  1968  000E0E  EF0B  F007         	goto	u1111
  1969  000E12  EF0D  F007         	goto	u1110
  1970  000E16                     u1111:
  1971  000E16  EF27  F007         	goto	l2022
  1972  000E1A                     u1110:
  1973  000E1A                     
  1974                           ; BSR set to: 0
  1975  000E1A  0E01               	movlw	1
  1976  000E1C  0100               	movlb	0	; force () banked
  1977  000E1E  25BE               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1978  000E20  0100               	movlb	0	; force () banked
  1979  000E22  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  1980  000E24  0E00               	movlw	0
  1981  000E26  0100               	movlb	0	; force () banked
  1982  000E28  21BF               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1983  000E2A  0100               	movlb	0	; force () banked
  1984  000E2C  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1985  000E2E  BFC3               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  1986  000E30  EF25  F007         	goto	u1120
  1987  000E34  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1988  000E36  E107               	bnz	u1121
  1989  000E38  0E14               	movlw	20
  1990  000E3A  5DC2               	subwf	??_calculToucheCombien& (0+255),w,b
  1991  000E3C  B0D8               	btfsc	status,0,c
  1992  000E3E  EF23  F007         	goto	u1121
  1993  000E42  EF25  F007         	goto	u1120
  1994  000E46                     u1121:
  1995  000E46  EF27  F007         	goto	l2022
  1996  000E4A                     u1120:
  1997  000E4A                     
  1998                           ; BSR set to: 0
  1999                           ;main.c: 240: {;main.c: 241: countMine++;
  2000  000E4A  0100               	movlb	0	; force () banked
  2001  000E4C  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  2002  000E4E                     l2022:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;main.c: 242: };main.c: 243: if((m_tabMines[ligne-1][colonne]==2)&&(ligne-1>=0))
  2006  000E4E  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2007  000E52  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2008  000E56  0E00               	movlw	0
  2009  000E58  0100               	movlb	0	; force () banked
  2010  000E5A  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2011  000E5C  0E15               	movlw	21
  2012  000E5E  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  2013  000E60  EC67  F010         	call	___wmul	;wreg free
  2014  000E64  0EEB               	movlw	235
  2015  000E66  0100               	movlb	0	; force () banked
  2016  000E68  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2017  000E6A  0EFF               	movlw	255
  2018  000E6C  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2019  000E6E  0E64               	movlw	low _m_tabMines
  2020  000E70  6FC4               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2021  000E72  0E00               	movlw	high _m_tabMines
  2022  000E74  6FC5               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2023  000E76  51C2               	movf	??_calculToucheCombien& (0+255),w,b
  2024  000E78  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2025  000E7A  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2026  000E7C  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2027  000E7E  0100               	movlb	0	; force () banked
  2028  000E80  51B8               	movf	?___wmul& (0+255),w,b
  2029  000E82  0100               	movlb	0	; force () banked
  2030  000E84  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2031  000E86  0100               	movlb	0	; force () banked
  2032  000E88  51B9               	movf	(?___wmul+1)& (0+255),w,b
  2033  000E8A  0100               	movlb	0	; force () banked
  2034  000E8C  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2035  000E8E  0100               	movlb	0	; force () banked
  2036  000E90  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  2037  000E92  0100               	movlb	0	; force () banked
  2038  000E94  25C4               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2039  000E96  6ED9               	movwf	fsr2l,c
  2040  000E98  0100               	movlb	0	; force () banked
  2041  000E9A  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2042  000E9C  0100               	movlb	0	; force () banked
  2043  000E9E  21C5               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2044  000EA0  6EDA               	movwf	fsr2h,c
  2045  000EA2  0E02               	movlw	2
  2046  000EA4  18DE               	xorwf	postinc2,w,c
  2047  000EA6  A4D8               	btfss	status,2,c
  2048  000EA8  EF58  F007         	goto	u1131
  2049  000EAC  EF5A  F007         	goto	u1130
  2050  000EB0                     u1131:
  2051  000EB0  EF69  F007         	goto	l2028
  2052  000EB4                     u1130:
  2053  000EB4                     
  2054                           ; BSR set to: 0
  2055  000EB4  0EFF               	movlw	255
  2056  000EB6  0100               	movlb	0	; force () banked
  2057  000EB8  25BE               	addwf	calculToucheCombien@ligne& (0+255),w,b
  2058  000EBA  0EFF               	movlw	255
  2059  000EBC  21BF               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  2060  000EBE  0B80               	andlw	128
  2061  000EC0  A4D8               	btfss	status,2,c
  2062  000EC2  EF65  F007         	goto	u1141
  2063  000EC6  EF67  F007         	goto	u1140
  2064  000ECA                     u1141:
  2065  000ECA  EF69  F007         	goto	l2028
  2066  000ECE                     u1140:
  2067  000ECE                     
  2068                           ; BSR set to: 0
  2069                           ;main.c: 244: {;main.c: 245: countMine++;
  2070  000ECE  0100               	movlb	0	; force () banked
  2071  000ED0  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  2072  000ED2                     l2028:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;main.c: 246: };main.c: 247: if((m_tabMines[ligne-1][colonne+1]==2)&&(ligne-1>=0)&&(colo
      +                          nne+1<20))
  2076  000ED2  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2077  000ED6  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2078  000EDA  0E00               	movlw	0
  2079  000EDC  0100               	movlb	0	; force () banked
  2080  000EDE  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2081  000EE0  0E15               	movlw	21
  2082  000EE2  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  2083  000EE4  EC67  F010         	call	___wmul	;wreg free
  2084  000EE8  0EEC               	movlw	236
  2085  000EEA  0100               	movlb	0	; force () banked
  2086  000EEC  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2087  000EEE  0EFF               	movlw	255
  2088  000EF0  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2089  000EF2  0E64               	movlw	low _m_tabMines
  2090  000EF4  6FC4               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2091  000EF6  0E00               	movlw	high _m_tabMines
  2092  000EF8  6FC5               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2093  000EFA  51C2               	movf	??_calculToucheCombien& (0+255),w,b
  2094  000EFC  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2095  000EFE  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2096  000F00  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2097  000F02  0100               	movlb	0	; force () banked
  2098  000F04  51B8               	movf	?___wmul& (0+255),w,b
  2099  000F06  0100               	movlb	0	; force () banked
  2100  000F08  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2101  000F0A  0100               	movlb	0	; force () banked
  2102  000F0C  51B9               	movf	(?___wmul+1)& (0+255),w,b
  2103  000F0E  0100               	movlb	0	; force () banked
  2104  000F10  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2105  000F12  0100               	movlb	0	; force () banked
  2106  000F14  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  2107  000F16  0100               	movlb	0	; force () banked
  2108  000F18  25C4               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2109  000F1A  6ED9               	movwf	fsr2l,c
  2110  000F1C  0100               	movlb	0	; force () banked
  2111  000F1E  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2112  000F20  0100               	movlb	0	; force () banked
  2113  000F22  21C5               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2114  000F24  6EDA               	movwf	fsr2h,c
  2115  000F26  0E02               	movlw	2
  2116  000F28  18DE               	xorwf	postinc2,w,c
  2117  000F2A  A4D8               	btfss	status,2,c
  2118  000F2C  EF9A  F007         	goto	u1151
  2119  000F30  EF9C  F007         	goto	u1150
  2120  000F34                     u1151:
  2121  000F34  EFC3  F007         	goto	l2036
  2122  000F38                     u1150:
  2123  000F38                     
  2124                           ; BSR set to: 0
  2125  000F38  0EFF               	movlw	255
  2126  000F3A  0100               	movlb	0	; force () banked
  2127  000F3C  25BE               	addwf	calculToucheCombien@ligne& (0+255),w,b
  2128  000F3E  0EFF               	movlw	255
  2129  000F40  21BF               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  2130  000F42  0B80               	andlw	128
  2131  000F44  A4D8               	btfss	status,2,c
  2132  000F46  EFA7  F007         	goto	u1161
  2133  000F4A  EFA9  F007         	goto	u1160
  2134  000F4E                     u1161:
  2135  000F4E  EFC3  F007         	goto	l2036
  2136  000F52                     u1160:
  2137  000F52                     
  2138                           ; BSR set to: 0
  2139  000F52  0E01               	movlw	1
  2140  000F54  0100               	movlb	0	; force () banked
  2141  000F56  25C0               	addwf	calculToucheCombien@colonne& (0+255),w,b
  2142  000F58  0100               	movlb	0	; force () banked
  2143  000F5A  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2144  000F5C  0E00               	movlw	0
  2145  000F5E  0100               	movlb	0	; force () banked
  2146  000F60  21C1               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  2147  000F62  0100               	movlb	0	; force () banked
  2148  000F64  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2149  000F66  BFC3               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  2150  000F68  EFC1  F007         	goto	u1170
  2151  000F6C  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2152  000F6E  E107               	bnz	u1171
  2153  000F70  0E14               	movlw	20
  2154  000F72  5DC2               	subwf	??_calculToucheCombien& (0+255),w,b
  2155  000F74  B0D8               	btfsc	status,0,c
  2156  000F76  EFBF  F007         	goto	u1171
  2157  000F7A  EFC1  F007         	goto	u1170
  2158  000F7E                     u1171:
  2159  000F7E  EFC3  F007         	goto	l2036
  2160  000F82                     u1170:
  2161  000F82                     
  2162                           ; BSR set to: 0
  2163                           ;main.c: 248: {;main.c: 249: countMine++;
  2164  000F82  0100               	movlb	0	; force () banked
  2165  000F84  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  2166  000F86                     l2036:
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;main.c: 250: };main.c: 251: if((m_tabMines[ligne][colonne+1]==2)&&(colonne+1<20))
  2170  000F86  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2171  000F8A  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2172  000F8E  0E00               	movlw	0
  2173  000F90  0100               	movlb	0	; force () banked
  2174  000F92  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2175  000F94  0E15               	movlw	21
  2176  000F96  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  2177  000F98  EC67  F010         	call	___wmul	;wreg free
  2178  000F9C  0E64               	movlw	low _m_tabMines
  2179  000F9E  0100               	movlb	0	; force () banked
  2180  000FA0  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2181  000FA2  0E00               	movlw	high _m_tabMines
  2182  000FA4  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2183  000FA6  0E01               	movlw	1
  2184  000FA8  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  2185  000FAA  0E00               	movlw	0
  2186  000FAC  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2187  000FAE  0100               	movlb	0	; force () banked
  2188  000FB0  51B8               	movf	?___wmul& (0+255),w,b
  2189  000FB2  0100               	movlb	0	; force () banked
  2190  000FB4  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  2191  000FB6  0100               	movlb	0	; force () banked
  2192  000FB8  51B9               	movf	(?___wmul+1)& (0+255),w,b
  2193  000FBA  0100               	movlb	0	; force () banked
  2194  000FBC  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2195  000FBE  0100               	movlb	0	; force () banked
  2196  000FC0  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  2197  000FC2  0100               	movlb	0	; force () banked
  2198  000FC4  25C2               	addwf	??_calculToucheCombien& (0+255),w,b
  2199  000FC6  6ED9               	movwf	fsr2l,c
  2200  000FC8  0100               	movlb	0	; force () banked
  2201  000FCA  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2202  000FCC  0100               	movlb	0	; force () banked
  2203  000FCE  21C3               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2204  000FD0  6EDA               	movwf	fsr2h,c
  2205  000FD2  0E02               	movlw	2
  2206  000FD4  18DE               	xorwf	postinc2,w,c
  2207  000FD6  A4D8               	btfss	status,2,c
  2208  000FD8  EFF0  F007         	goto	u1181
  2209  000FDC  EFF2  F007         	goto	u1180
  2210  000FE0                     u1181:
  2211  000FE0  EF0C  F008         	goto	l2042
  2212  000FE4                     u1180:
  2213  000FE4                     
  2214                           ; BSR set to: 0
  2215  000FE4  0E01               	movlw	1
  2216  000FE6  0100               	movlb	0	; force () banked
  2217  000FE8  25C0               	addwf	calculToucheCombien@colonne& (0+255),w,b
  2218  000FEA  0100               	movlb	0	; force () banked
  2219  000FEC  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2220  000FEE  0E00               	movlw	0
  2221  000FF0  0100               	movlb	0	; force () banked
  2222  000FF2  21C1               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  2223  000FF4  0100               	movlb	0	; force () banked
  2224  000FF6  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2225  000FF8  BFC3               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  2226  000FFA  EF0A  F008         	goto	u1190
  2227  000FFE  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2228  001000  E107               	bnz	u1191
  2229  001002  0E14               	movlw	20
  2230  001004  5DC2               	subwf	??_calculToucheCombien& (0+255),w,b
  2231  001006  B0D8               	btfsc	status,0,c
  2232  001008  EF08  F008         	goto	u1191
  2233  00100C  EF0A  F008         	goto	u1190
  2234  001010                     u1191:
  2235  001010  EF0C  F008         	goto	l2042
  2236  001014                     u1190:
  2237  001014                     
  2238                           ; BSR set to: 0
  2239                           ;main.c: 252: {;main.c: 253: countMine++;
  2240  001014  0100               	movlb	0	; force () banked
  2241  001016  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  2242  001018                     l2042:
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;main.c: 254: };main.c: 255: if((m_tabMines[ligne+1][colonne+1]==2)&&(colonne+1<20)&&(li
      +                          gne+1<20))
  2246  001018  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2247  00101C  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2248  001020  0E00               	movlw	0
  2249  001022  0100               	movlb	0	; force () banked
  2250  001024  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2251  001026  0E15               	movlw	21
  2252  001028  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  2253  00102A  EC67  F010         	call	___wmul	;wreg free
  2254  00102E  0E64               	movlw	low _m_tabMines
  2255  001030  0100               	movlb	0	; force () banked
  2256  001032  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2257  001034  0E00               	movlw	high _m_tabMines
  2258  001036  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2259  001038  0E16               	movlw	22
  2260  00103A  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  2261  00103C  0E00               	movlw	0
  2262  00103E  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2263  001040  0100               	movlb	0	; force () banked
  2264  001042  51B8               	movf	?___wmul& (0+255),w,b
  2265  001044  0100               	movlb	0	; force () banked
  2266  001046  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  2267  001048  0100               	movlb	0	; force () banked
  2268  00104A  51B9               	movf	(?___wmul+1)& (0+255),w,b
  2269  00104C  0100               	movlb	0	; force () banked
  2270  00104E  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2271  001050  0100               	movlb	0	; force () banked
  2272  001052  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  2273  001054  0100               	movlb	0	; force () banked
  2274  001056  25C2               	addwf	??_calculToucheCombien& (0+255),w,b
  2275  001058  6ED9               	movwf	fsr2l,c
  2276  00105A  0100               	movlb	0	; force () banked
  2277  00105C  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2278  00105E  0100               	movlb	0	; force () banked
  2279  001060  21C3               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2280  001062  6EDA               	movwf	fsr2h,c
  2281  001064  0E02               	movlw	2
  2282  001066  18DE               	xorwf	postinc2,w,c
  2283  001068  A4D8               	btfss	status,2,c
  2284  00106A  EF39  F008         	goto	u1201
  2285  00106E  EF3B  F008         	goto	u1200
  2286  001072                     u1201:
  2287  001072  EF6D  F008         	goto	l2050
  2288  001076                     u1200:
  2289  001076                     
  2290                           ; BSR set to: 0
  2291  001076  0E01               	movlw	1
  2292  001078  0100               	movlb	0	; force () banked
  2293  00107A  25C0               	addwf	calculToucheCombien@colonne& (0+255),w,b
  2294  00107C  0100               	movlb	0	; force () banked
  2295  00107E  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2296  001080  0E00               	movlw	0
  2297  001082  0100               	movlb	0	; force () banked
  2298  001084  21C1               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  2299  001086  0100               	movlb	0	; force () banked
  2300  001088  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2301  00108A  BFC3               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  2302  00108C  EF53  F008         	goto	u1210
  2303  001090  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2304  001092  E107               	bnz	u1211
  2305  001094  0E14               	movlw	20
  2306  001096  5DC2               	subwf	??_calculToucheCombien& (0+255),w,b
  2307  001098  B0D8               	btfsc	status,0,c
  2308  00109A  EF51  F008         	goto	u1211
  2309  00109E  EF53  F008         	goto	u1210
  2310  0010A2                     u1211:
  2311  0010A2  EF6D  F008         	goto	l2050
  2312  0010A6                     u1210:
  2313  0010A6                     
  2314                           ; BSR set to: 0
  2315  0010A6  0E01               	movlw	1
  2316  0010A8  0100               	movlb	0	; force () banked
  2317  0010AA  25BE               	addwf	calculToucheCombien@ligne& (0+255),w,b
  2318  0010AC  0100               	movlb	0	; force () banked
  2319  0010AE  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2320  0010B0  0E00               	movlw	0
  2321  0010B2  0100               	movlb	0	; force () banked
  2322  0010B4  21BF               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  2323  0010B6  0100               	movlb	0	; force () banked
  2324  0010B8  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2325  0010BA  BFC3               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  2326  0010BC  EF6B  F008         	goto	u1220
  2327  0010C0  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2328  0010C2  E107               	bnz	u1221
  2329  0010C4  0E14               	movlw	20
  2330  0010C6  5DC2               	subwf	??_calculToucheCombien& (0+255),w,b
  2331  0010C8  B0D8               	btfsc	status,0,c
  2332  0010CA  EF69  F008         	goto	u1221
  2333  0010CE  EF6B  F008         	goto	u1220
  2334  0010D2                     u1221:
  2335  0010D2  EF6D  F008         	goto	l2050
  2336  0010D6                     u1220:
  2337  0010D6                     
  2338                           ; BSR set to: 0
  2339                           ;main.c: 256: {;main.c: 257: countMine++;
  2340  0010D6  0100               	movlb	0	; force () banked
  2341  0010D8  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  2342  0010DA                     l2050:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;main.c: 258: };main.c: 259: if((m_tabMines[ligne+1][colonne]==2)&&(ligne+1<20))
  2346  0010DA  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2347  0010DE  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2348  0010E2  0E00               	movlw	0
  2349  0010E4  0100               	movlb	0	; force () banked
  2350  0010E6  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2351  0010E8  0E15               	movlw	21
  2352  0010EA  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  2353  0010EC  EC67  F010         	call	___wmul	;wreg free
  2354  0010F0  0E64               	movlw	low _m_tabMines
  2355  0010F2  0100               	movlb	0	; force () banked
  2356  0010F4  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2357  0010F6  0E00               	movlw	high _m_tabMines
  2358  0010F8  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2359  0010FA  0E15               	movlw	21
  2360  0010FC  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  2361  0010FE  0E00               	movlw	0
  2362  001100  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2363  001102  0100               	movlb	0	; force () banked
  2364  001104  51B8               	movf	?___wmul& (0+255),w,b
  2365  001106  0100               	movlb	0	; force () banked
  2366  001108  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  2367  00110A  0100               	movlb	0	; force () banked
  2368  00110C  51B9               	movf	(?___wmul+1)& (0+255),w,b
  2369  00110E  0100               	movlb	0	; force () banked
  2370  001110  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2371  001112  0100               	movlb	0	; force () banked
  2372  001114  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  2373  001116  0100               	movlb	0	; force () banked
  2374  001118  25C2               	addwf	??_calculToucheCombien& (0+255),w,b
  2375  00111A  6ED9               	movwf	fsr2l,c
  2376  00111C  0100               	movlb	0	; force () banked
  2377  00111E  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2378  001120  0100               	movlb	0	; force () banked
  2379  001122  21C3               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2380  001124  6EDA               	movwf	fsr2h,c
  2381  001126  0E02               	movlw	2
  2382  001128  18DE               	xorwf	postinc2,w,c
  2383  00112A  A4D8               	btfss	status,2,c
  2384  00112C  EF9A  F008         	goto	u1231
  2385  001130  EF9C  F008         	goto	u1230
  2386  001134                     u1231:
  2387  001134  EFB6  F008         	goto	l2056
  2388  001138                     u1230:
  2389  001138                     
  2390                           ; BSR set to: 0
  2391  001138  0E01               	movlw	1
  2392  00113A  0100               	movlb	0	; force () banked
  2393  00113C  25BE               	addwf	calculToucheCombien@ligne& (0+255),w,b
  2394  00113E  0100               	movlb	0	; force () banked
  2395  001140  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2396  001142  0E00               	movlw	0
  2397  001144  0100               	movlb	0	; force () banked
  2398  001146  21BF               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  2399  001148  0100               	movlb	0	; force () banked
  2400  00114A  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2401  00114C  BFC3               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  2402  00114E  EFB4  F008         	goto	u1240
  2403  001152  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2404  001154  E107               	bnz	u1241
  2405  001156  0E14               	movlw	20
  2406  001158  5DC2               	subwf	??_calculToucheCombien& (0+255),w,b
  2407  00115A  B0D8               	btfsc	status,0,c
  2408  00115C  EFB2  F008         	goto	u1241
  2409  001160  EFB4  F008         	goto	u1240
  2410  001164                     u1241:
  2411  001164  EFB6  F008         	goto	l2056
  2412  001168                     u1240:
  2413  001168                     
  2414                           ; BSR set to: 0
  2415                           ;main.c: 260: {;main.c: 261: countMine++;
  2416  001168  0100               	movlb	0	; force () banked
  2417  00116A  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  2418  00116C                     l2056:
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;main.c: 262: };main.c: 263: return countMine;
  2422  00116C  0100               	movlb	0	; force () banked
  2423  00116E  51C7               	movf	calculToucheCombien@countMine& (0+255),w,b
  2424  001170                     
  2425                           ; BSR set to: 0
  2426  001170  0012               	return		;funcret
  2427  001172                     __end_of_calculToucheCombien:
  2428                           	opt callstack 0
  2429                           
  2430 ;; *************** function _lcd_init *****************
  2431 ;; Defined at:
  2432 ;;		line 300 in file "Lcd4Lignes.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2446 ;;      Params:         0       0       0       0       0       0       0
  2447 ;;      Locals:         0       0       0       0       0       0       0
  2448 ;;      Temps:          0       0       0       0       0       0       0
  2449 ;;      Totals:         0       0       0       0       0       0       0
  2450 ;;Total ram usage:        0 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    5
  2453 ;; This function calls:
  2454 ;;		_lcd_initCGRam
  2455 ;;		_lcd_resetSequence
  2456 ;;		_lcd_wrCom
  2457 ;; This function is called by:
  2458 ;;		_main
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text8
  2463  0020A6                     __ptext8:
  2464                           	opt callstack 0
  2465  0020A6                     _lcd_init:
  2466                           	opt callstack 25
  2467  0020A6                     
  2468                           ;Lcd4Lignes.c: 303: lcd_resetSequence();
  2469  0020A6  EC92  F00E         	call	_lcd_resetSequence	;wreg free
  2470                           
  2471                           ;Lcd4Lignes.c: 304: lcd_wrCom(0x28);
  2472  0020AA  0E28               	movlw	40
  2473  0020AC  EC5C  F00E         	call	_lcd_wrCom
  2474                           
  2475                           ;Lcd4Lignes.c: 305: lcd_wrCom(0x0F);
  2476  0020B0  0E0F               	movlw	15
  2477  0020B2  EC5C  F00E         	call	_lcd_wrCom
  2478                           
  2479                           ;Lcd4Lignes.c: 306: lcd_wrCom(0x01);
  2480  0020B6  0E01               	movlw	1
  2481  0020B8  EC5C  F00E         	call	_lcd_wrCom
  2482                           
  2483                           ;Lcd4Lignes.c: 307: lcd_wrCom(0x06);
  2484  0020BC  0E06               	movlw	6
  2485  0020BE  EC5C  F00E         	call	_lcd_wrCom
  2486                           
  2487                           ;Lcd4Lignes.c: 308: lcd_wrCom(0x80);
  2488  0020C2  0E80               	movlw	128
  2489  0020C4  EC5C  F00E         	call	_lcd_wrCom
  2490  0020C8                     
  2491                           ;Lcd4Lignes.c: 309: lcd_initCGRam();
  2492  0020C8  EC0E  F00D         	call	_lcd_initCGRam	;wreg free
  2493  0020CC  0012               	return		;funcret
  2494  0020CE                     __end_of_lcd_init:
  2495                           	opt callstack 0
  2496                           
  2497 ;; *************** function _lcd_resetSequence *****************
  2498 ;; Defined at:
  2499 ;;		line 263 in file "Lcd4Lignes.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;		None
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2513 ;;      Params:         0       0       0       0       0       0       0
  2514 ;;      Locals:         0       0       0       0       0       0       0
  2515 ;;      Temps:          0       1       0       0       0       0       0
  2516 ;;      Totals:         0       1       0       0       0       0       0
  2517 ;;Total ram usage:        1 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    1
  2520 ;; This function calls:
  2521 ;;		_lcd_ecrireDonnees
  2522 ;;		_lcd_strobeEnableBit
  2523 ;; This function is called by:
  2524 ;;		_lcd_init
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text9
  2529  001D24                     __ptext9:
  2530                           	opt callstack 0
  2531  001D24                     _lcd_resetSequence:
  2532                           	opt callstack 28
  2533  001D24                     
  2534                           ;Lcd4Lignes.c: 268: TRISD = 0b00000000;
  2535  001D24  0E00               	movlw	0
  2536  001D26  6E95               	movwf	149,c	;volatile
  2537  001D28                     
  2538                           ;Lcd4Lignes.c: 270: _delay((unsigned long)((40)*(1000000/4000.0)));
  2539  001D28  0E0D               	movlw	13
  2540  001D2A  0100               	movlb	0	; force () banked
  2541  001D2C  6FBA               	movwf	??_lcd_resetSequence& (0+255),b
  2542  001D2E  0EFB               	movlw	251
  2543  001D30                     u1907:
  2544  001D30  2EE8               	decfsz	wreg,f,c
  2545  001D32  D7FE               	bra	u1907
  2546  001D34  2FBA               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2547  001D36  D7FC               	bra	u1907
  2548  001D38  F000 F000          	nop2	
  2549  001D3C                     
  2550                           ;Lcd4Lignes.c: 271: PORTAbits.RA0 = 0;
  2551  001D3C  9080               	bcf	128,0,c	;volatile
  2552  001D3E                     
  2553                           ;Lcd4Lignes.c: 272: PORTAbits.RA1 = 0;
  2554  001D3E  9280               	bcf	128,1,c	;volatile
  2555  001D40                     
  2556                           ;Lcd4Lignes.c: 274: lcd_ecrireDonnees(0x03);
  2557  001D40  0E03               	movlw	3
  2558  001D42  EC7B  F010         	call	_lcd_ecrireDonnees
  2559  001D46                     
  2560                           ;Lcd4Lignes.c: 275: lcd_strobeEnableBit();
  2561  001D46  EC95  F010         	call	_lcd_strobeEnableBit	;wreg free
  2562  001D4A                     
  2563                           ;Lcd4Lignes.c: 276: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2564  001D4A  0E03               	movlw	3
  2565  001D4C                     u1917:
  2566  001D4C  2EE8               	decfsz	wreg,f,c
  2567  001D4E  D7FE               	bra	u1917
  2568  001D50  F000               	nop	
  2569  001D52                     
  2570                           ;Lcd4Lignes.c: 279: lcd_ecrireDonnees(0x03);
  2571  001D52  0E03               	movlw	3
  2572  001D54  EC7B  F010         	call	_lcd_ecrireDonnees
  2573  001D58                     
  2574                           ;Lcd4Lignes.c: 280: lcd_strobeEnableBit();
  2575  001D58  EC95  F010         	call	_lcd_strobeEnableBit	;wreg free
  2576  001D5C                     
  2577                           ;Lcd4Lignes.c: 281: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2578  001D5C  0E03               	movlw	3
  2579  001D5E                     u1927:
  2580  001D5E  2EE8               	decfsz	wreg,f,c
  2581  001D60  D7FE               	bra	u1927
  2582  001D62  F000               	nop	
  2583  001D64                     
  2584                           ;Lcd4Lignes.c: 283: lcd_ecrireDonnees(0x03);
  2585  001D64  0E03               	movlw	3
  2586  001D66  EC7B  F010         	call	_lcd_ecrireDonnees
  2587  001D6A                     
  2588                           ;Lcd4Lignes.c: 284: lcd_strobeEnableBit();
  2589  001D6A  EC95  F010         	call	_lcd_strobeEnableBit	;wreg free
  2590  001D6E                     
  2591                           ;Lcd4Lignes.c: 285: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2592  001D6E  0E03               	movlw	3
  2593  001D70                     u1937:
  2594  001D70  2EE8               	decfsz	wreg,f,c
  2595  001D72  D7FE               	bra	u1937
  2596  001D74  F000               	nop	
  2597  001D76                     
  2598                           ;Lcd4Lignes.c: 287: lcd_ecrireDonnees(0x02);
  2599  001D76  0E02               	movlw	2
  2600  001D78  EC7B  F010         	call	_lcd_ecrireDonnees
  2601  001D7C                     
  2602                           ;Lcd4Lignes.c: 288: lcd_strobeEnableBit();
  2603  001D7C  EC95  F010         	call	_lcd_strobeEnableBit	;wreg free
  2604  001D80                     
  2605                           ;Lcd4Lignes.c: 289: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2606  001D80  0E03               	movlw	3
  2607  001D82                     u1947:
  2608  001D82  2EE8               	decfsz	wreg,f,c
  2609  001D84  D7FE               	bra	u1947
  2610  001D86  F000               	nop	
  2611  001D88                     
  2612                           ;Lcd4Lignes.c: 291: TRISD = 0b00001111;
  2613  001D88  0E0F               	movlw	15
  2614  001D8A  6E95               	movwf	149,c	;volatile
  2615  001D8C  0012               	return		;funcret
  2616  001D8E                     __end_of_lcd_resetSequence:
  2617                           	opt callstack 0
  2618                           
  2619 ;; *************** function _lcd_initCGRam *****************
  2620 ;; Defined at:
  2621 ;;		line 459 in file "Lcd4Lignes.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  j               1    6[BANK0 ] unsigned char 
  2626 ;;  i               1    5[BANK0 ] unsigned char 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2636 ;;      Params:         0       0       0       0       0       0       0
  2637 ;;      Locals:         0       2       0       0       0       0       0
  2638 ;;      Temps:          0       2       0       0       0       0       0
  2639 ;;      Totals:         0       4       0       0       0       0       0
  2640 ;;Total ram usage:        4 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    4
  2643 ;; This function calls:
  2644 ;;		_lcd_curseurHome
  2645 ;;		_lcd_wrCom
  2646 ;;		_lcd_wrData
  2647 ;; This function is called by:
  2648 ;;		_lcd_init
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text10
  2653  001A1C                     __ptext10:
  2654                           	opt callstack 0
  2655  001A1C                     _lcd_initCGRam:
  2656                           	opt callstack 25
  2657  001A1C                     
  2658                           ;Lcd4Lignes.c: 461: char i,j;;Lcd4Lignes.c: 463: lcd_wrCom(0x40);
  2659  001A1C  0E40               	movlw	64
  2660  001A1E  EC5C  F00E         	call	_lcd_wrCom
  2661  001A22                     
  2662                           ;Lcd4Lignes.c: 464: for(i=0;i<8;i++)
  2663  001A22  0E00               	movlw	0
  2664  001A24  0100               	movlb	0	; force () banked
  2665  001A26  6FBD               	movwf	lcd_initCGRam@i& (0+255),b
  2666  001A28                     
  2667                           ; BSR set to: 0
  2668  001A28  0E07               	movlw	7
  2669  001A2A  0100               	movlb	0	; force () banked
  2670  001A2C  65BD               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2671  001A2E  EF1B  F00D         	goto	u1391
  2672  001A32  EF1D  F00D         	goto	u1390
  2673  001A36                     u1391:
  2674  001A36  EF1F  F00D         	goto	l2148
  2675  001A3A                     u1390:
  2676  001A3A  EF5C  F00D         	goto	l2164
  2677  001A3E                     l2148:
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;Lcd4Lignes.c: 465: {;Lcd4Lignes.c: 466: for(j=0;j<8;j++)
  2681  001A3E  0E00               	movlw	0
  2682  001A40  0100               	movlb	0	; force () banked
  2683  001A42  6FBE               	movwf	lcd_initCGRam@j& (0+255),b
  2684  001A44                     
  2685                           ; BSR set to: 0
  2686  001A44  0E07               	movlw	7
  2687  001A46  0100               	movlb	0	; force () banked
  2688  001A48  65BE               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2689  001A4A  EF29  F00D         	goto	u1401
  2690  001A4E  EF2B  F00D         	goto	u1400
  2691  001A52                     u1401:
  2692  001A52  EF2D  F00D         	goto	l2154
  2693  001A56                     u1400:
  2694  001A56  EF51  F00D         	goto	l2160
  2695  001A5A                     l2154:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;Lcd4Lignes.c: 467: lcd_wrData(matCGRAM[i][j]);
  2699  001A5A  0100               	movlb	0	; force () banked
  2700  001A5C  51BD               	movf	lcd_initCGRam@i& (0+255),w,b
  2701  001A5E  0D08               	mullw	8
  2702  001A60  0E54               	movlw	low _matCGRAM
  2703  001A62  0100               	movlb	0	; force () banked
  2704  001A64  6FBB               	movwf	??_lcd_initCGRam& (0+255),b
  2705  001A66  0E01               	movlw	high _matCGRAM
  2706  001A68  6FBC               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2707  001A6A  50F3               	movf	243,w,c
  2708  001A6C  27BB               	addwf	??_lcd_initCGRam& (0+255),f,b
  2709  001A6E  50F4               	movf	244,w,c
  2710  001A70  23BC               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2711  001A72  0100               	movlb	0	; force () banked
  2712  001A74  51BE               	movf	lcd_initCGRam@j& (0+255),w,b
  2713  001A76  0100               	movlb	0	; force () banked
  2714  001A78  25BB               	addwf	??_lcd_initCGRam& (0+255),w,b
  2715  001A7A  6ED9               	movwf	fsr2l,c
  2716  001A7C  0100               	movlb	0	; force () banked
  2717  001A7E  0E00               	movlw	0
  2718  001A80  0100               	movlb	0	; force () banked
  2719  001A82  21BC               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2720  001A84  6EDA               	movwf	fsr2h,c
  2721  001A86  50DF               	movf	indf2,w,c
  2722  001A88  EC23  F010         	call	_lcd_wrData
  2723  001A8C  0100               	movlb	0	; force () banked
  2724  001A8E  2BBE               	incf	lcd_initCGRam@j& (0+255),f,b
  2725  001A90                     
  2726                           ; BSR set to: 0
  2727  001A90  0E07               	movlw	7
  2728  001A92  0100               	movlb	0	; force () banked
  2729  001A94  65BE               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2730  001A96  EF4F  F00D         	goto	u1411
  2731  001A9A  EF51  F00D         	goto	u1410
  2732  001A9E                     u1411:
  2733  001A9E  EF2D  F00D         	goto	l2154
  2734  001AA2                     u1410:
  2735  001AA2                     l2160:
  2736                           
  2737                           ; BSR set to: 0
  2738  001AA2  0100               	movlb	0	; force () banked
  2739  001AA4  2BBD               	incf	lcd_initCGRam@i& (0+255),f,b
  2740  001AA6                     
  2741                           ; BSR set to: 0
  2742  001AA6  0E07               	movlw	7
  2743  001AA8  0100               	movlb	0	; force () banked
  2744  001AAA  65BD               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2745  001AAC  EF5A  F00D         	goto	u1421
  2746  001AB0  EF5C  F00D         	goto	u1420
  2747  001AB4                     u1421:
  2748  001AB4  EF1F  F00D         	goto	l2148
  2749  001AB8                     u1420:
  2750  001AB8                     l2164:
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;Lcd4Lignes.c: 468: };Lcd4Lignes.c: 469: lcd_curseurHome();
  2754  001AB8  EC91  F010         	call	_lcd_curseurHome	;wreg free
  2755  001ABC  0012               	return		;funcret
  2756  001ABE                     __end_of_lcd_initCGRam:
  2757                           	opt callstack 0
  2758                           
  2759 ;; *************** function _lcd_curseurHome *****************
  2760 ;; Defined at:
  2761 ;;		line 330 in file "Lcd4Lignes.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2775 ;;      Params:         0       0       0       0       0       0       0
  2776 ;;      Locals:         0       0       0       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0       0       0
  2778 ;;      Totals:         0       0       0       0       0       0       0
  2779 ;;Total ram usage:        0 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    3
  2782 ;; This function calls:
  2783 ;;		_lcd_wrCom
  2784 ;; This function is called by:
  2785 ;;		_lcd_initCGRam
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text11
  2790  002122                     __ptext11:
  2791                           	opt callstack 0
  2792  002122                     _lcd_curseurHome:
  2793                           	opt callstack 25
  2794  002122                     
  2795                           ;Lcd4Lignes.c: 332: lcd_wrCom(0x02);
  2796  002122  0E02               	movlw	2
  2797  002124  EC5C  F00E         	call	_lcd_wrCom
  2798  002128  0012               	return		;funcret
  2799  00212A                     __end_of_lcd_curseurHome:
  2800                           	opt callstack 0
  2801                           
  2802 ;; *************** function _initialisation *****************
  2803 ;; Defined at:
  2804 ;;		line 424 in file "main.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2818 ;;      Params:         0       0       0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0
  2821 ;;      Totals:         0       0       0       0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    1
  2825 ;; This function calls:
  2826 ;;		_srand
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text12
  2833  001F30                     __ptext12:
  2834                           	opt callstack 0
  2835  001F30                     _initialisation:
  2836                           	opt callstack 29
  2837  001F30                     
  2838                           ;main.c: 426: TRISD = 0;
  2839  001F30  0E00               	movlw	0
  2840  001F32  6E95               	movwf	149,c	;volatile
  2841                           
  2842                           ;main.c: 428: ANSELH = 0;
  2843  001F34  0E00               	movlw	0
  2844  001F36  6E7F               	movwf	127,c	;volatile
  2845  001F38                     
  2846                           ;main.c: 429: TRISB = 0xFF;
  2847  001F38  6893               	setf	147,c	;volatile
  2848                           
  2849                           ;main.c: 431: ANSEL = 0;
  2850  001F3A  0E00               	movlw	0
  2851  001F3C  6E7E               	movwf	126,c	;volatile
  2852                           
  2853                           ;main.c: 432: TRISA = 0;
  2854  001F3E  0E00               	movlw	0
  2855  001F40  6E92               	movwf	146,c	;volatile
  2856  001F42                     
  2857                           ;main.c: 436: T1CONbits.TMR1ON = 1;
  2858  001F42  80CD               	bsf	205,0,c	;volatile
  2859  001F44                     
  2860                           ;main.c: 437: srand(TMR1);
  2861  001F44  CFCE F0B8          	movff	4046,srand@x	;volatile
  2862  001F48  CFCF F0B9          	movff	4047,srand@x+1	;volatile
  2863  001F4C  EC89  F010         	call	_srand	;wreg free
  2864  001F50                     
  2865                           ;main.c: 440: ANSELbits.ANS7 = 1;
  2866  001F50  8E7E               	bsf	126,7,c	;volatile
  2867  001F52                     
  2868                           ;main.c: 442: ADCON0bits.ADON = 1;
  2869  001F52  80C2               	bsf	194,0,c	;volatile
  2870  001F54                     
  2871                           ;main.c: 443: ADCON1 = 0;
  2872  001F54  0E00               	movlw	0
  2873  001F56  6EC1               	movwf	193,c	;volatile
  2874  001F58                     
  2875                           ;main.c: 445: ADCON2bits.ADFM = 0;
  2876  001F58  9EC0               	bcf	192,7,c	;volatile
  2877  001F5A                     
  2878                           ;main.c: 446: ADCON2bits.ACQT = 0;
  2879  001F5A  0EC7               	movlw	-57
  2880  001F5C  16C0               	andwf	192,f,c	;volatile
  2881  001F5E                     
  2882                           ;main.c: 447: ADCON2bits.ADCS = 0;
  2883  001F5E  0EF8               	movlw	-8
  2884  001F60  16C0               	andwf	192,f,c	;volatile
  2885  001F62                     
  2886                           ;main.c: 451: T0CONbits.TMR0ON = 1;
  2887  001F62  8ED5               	bsf	213,7,c	;volatile
  2888  001F64                     
  2889                           ;main.c: 452: T0CONbits.T08BIT = 0;
  2890  001F64  9CD5               	bcf	213,6,c	;volatile
  2891  001F66                     
  2892                           ;main.c: 453: T0CONbits.T0CS = 0;
  2893  001F66  9AD5               	bcf	213,5,c	;volatile
  2894  001F68                     
  2895                           ;main.c: 454: T0CONbits.PSA = 0;
  2896  001F68  96D5               	bcf	213,3,c	;volatile
  2897  001F6A                     
  2898                           ;main.c: 455: T0CONbits.T0PS = 0b010;
  2899  001F6A  50D5               	movf	213,w,c	;volatile
  2900  001F6C  0BF8               	andlw	-8
  2901  001F6E  0902               	iorlw	2
  2902  001F70  6ED5               	movwf	213,c	;volatile
  2903  001F72                     
  2904                           ;main.c: 456: INTCONbits.TMR0IE = 1;
  2905  001F72  8AF2               	bsf	242,5,c	;volatile
  2906  001F74                     
  2907                           ;main.c: 457: INTCONbits.TMR0IF = 0;
  2908  001F74  94F2               	bcf	242,2,c	;volatile
  2909  001F76                     
  2910                           ;main.c: 458: INTCONbits.PEIE = 1;
  2911  001F76  8CF2               	bsf	242,6,c	;volatile
  2912  001F78                     
  2913                           ;main.c: 459: INTCONbits.GIE = 1;
  2914  001F78  8EF2               	bsf	242,7,c	;volatile
  2915  001F7A  0012               	return		;funcret
  2916  001F7C                     __end_of_initialisation:
  2917                           	opt callstack 0
  2918                           
  2919 ;; *************** function _srand *****************
  2920 ;; Defined at:
  2921 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  x               2    0[BANK0 ] unsigned int 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		status,2
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2935 ;;      Params:         0       2       0       0       0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0
  2938 ;;      Totals:         0       2       0       0       0       0       0
  2939 ;;Total ram usage:        2 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_initialisation
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text13
  2949  002112                     __ptext13:
  2950                           	opt callstack 0
  2951  002112                     _srand:
  2952                           	opt callstack 29
  2953  002112  C0B8  F060         	movff	srand@x,_randx
  2954  002116  C0B9  F061         	movff	srand@x+1,_randx+1
  2955  00211A  0100               	movlb	0	; () banked
  2956  00211C  6B62               	clrf	(_randx+2)& (0+255),b
  2957  00211E  6B63               	clrf	(_randx+3)& (0+255),b
  2958  002120                     
  2959                           ; BSR set to: 0
  2960  002120  0012               	return		;funcret
  2961  002122                     __end_of_srand:
  2962                           	opt callstack 0
  2963                           
  2964 ;; *************** function _initTabVue *****************
  2965 ;; Defined at:
  2966 ;;		line 117 in file "main.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  j               2    8[BANK0 ] int 
  2971 ;;  i               2   10[BANK0 ] int 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2981 ;;      Params:         0       0       0       0       0       0       0
  2982 ;;      Locals:         0       4       0       0       0       0       0
  2983 ;;      Temps:          0       2       0       0       0       0       0
  2984 ;;      Totals:         0       6       0       0       0       0       0
  2985 ;;Total ram usage:        6 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    1
  2988 ;; This function calls:
  2989 ;;		___wmul
  2990 ;; This function is called by:
  2991 ;;		_main
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text14
  2996  001574                     __ptext14:
  2997                           	opt callstack 0
  2998  001574                     _initTabVue:
  2999                           	opt callstack 29
  3000  001574                     
  3001                           ;main.c: 119: for(int i=0;i<4;i++)
  3002  001574  0E00               	movlw	0
  3003  001576  0100               	movlb	0	; force () banked
  3004  001578  6FC3               	movwf	(initTabVue@i+1)& (0+255),b
  3005  00157A  0E00               	movlw	0
  3006  00157C  6FC2               	movwf	initTabVue@i& (0+255),b
  3007  00157E                     
  3008                           ; BSR set to: 0
  3009  00157E  0100               	movlb	0	; force () banked
  3010  001580  BFC3               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3011  001582  EFCC  F00A         	goto	u1491
  3012  001586  51C3               	movf	(initTabVue@i+1)& (0+255),w,b
  3013  001588  E109               	bnz	u1490
  3014  00158A  0E04               	movlw	4
  3015  00158C  5DC2               	subwf	initTabVue@i& (0+255),w,b
  3016  00158E  A0D8               	btfss	status,0,c
  3017  001590  EFCC  F00A         	goto	u1491
  3018  001594  EFCE  F00A         	goto	u1490
  3019  001598                     u1491:
  3020  001598  EFD0  F00A         	goto	l2250
  3021  00159C                     u1490:
  3022  00159C  EF42  F00B         	goto	l97
  3023  0015A0                     l2250:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;main.c: 120: {;main.c: 121: for(int j=0;j<20;j++)
  3027  0015A0  0E00               	movlw	0
  3028  0015A2  0100               	movlb	0	; force () banked
  3029  0015A4  6FC1               	movwf	(initTabVue@j+1)& (0+255),b
  3030  0015A6  0E00               	movlw	0
  3031  0015A8  6FC0               	movwf	initTabVue@j& (0+255),b
  3032  0015AA                     
  3033                           ; BSR set to: 0
  3034  0015AA  0100               	movlb	0	; force () banked
  3035  0015AC  BFC1               	btfsc	(initTabVue@j+1)& (0+255),7,b
  3036  0015AE  EFE2  F00A         	goto	u1501
  3037  0015B2  51C1               	movf	(initTabVue@j+1)& (0+255),w,b
  3038  0015B4  E109               	bnz	u1500
  3039  0015B6  0E14               	movlw	20
  3040  0015B8  5DC0               	subwf	initTabVue@j& (0+255),w,b
  3041  0015BA  A0D8               	btfss	status,0,c
  3042  0015BC  EFE2  F00A         	goto	u1501
  3043  0015C0  EFE4  F00A         	goto	u1500
  3044  0015C4                     u1501:
  3045  0015C4  EFE6  F00A         	goto	l2256
  3046  0015C8                     u1500:
  3047  0015C8  EF1C  F00B         	goto	l2262
  3048  0015CC                     l2256:
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;main.c: 122: {;main.c: 123: m_tabVue[i][j] = 1;
  3052  0015CC  C0C2  F0B8         	movff	initTabVue@i,___wmul@multiplier
  3053  0015D0  C0C3  F0B9         	movff	initTabVue@i+1,___wmul@multiplier+1
  3054  0015D4  0E00               	movlw	0
  3055  0015D6  0100               	movlb	0	; force () banked
  3056  0015D8  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3057  0015DA  0E15               	movlw	21
  3058  0015DC  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  3059  0015DE  EC67  F010         	call	___wmul	;wreg free
  3060  0015E2  0E00               	movlw	low _m_tabVue
  3061  0015E4  0100               	movlb	0	; force () banked
  3062  0015E6  6FBE               	movwf	??_initTabVue& (0+255),b
  3063  0015E8  0E01               	movlw	high _m_tabVue
  3064  0015EA  6FBF               	movwf	(??_initTabVue+1)& (0+255),b
  3065  0015EC  0100               	movlb	0	; force () banked
  3066  0015EE  51B8               	movf	?___wmul& (0+255),w,b
  3067  0015F0  0100               	movlb	0	; force () banked
  3068  0015F2  27BE               	addwf	??_initTabVue& (0+255),f,b
  3069  0015F4  0100               	movlb	0	; force () banked
  3070  0015F6  51B9               	movf	(?___wmul+1)& (0+255),w,b
  3071  0015F8  0100               	movlb	0	; force () banked
  3072  0015FA  23BF               	addwfc	(??_initTabVue+1)& (0+255),f,b
  3073  0015FC  0100               	movlb	0	; force () banked
  3074  0015FE  51C0               	movf	initTabVue@j& (0+255),w,b
  3075  001600  0100               	movlb	0	; force () banked
  3076  001602  25BE               	addwf	??_initTabVue& (0+255),w,b
  3077  001604  6ED9               	movwf	fsr2l,c
  3078  001606  0100               	movlb	0	; force () banked
  3079  001608  51C1               	movf	(initTabVue@j+1)& (0+255),w,b
  3080  00160A  0100               	movlb	0	; force () banked
  3081  00160C  21BF               	addwfc	(??_initTabVue+1)& (0+255),w,b
  3082  00160E  6EDA               	movwf	fsr2h,c
  3083  001610  0E01               	movlw	1
  3084  001612  6EDF               	movwf	indf2,c
  3085  001614                     
  3086                           ; BSR set to: 0
  3087  001614  0100               	movlb	0	; force () banked
  3088  001616  4BC0               	infsnz	initTabVue@j& (0+255),f,b
  3089  001618  2BC1               	incf	(initTabVue@j+1)& (0+255),f,b
  3090  00161A                     
  3091                           ; BSR set to: 0
  3092  00161A  0100               	movlb	0	; force () banked
  3093  00161C  BFC1               	btfsc	(initTabVue@j+1)& (0+255),7,b
  3094  00161E  EF1A  F00B         	goto	u1511
  3095  001622  51C1               	movf	(initTabVue@j+1)& (0+255),w,b
  3096  001624  E109               	bnz	u1510
  3097  001626  0E14               	movlw	20
  3098  001628  5DC0               	subwf	initTabVue@j& (0+255),w,b
  3099  00162A  A0D8               	btfss	status,0,c
  3100  00162C  EF1A  F00B         	goto	u1511
  3101  001630  EF1C  F00B         	goto	u1510
  3102  001634                     u1511:
  3103  001634  EFE6  F00A         	goto	l2256
  3104  001638                     u1510:
  3105  001638                     l2262:
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;main.c: 124: };main.c: 125: m_tabVue[i][20]=0;
  3109  001638  C0C2  F0B8         	movff	initTabVue@i,___wmul@multiplier
  3110  00163C  C0C3  F0B9         	movff	initTabVue@i+1,___wmul@multiplier+1
  3111  001640  0E00               	movlw	0
  3112  001642  0100               	movlb	0	; force () banked
  3113  001644  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3114  001646  0E15               	movlw	21
  3115  001648  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  3116  00164A  EC67  F010         	call	___wmul	;wreg free
  3117  00164E  0E14               	movlw	low (_m_tabVue+20)
  3118  001650  0100               	movlb	0	; force () banked
  3119  001652  25B8               	addwf	?___wmul& (0+255),w,b
  3120  001654  6ED9               	movwf	fsr2l,c
  3121  001656  0E01               	movlw	high (_m_tabVue+20)
  3122  001658  21B9               	addwfc	(?___wmul+1)& (0+255),w,b
  3123  00165A  6EDA               	movwf	fsr2h,c
  3124  00165C  0E00               	movlw	0
  3125  00165E  6EDF               	movwf	indf2,c
  3126  001660                     
  3127                           ; BSR set to: 0
  3128  001660  0100               	movlb	0	; force () banked
  3129  001662  4BC2               	infsnz	initTabVue@i& (0+255),f,b
  3130  001664  2BC3               	incf	(initTabVue@i+1)& (0+255),f,b
  3131  001666                     
  3132                           ; BSR set to: 0
  3133  001666  0100               	movlb	0	; force () banked
  3134  001668  BFC3               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3135  00166A  EF40  F00B         	goto	u1521
  3136  00166E  51C3               	movf	(initTabVue@i+1)& (0+255),w,b
  3137  001670  E109               	bnz	u1520
  3138  001672  0E04               	movlw	4
  3139  001674  5DC2               	subwf	initTabVue@i& (0+255),w,b
  3140  001676  A0D8               	btfss	status,0,c
  3141  001678  EF40  F00B         	goto	u1521
  3142  00167C  EF42  F00B         	goto	u1520
  3143  001680                     u1521:
  3144  001680  EFD0  F00A         	goto	l2250
  3145  001684                     u1520:
  3146  001684                     l97:
  3147                           
  3148                           ; BSR set to: 0
  3149  001684  0012               	return		;funcret
  3150  001686                     __end_of_initTabVue:
  3151                           	opt callstack 0
  3152                           
  3153 ;; *************** function _gagne *****************
  3154 ;; Defined at:
  3155 ;;		line 380 in file "main.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  pMines          2    0[BANK0 ] PTR int 
  3158 ;;		 -> main@nbMines(2), 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  j               1    8[BANK0 ] unsigned char 
  3161 ;;  i               1    7[BANK0 ] unsigned char 
  3162 ;;  count           1    6[BANK0 ] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      unsigned char 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3172 ;;      Params:         0       2       0       0       0       0       0
  3173 ;;      Locals:         0       3       0       0       0       0       0
  3174 ;;      Temps:          0       4       0       0       0       0       0
  3175 ;;      Totals:         0       9       0       0       0       0       0
  3176 ;;Total ram usage:        9 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_main
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text15
  3186  00187E                     __ptext15:
  3187                           	opt callstack 0
  3188  00187E                     _gagne:
  3189                           	opt callstack 30
  3190  00187E                     
  3191                           ;main.c: 382: char count=0;
  3192  00187E  0E00               	movlw	0
  3193  001880  0100               	movlb	0	; force () banked
  3194  001882  6FBE               	movwf	gagne@count& (0+255),b
  3195                           
  3196                           ;main.c: 383: for(char i=0;i<4;i++)
  3197  001884  0E00               	movlw	0
  3198  001886  0100               	movlb	0	; force () banked
  3199  001888  6FBF               	movwf	gagne@i& (0+255),b
  3200  00188A                     
  3201                           ; BSR set to: 0
  3202  00188A  0E03               	movlw	3
  3203  00188C  0100               	movlb	0	; force () banked
  3204  00188E  65BF               	cpfsgt	gagne@i& (0+255),b
  3205  001890  EF4C  F00C         	goto	u1751
  3206  001894  EF4E  F00C         	goto	u1750
  3207  001898                     u1751:
  3208  001898  EF50  F00C         	goto	l2390
  3209  00189C                     u1750:
  3210  00189C  EF94  F00C         	goto	l2406
  3211  0018A0                     l2390:
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;main.c: 384: {;main.c: 385: for(char j=0;j<20;j++)
  3215  0018A0  0E00               	movlw	0
  3216  0018A2  0100               	movlb	0	; force () banked
  3217  0018A4  6FC0               	movwf	gagne@j& (0+255),b
  3218  0018A6                     
  3219                           ; BSR set to: 0
  3220  0018A6  0E13               	movlw	19
  3221  0018A8  0100               	movlb	0	; force () banked
  3222  0018AA  65C0               	cpfsgt	gagne@j& (0+255),b
  3223  0018AC  EF5A  F00C         	goto	u1761
  3224  0018B0  EF5C  F00C         	goto	u1760
  3225  0018B4                     u1761:
  3226  0018B4  EF5E  F00C         	goto	l2396
  3227  0018B8                     u1760:
  3228  0018B8  EF89  F00C         	goto	l2402
  3229  0018BC                     l2396:
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;main.c: 386: {;main.c: 387: if(m_tabVue[i][j]==1)
  3233  0018BC  0100               	movlb	0	; force () banked
  3234  0018BE  51BF               	movf	gagne@i& (0+255),w,b
  3235  0018C0  0D15               	mullw	21
  3236  0018C2  0E00               	movlw	low _m_tabVue
  3237  0018C4  0100               	movlb	0	; force () banked
  3238  0018C6  6FBA               	movwf	??_gagne& (0+255),b
  3239  0018C8  0E01               	movlw	high _m_tabVue
  3240  0018CA  6FBB               	movwf	(??_gagne+1)& (0+255),b
  3241  0018CC  50F3               	movf	243,w,c
  3242  0018CE  27BA               	addwf	??_gagne& (0+255),f,b
  3243  0018D0  50F4               	movf	244,w,c
  3244  0018D2  23BB               	addwfc	(??_gagne+1)& (0+255),f,b
  3245  0018D4  0100               	movlb	0	; force () banked
  3246  0018D6  51C0               	movf	gagne@j& (0+255),w,b
  3247  0018D8  0100               	movlb	0	; force () banked
  3248  0018DA  25BA               	addwf	??_gagne& (0+255),w,b
  3249  0018DC  6ED9               	movwf	fsr2l,c
  3250  0018DE  0100               	movlb	0	; force () banked
  3251  0018E0  0E00               	movlw	0
  3252  0018E2  0100               	movlb	0	; force () banked
  3253  0018E4  21BB               	addwfc	(??_gagne+1)& (0+255),w,b
  3254  0018E6  6EDA               	movwf	fsr2h,c
  3255  0018E8  04DE               	decf	postinc2,w,c
  3256  0018EA  A4D8               	btfss	status,2,c
  3257  0018EC  EF7A  F00C         	goto	u1771
  3258  0018F0  EF7C  F00C         	goto	u1770
  3259  0018F4                     u1771:
  3260  0018F4  EF7E  F00C         	goto	l171
  3261  0018F8                     u1770:
  3262  0018F8                     
  3263                           ; BSR set to: 0
  3264                           ;main.c: 388: {;main.c: 389: count++;
  3265  0018F8  0100               	movlb	0	; force () banked
  3266  0018FA  2BBE               	incf	gagne@count& (0+255),f,b
  3267  0018FC                     l171:
  3268                           
  3269                           ; BSR set to: 0
  3270  0018FC  0100               	movlb	0	; force () banked
  3271  0018FE  2BC0               	incf	gagne@j& (0+255),f,b
  3272  001900                     
  3273                           ; BSR set to: 0
  3274  001900  0E13               	movlw	19
  3275  001902  0100               	movlb	0	; force () banked
  3276  001904  65C0               	cpfsgt	gagne@j& (0+255),b
  3277  001906  EF87  F00C         	goto	u1781
  3278  00190A  EF89  F00C         	goto	u1780
  3279  00190E                     u1781:
  3280  00190E  EF5E  F00C         	goto	l2396
  3281  001912                     u1780:
  3282  001912                     l2402:
  3283                           
  3284                           ; BSR set to: 0
  3285  001912  0100               	movlb	0	; force () banked
  3286  001914  2BBF               	incf	gagne@i& (0+255),f,b
  3287  001916                     
  3288                           ; BSR set to: 0
  3289  001916  0E03               	movlw	3
  3290  001918  0100               	movlb	0	; force () banked
  3291  00191A  65BF               	cpfsgt	gagne@i& (0+255),b
  3292  00191C  EF92  F00C         	goto	u1791
  3293  001920  EF94  F00C         	goto	u1790
  3294  001924                     u1791:
  3295  001924  EF50  F00C         	goto	l2390
  3296  001928                     u1790:
  3297  001928                     l2406:
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;main.c: 390: };main.c: 391: };main.c: 392: };main.c: 393: if(count == *pMines)
  3301  001928  C0B8  FFD9         	movff	gagne@pMines,fsr2l
  3302  00192C  C0B9  FFDA         	movff	gagne@pMines+1,fsr2h
  3303  001930  0100               	movlb	0	; force () banked
  3304  001932  51BE               	movf	gagne@count& (0+255),w,b
  3305  001934  0100               	movlb	0	; force () banked
  3306  001936  6FBC               	movwf	(??_gagne+2)& (0+255),b
  3307  001938  6BBD               	clrf	(??_gagne+3)& (0+255),b
  3308  00193A  50DE               	movf	postinc2,w,c
  3309  00193C  19BC               	xorwf	(??_gagne+2)& (0+255),w,b
  3310  00193E  E107               	bnz	u1801
  3311  001940  50DE               	movf	postinc2,w,c
  3312  001942  19BD               	xorwf	(??_gagne+3)& (0+255),w,b
  3313  001944  A4D8               	btfss	status,2,c
  3314  001946  EFA7  F00C         	goto	u1801
  3315  00194A  EFA9  F00C         	goto	u1800
  3316  00194E                     u1801:
  3317  00194E  EFB3  F00C         	goto	l2416
  3318  001952                     u1800:
  3319  001952                     
  3320                           ; BSR set to: 0
  3321                           ;main.c: 394: {;main.c: 395: (*pMines)++;
  3322  001952  C0B8  FFD9         	movff	gagne@pMines,fsr2l
  3323  001956  C0B9  FFDA         	movff	gagne@pMines+1,fsr2h
  3324  00195A  2ADE               	incf	postinc2,f,c
  3325  00195C  0E00               	movlw	0
  3326  00195E  22DD               	addwfc	postdec2,f,c
  3327  001960                     
  3328                           ; BSR set to: 0
  3329                           ;main.c: 396: return 1;
  3330  001960  0E01               	movlw	1
  3331  001962  EFB4  F00C         	goto	l173
  3332  001966                     l2416:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;main.c: 398: else;main.c: 399: {;main.c: 400: return 0;
  3336  001966  0E00               	movlw	0
  3337  001968                     l173:
  3338                           
  3339                           ; BSR set to: 0
  3340  001968  0012               	return		;funcret
  3341  00196A                     __end_of_gagne:
  3342                           	opt callstack 0
  3343                           
  3344 ;; *************** function _deplace *****************
  3345 ;; Defined at:
  3346 ;;		line 272 in file "main.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  x               2    5[BANK0 ] PTR unsigned char 
  3349 ;;		 -> main@posX(1), 
  3350 ;;  y               2    7[BANK0 ] PTR unsigned char 
  3351 ;;		 -> main@posY(1), 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      void 
  3356 ;; Registers used:
  3357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3363 ;;      Params:         0       4       0       0       0       0       0
  3364 ;;      Locals:         0       0       0       0       0       0       0
  3365 ;;      Temps:          0       1       0       0       0       0       0
  3366 ;;      Totals:         0       5       0       0       0       0       0
  3367 ;;Total ram usage:        5 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    4
  3370 ;; This function calls:
  3371 ;;		_getAnalog
  3372 ;;		_lcd_gotoXY
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text16
  3379  001436                     __ptext16:
  3380                           	opt callstack 0
  3381  001436                     _deplace:
  3382                           	opt callstack 26
  3383  001436                     
  3384                           ;main.c: 274: if(getAnalog(7)>150)
  3385  001436  0E07               	movlw	7
  3386  001438  EC3D  F010         	call	_getAnalog
  3387  00143C  0100               	movlb	0	; force () banked
  3388  00143E  6FC1               	movwf	??_deplace& (0+255),b
  3389  001440  0E96               	movlw	150
  3390  001442  65C1               	cpfsgt	??_deplace& (0+255),b
  3391  001444  EF26  F00A         	goto	u1651
  3392  001448  EF28  F00A         	goto	u1650
  3393  00144C                     u1651:
  3394  00144C  EF2D  F00A         	goto	l2338
  3395  001450                     u1650:
  3396  001450                     
  3397                           ; BSR set to: 0
  3398                           ;main.c: 275: {;main.c: 276: (*x)++;
  3399  001450  C0BD  FFD9         	movff	deplace@x,fsr2l
  3400  001454  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3401  001458  2ADF               	incf	indf2,f,c
  3402  00145A                     l2338:
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;main.c: 277: };main.c: 278: if(getAnalog(7)<100)
  3406  00145A  0E07               	movlw	7
  3407  00145C  EC3D  F010         	call	_getAnalog
  3408  001460  0100               	movlb	0	; force () banked
  3409  001462  6FC1               	movwf	??_deplace& (0+255),b
  3410  001464  0E64               	movlw	100
  3411  001466  61C1               	cpfslt	??_deplace& (0+255),b
  3412  001468  EF38  F00A         	goto	u1661
  3413  00146C  EF3A  F00A         	goto	u1660
  3414  001470                     u1661:
  3415  001470  EF3F  F00A         	goto	l2342
  3416  001474                     u1660:
  3417  001474                     
  3418                           ; BSR set to: 0
  3419                           ;main.c: 279: {;main.c: 280: (*x)--;
  3420  001474  C0BD  FFD9         	movff	deplace@x,fsr2l
  3421  001478  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3422  00147C  06DF               	decf	indf2,f,c
  3423  00147E                     l2342:
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;main.c: 281: };main.c: 282: if(getAnalog(6)>150)
  3427  00147E  0E06               	movlw	6
  3428  001480  EC3D  F010         	call	_getAnalog
  3429  001484  0100               	movlb	0	; force () banked
  3430  001486  6FC1               	movwf	??_deplace& (0+255),b
  3431  001488  0E96               	movlw	150
  3432  00148A  65C1               	cpfsgt	??_deplace& (0+255),b
  3433  00148C  EF4A  F00A         	goto	u1671
  3434  001490  EF4C  F00A         	goto	u1670
  3435  001494                     u1671:
  3436  001494  EF51  F00A         	goto	l2346
  3437  001498                     u1670:
  3438  001498                     
  3439                           ; BSR set to: 0
  3440                           ;main.c: 283: {;main.c: 284: (*y)--;
  3441  001498  C0BF  FFD9         	movff	deplace@y,fsr2l
  3442  00149C  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3443  0014A0  06DF               	decf	indf2,f,c
  3444  0014A2                     l2346:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;main.c: 285: };main.c: 286: if(getAnalog(6)<100)
  3448  0014A2  0E06               	movlw	6
  3449  0014A4  EC3D  F010         	call	_getAnalog
  3450  0014A8  0100               	movlb	0	; force () banked
  3451  0014AA  6FC1               	movwf	??_deplace& (0+255),b
  3452  0014AC  0E64               	movlw	100
  3453  0014AE  61C1               	cpfslt	??_deplace& (0+255),b
  3454  0014B0  EF5C  F00A         	goto	u1681
  3455  0014B4  EF5E  F00A         	goto	u1680
  3456  0014B8                     u1681:
  3457  0014B8  EF63  F00A         	goto	l2350
  3458  0014BC                     u1680:
  3459  0014BC                     
  3460                           ; BSR set to: 0
  3461                           ;main.c: 287: {;main.c: 288: (*y)++;
  3462  0014BC  C0BF  FFD9         	movff	deplace@y,fsr2l
  3463  0014C0  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3464  0014C4  2ADF               	incf	indf2,f,c
  3465  0014C6                     l2350:
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;main.c: 289: };main.c: 290: if(*x<=0)
  3469  0014C6  C0BD  FFD9         	movff	deplace@x,fsr2l
  3470  0014CA  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3471  0014CE  50DF               	movf	indf2,w,c
  3472  0014D0  A4D8               	btfss	status,2,c
  3473  0014D2  EF6D  F00A         	goto	u1691
  3474  0014D6  EF6F  F00A         	goto	u1690
  3475  0014DA                     u1691:
  3476  0014DA  EF75  F00A         	goto	l2354
  3477  0014DE                     u1690:
  3478  0014DE                     
  3479                           ; BSR set to: 0
  3480                           ;main.c: 291: {;main.c: 292: *x=20;
  3481  0014DE  C0BD  FFD9         	movff	deplace@x,fsr2l
  3482  0014E2  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3483  0014E6  0E14               	movlw	20
  3484  0014E8  6EDF               	movwf	indf2,c
  3485  0014EA                     l2354:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;main.c: 293: };main.c: 294: if(*x>20)
  3489  0014EA  C0BD  FFD9         	movff	deplace@x,fsr2l
  3490  0014EE  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3491  0014F2  0E14               	movlw	20
  3492  0014F4  64DF               	cpfsgt	indf2,c
  3493  0014F6  EF7F  F00A         	goto	u1701
  3494  0014FA  EF81  F00A         	goto	u1700
  3495  0014FE                     u1701:
  3496  0014FE  EF87  F00A         	goto	l2358
  3497  001502                     u1700:
  3498  001502                     
  3499                           ; BSR set to: 0
  3500                           ;main.c: 295: {;main.c: 296: *x=1;
  3501  001502  C0BD  FFD9         	movff	deplace@x,fsr2l
  3502  001506  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3503  00150A  0E01               	movlw	1
  3504  00150C  6EDF               	movwf	indf2,c
  3505  00150E                     l2358:
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;main.c: 297: };main.c: 298: if(*y<=0)
  3509  00150E  C0BF  FFD9         	movff	deplace@y,fsr2l
  3510  001512  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3511  001516  50DF               	movf	indf2,w,c
  3512  001518  A4D8               	btfss	status,2,c
  3513  00151A  EF91  F00A         	goto	u1711
  3514  00151E  EF93  F00A         	goto	u1710
  3515  001522                     u1711:
  3516  001522  EF99  F00A         	goto	l2362
  3517  001526                     u1710:
  3518  001526                     
  3519                           ; BSR set to: 0
  3520                           ;main.c: 299: {;main.c: 300: *y=4;
  3521  001526  C0BF  FFD9         	movff	deplace@y,fsr2l
  3522  00152A  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3523  00152E  0E04               	movlw	4
  3524  001530  6EDF               	movwf	indf2,c
  3525  001532                     l2362:
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;main.c: 301: };main.c: 302: if(*y>4)
  3529  001532  C0BF  FFD9         	movff	deplace@y,fsr2l
  3530  001536  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3531  00153A  0E04               	movlw	4
  3532  00153C  64DF               	cpfsgt	indf2,c
  3533  00153E  EFA3  F00A         	goto	u1721
  3534  001542  EFA5  F00A         	goto	u1720
  3535  001546                     u1721:
  3536  001546  EFAB  F00A         	goto	l2366
  3537  00154A                     u1720:
  3538  00154A                     
  3539                           ; BSR set to: 0
  3540                           ;main.c: 303: {;main.c: 304: *y=1;
  3541  00154A  C0BF  FFD9         	movff	deplace@y,fsr2l
  3542  00154E  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3543  001552  0E01               	movlw	1
  3544  001554  6EDF               	movwf	indf2,c
  3545  001556                     l2366:
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;main.c: 305: };main.c: 306: lcd_gotoXY(*x,*y);
  3549  001556  C0BF  FFD9         	movff	deplace@y,fsr2l
  3550  00155A  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3551  00155E  50DF               	movf	indf2,w,c
  3552  001560  0100               	movlb	0	; force () banked
  3553  001562  6FBB               	movwf	lcd_gotoXY@y& (0+255),b
  3554  001564  C0BD  FFD9         	movff	deplace@x,fsr2l
  3555  001568  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3556  00156C  50DF               	movf	indf2,w,c
  3557  00156E  ECED  F00D         	call	_lcd_gotoXY
  3558  001572  0012               	return		;funcret
  3559  001574                     __end_of_deplace:
  3560                           	opt callstack 0
  3561                           
  3562 ;; *************** function _getAnalog *****************
  3563 ;; Defined at:
  3564 ;;		line 409 in file "main.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  canal           1    wreg     unsigned char 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  canal           1    1[BANK0 ] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      unsigned char 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3578 ;;      Params:         0       0       0       0       0       0       0
  3579 ;;      Locals:         0       1       0       0       0       0       0
  3580 ;;      Temps:          0       1       0       0       0       0       0
  3581 ;;      Totals:         0       2       0       0       0       0       0
  3582 ;;Total ram usage:        2 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_deplace
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text17
  3592  00207A                     __ptext17:
  3593                           	opt callstack 0
  3594  00207A                     _getAnalog:
  3595                           	opt callstack 29
  3596                           
  3597                           ;incstack = 0
  3598                           ;getAnalog@canal stored from wreg
  3599  00207A  0100               	movlb	0	; force () banked
  3600  00207C  6FB9               	movwf	getAnalog@canal& (0+255),b
  3601  00207E                     
  3602                           ;main.c: 411: ADCON0bits.CHS = canal;
  3603  00207E  C0B9  F0B8         	movff	getAnalog@canal,??_getAnalog
  3604  002082  0100               	movlb	0	; force () banked
  3605  002084  47B8               	rlncf	??_getAnalog& (0+255),f,b
  3606  002086  47B8               	rlncf	??_getAnalog& (0+255),f,b
  3607  002088  50C2               	movf	194,w,c	;volatile
  3608  00208A  19B8               	xorwf	??_getAnalog& (0+255),w,b
  3609  00208C  0BC3               	andlw	-61
  3610  00208E  19B8               	xorwf	??_getAnalog& (0+255),w,b
  3611  002090  6EC2               	movwf	194,c	;volatile
  3612  002092                     
  3613                           ;main.c: 413: ADCON0bits.GO_DONE = 1;
  3614  002092  82C2               	bsf	194,1,c	;volatile
  3615  002094                     l177:
  3616  002094  B2C2               	btfsc	194,1,c	;volatile
  3617  002096  EF4F  F010         	goto	u281
  3618  00209A  EF51  F010         	goto	u280
  3619  00209E                     u281:
  3620  00209E  EF4A  F010         	goto	l177
  3621  0020A2                     u280:
  3622  0020A2                     
  3623                           ;main.c: 416: return ADRESH;
  3624  0020A2  50C4               	movf	196,w,c	;volatile
  3625  0020A4  0012               	return		;funcret
  3626  0020A6                     __end_of_getAnalog:
  3627                           	opt callstack 0
  3628                           
  3629 ;; *************** function _demine *****************
  3630 ;; Defined at:
  3631 ;;		line 317 in file "main.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  x               1    wreg     unsigned char 
  3634 ;;  y               1   10[BANK0 ] unsigned char 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  x               1   15[BANK0 ] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      unsigned char 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3646 ;;      Params:         0       1       0       0       0       0       0
  3647 ;;      Locals:         0       1       0       0       0       0       0
  3648 ;;      Temps:          0       4       0       0       0       0       0
  3649 ;;      Totals:         0       6       0       0       0       0       0
  3650 ;;Total ram usage:        6 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    1
  3653 ;; This function calls:
  3654 ;;		_enleveTuilesAutour
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text18
  3661  00178E                     __ptext18:
  3662                           	opt callstack 0
  3663  00178E                     _demine:
  3664                           	opt callstack 29
  3665                           
  3666                           ;incstack = 0
  3667                           ;demine@x stored from wreg
  3668  00178E  0100               	movlb	0	; force () banked
  3669  001790  6FC7               	movwf	demine@x& (0+255),b
  3670  001792                     
  3671                           ;main.c: 319: if(m_tabMines[y][x]== 2)
  3672  001792  0100               	movlb	0	; force () banked
  3673  001794  51C2               	movf	demine@y& (0+255),w,b
  3674  001796  0D15               	mullw	21
  3675  001798  0E64               	movlw	low _m_tabMines
  3676  00179A  0100               	movlb	0	; force () banked
  3677  00179C  6FC3               	movwf	??_demine& (0+255),b
  3678  00179E  0E00               	movlw	high _m_tabMines
  3679  0017A0  6FC4               	movwf	(??_demine+1)& (0+255),b
  3680  0017A2  50F3               	movf	243,w,c
  3681  0017A4  27C3               	addwf	??_demine& (0+255),f,b
  3682  0017A6  50F4               	movf	244,w,c
  3683  0017A8  23C4               	addwfc	(??_demine+1)& (0+255),f,b
  3684  0017AA  0100               	movlb	0	; force () banked
  3685  0017AC  51C7               	movf	demine@x& (0+255),w,b
  3686  0017AE  0100               	movlb	0	; force () banked
  3687  0017B0  25C3               	addwf	??_demine& (0+255),w,b
  3688  0017B2  6ED9               	movwf	fsr2l,c
  3689  0017B4  0100               	movlb	0	; force () banked
  3690  0017B6  0E00               	movlw	0
  3691  0017B8  0100               	movlb	0	; force () banked
  3692  0017BA  21C4               	addwfc	(??_demine+1)& (0+255),w,b
  3693  0017BC  6EDA               	movwf	fsr2h,c
  3694  0017BE  0E02               	movlw	2
  3695  0017C0  18DE               	xorwf	postinc2,w,c
  3696  0017C2  A4D8               	btfss	status,2,c
  3697  0017C4  EFE6  F00B         	goto	u1731
  3698  0017C8  EFE8  F00B         	goto	u1730
  3699  0017CC                     u1731:
  3700  0017CC  EFEB  F00B         	goto	l2374
  3701  0017D0                     u1730:
  3702  0017D0                     
  3703                           ; BSR set to: 0
  3704                           ;main.c: 320: {;main.c: 321: return 0;
  3705  0017D0  0E00               	movlw	0
  3706  0017D2  EF3E  F00C         	goto	l152
  3707  0017D6                     l2374:
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;main.c: 322: };main.c: 323: if(m_tabVue[y][x]==1)
  3711  0017D6  0100               	movlb	0	; force () banked
  3712  0017D8  51C2               	movf	demine@y& (0+255),w,b
  3713  0017DA  0D15               	mullw	21
  3714  0017DC  0E00               	movlw	low _m_tabVue
  3715  0017DE  0100               	movlb	0	; force () banked
  3716  0017E0  6FC3               	movwf	??_demine& (0+255),b
  3717  0017E2  0E01               	movlw	high _m_tabVue
  3718  0017E4  6FC4               	movwf	(??_demine+1)& (0+255),b
  3719  0017E6  50F3               	movf	243,w,c
  3720  0017E8  27C3               	addwf	??_demine& (0+255),f,b
  3721  0017EA  50F4               	movf	244,w,c
  3722  0017EC  23C4               	addwfc	(??_demine+1)& (0+255),f,b
  3723  0017EE  0100               	movlb	0	; force () banked
  3724  0017F0  51C7               	movf	demine@x& (0+255),w,b
  3725  0017F2  0100               	movlb	0	; force () banked
  3726  0017F4  25C3               	addwf	??_demine& (0+255),w,b
  3727  0017F6  6ED9               	movwf	fsr2l,c
  3728  0017F8  0100               	movlb	0	; force () banked
  3729  0017FA  0E00               	movlw	0
  3730  0017FC  0100               	movlb	0	; force () banked
  3731  0017FE  21C4               	addwfc	(??_demine+1)& (0+255),w,b
  3732  001800  6EDA               	movwf	fsr2h,c
  3733  001802  04DE               	decf	postinc2,w,c
  3734  001804  A4D8               	btfss	status,2,c
  3735  001806  EF07  F00C         	goto	u1741
  3736  00180A  EF09  F00C         	goto	u1740
  3737  00180E                     u1741:
  3738  00180E  EF0F  F00C         	goto	l2378
  3739  001812                     u1740:
  3740  001812                     
  3741                           ; BSR set to: 0
  3742                           ;main.c: 324: {;main.c: 325: enleveTuilesAutour(x,y);
  3743  001812  C0C2  F0B8         	movff	demine@y,enleveTuilesAutour@y
  3744  001816  0100               	movlb	0	; force () banked
  3745  001818  51C7               	movf	demine@x& (0+255),w,b
  3746  00181A  EC0C  F003         	call	_enleveTuilesAutour
  3747  00181E                     l2378:
  3748                           
  3749                           ;main.c: 326: };main.c: 327: m_tabVue[y][x] = m_tabMines[y][x];
  3750  00181E  0100               	movlb	0	; force () banked
  3751  001820  51C2               	movf	demine@y& (0+255),w,b
  3752  001822  0D15               	mullw	21
  3753  001824  0E64               	movlw	low _m_tabMines
  3754  001826  0100               	movlb	0	; force () banked
  3755  001828  6FC3               	movwf	??_demine& (0+255),b
  3756  00182A  0E00               	movlw	high _m_tabMines
  3757  00182C  6FC4               	movwf	(??_demine+1)& (0+255),b
  3758  00182E  50F3               	movf	243,w,c
  3759  001830  27C3               	addwf	??_demine& (0+255),f,b
  3760  001832  50F4               	movf	244,w,c
  3761  001834  23C4               	addwfc	(??_demine+1)& (0+255),f,b
  3762  001836  0100               	movlb	0	; force () banked
  3763  001838  51C7               	movf	demine@x& (0+255),w,b
  3764  00183A  0100               	movlb	0	; force () banked
  3765  00183C  25C3               	addwf	??_demine& (0+255),w,b
  3766  00183E  6ED9               	movwf	fsr2l,c
  3767  001840  0100               	movlb	0	; force () banked
  3768  001842  0E00               	movlw	0
  3769  001844  0100               	movlb	0	; force () banked
  3770  001846  21C4               	addwfc	(??_demine+1)& (0+255),w,b
  3771  001848  6EDA               	movwf	fsr2h,c
  3772  00184A  0100               	movlb	0	; force () banked
  3773  00184C  51C2               	movf	demine@y& (0+255),w,b
  3774  00184E  0D15               	mullw	21
  3775  001850  0E00               	movlw	low _m_tabVue
  3776  001852  0100               	movlb	0	; force () banked
  3777  001854  6FC5               	movwf	(??_demine+2)& (0+255),b
  3778  001856  0E01               	movlw	high _m_tabVue
  3779  001858  6FC6               	movwf	(??_demine+3)& (0+255),b
  3780  00185A  50F3               	movf	243,w,c
  3781  00185C  27C5               	addwf	(??_demine+2)& (0+255),f,b
  3782  00185E  50F4               	movf	244,w,c
  3783  001860  23C6               	addwfc	(??_demine+3)& (0+255),f,b
  3784  001862  0100               	movlb	0	; force () banked
  3785  001864  51C7               	movf	demine@x& (0+255),w,b
  3786  001866  0100               	movlb	0	; force () banked
  3787  001868  25C5               	addwf	(??_demine+2)& (0+255),w,b
  3788  00186A  6EE1               	movwf	fsr1l,c
  3789  00186C  0100               	movlb	0	; force () banked
  3790  00186E  0E00               	movlw	0
  3791  001870  0100               	movlb	0	; force () banked
  3792  001872  21C6               	addwfc	(??_demine+3)& (0+255),w,b
  3793  001874  6EE2               	movwf	fsr1h,c
  3794  001876  CFDF FFE7          	movff	indf2,indf1
  3795  00187A                     
  3796                           ; BSR set to: 0
  3797                           ;main.c: 328: return 1;
  3798  00187A  0E01               	movlw	1
  3799  00187C                     l152:
  3800                           
  3801                           ; BSR set to: 0
  3802  00187C  0012               	return		;funcret
  3803  00187E                     __end_of_demine:
  3804                           	opt callstack 0
  3805                           
  3806 ;; *************** function _enleveTuilesAutour *****************
  3807 ;; Defined at:
  3808 ;;		line 337 in file "main.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  x               1    wreg     unsigned char 
  3811 ;;  y               1    0[BANK0 ] unsigned char 
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  x               1    9[BANK0 ] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      void 
  3816 ;; Registers used:
  3817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3823 ;;      Params:         0       1       0       0       0       0       0
  3824 ;;      Locals:         0       1       0       0       0       0       0
  3825 ;;      Temps:          0       8       0       0       0       0       0
  3826 ;;      Totals:         0      10       0       0       0       0       0
  3827 ;;Total ram usage:       10 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_demine
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text19
  3837  000618                     __ptext19:
  3838                           	opt callstack 0
  3839  000618                     _enleveTuilesAutour:
  3840                           	opt callstack 29
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;incstack = 0
  3844                           ;enleveTuilesAutour@x stored from wreg
  3845  000618  0100               	movlb	0	; force () banked
  3846  00061A  6FC1               	movwf	enleveTuilesAutour@x& (0+255),b
  3847  00061C                     
  3848                           ;main.c: 339: if((m_tabMines[y-1][x-1]!=2)&&(x>=0)&&(y>=0))
  3849  00061C  0100               	movlb	0	; force () banked
  3850  00061E  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3851  000620  0D15               	mullw	21
  3852  000622  0EEA               	movlw	234
  3853  000624  0100               	movlb	0	; force () banked
  3854  000626  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  3855  000628  0EFF               	movlw	255
  3856  00062A  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3857  00062C  0E64               	movlw	low _m_tabMines
  3858  00062E  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3859  000630  0E00               	movlw	high _m_tabMines
  3860  000632  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3861  000634  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  3862  000636  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3863  000638  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  3864  00063A  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3865  00063C  50F3               	movf	243,w,c
  3866  00063E  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3867  000640  50F4               	movf	244,w,c
  3868  000642  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3869  000644  0100               	movlb	0	; force () banked
  3870  000646  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3871  000648  0100               	movlb	0	; force () banked
  3872  00064A  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3873  00064C  6ED9               	movwf	fsr2l,c
  3874  00064E  0100               	movlb	0	; force () banked
  3875  000650  0E00               	movlw	0
  3876  000652  0100               	movlb	0	; force () banked
  3877  000654  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3878  000656  6EDA               	movwf	fsr2h,c
  3879  000658  0E02               	movlw	2
  3880  00065A  18DE               	xorwf	postinc2,w,c
  3881  00065C  B4D8               	btfsc	status,2,c
  3882  00065E  EF33  F003         	goto	u1251
  3883  000662  EF35  F003         	goto	u1250
  3884  000666                     u1251:
  3885  000666  EF73  F003         	goto	l2064
  3886  00066A                     u1250:
  3887  00066A                     
  3888                           ; BSR set to: 0
  3889                           ;main.c: 340: {;main.c: 341: m_tabVue[y-1][x-1] = m_tabMines[y-1][x-1];
  3890  00066A  0100               	movlb	0	; force () banked
  3891  00066C  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3892  00066E  0D15               	mullw	21
  3893  000670  0EEA               	movlw	234
  3894  000672  0100               	movlb	0	; force () banked
  3895  000674  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  3896  000676  0EFF               	movlw	255
  3897  000678  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3898  00067A  0E64               	movlw	low _m_tabMines
  3899  00067C  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3900  00067E  0E00               	movlw	high _m_tabMines
  3901  000680  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3902  000682  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  3903  000684  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3904  000686  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  3905  000688  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3906  00068A  50F3               	movf	243,w,c
  3907  00068C  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3908  00068E  50F4               	movf	244,w,c
  3909  000690  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3910  000692  0100               	movlb	0	; force () banked
  3911  000694  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3912  000696  0100               	movlb	0	; force () banked
  3913  000698  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3914  00069A  6ED9               	movwf	fsr2l,c
  3915  00069C  0100               	movlb	0	; force () banked
  3916  00069E  0E00               	movlw	0
  3917  0006A0  0100               	movlb	0	; force () banked
  3918  0006A2  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3919  0006A4  6EDA               	movwf	fsr2h,c
  3920  0006A6  0100               	movlb	0	; force () banked
  3921  0006A8  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3922  0006AA  0D15               	mullw	21
  3923  0006AC  0EEA               	movlw	234
  3924  0006AE  0100               	movlb	0	; force () banked
  3925  0006B0  6FBD               	movwf	(??_enleveTuilesAutour+4)& (0+255),b
  3926  0006B2  0EFF               	movlw	255
  3927  0006B4  6FBE               	movwf	(??_enleveTuilesAutour+5)& (0+255),b
  3928  0006B6  0E00               	movlw	low _m_tabVue
  3929  0006B8  6FBF               	movwf	(??_enleveTuilesAutour+6)& (0+255),b
  3930  0006BA  0E01               	movlw	high _m_tabVue
  3931  0006BC  6FC0               	movwf	(??_enleveTuilesAutour+7)& (0+255),b
  3932  0006BE  51BD               	movf	(??_enleveTuilesAutour+4)& (0+255),w,b
  3933  0006C0  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  3934  0006C2  51BE               	movf	(??_enleveTuilesAutour+5)& (0+255),w,b
  3935  0006C4  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  3936  0006C6  50F3               	movf	243,w,c
  3937  0006C8  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  3938  0006CA  50F4               	movf	244,w,c
  3939  0006CC  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  3940  0006CE  0100               	movlb	0	; force () banked
  3941  0006D0  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3942  0006D2  0100               	movlb	0	; force () banked
  3943  0006D4  25BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),w,b
  3944  0006D6  6EE1               	movwf	fsr1l,c
  3945  0006D8  0100               	movlb	0	; force () banked
  3946  0006DA  0E00               	movlw	0
  3947  0006DC  0100               	movlb	0	; force () banked
  3948  0006DE  21C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),w,b
  3949  0006E0  6EE2               	movwf	fsr1h,c
  3950  0006E2  CFDF FFE7          	movff	indf2,indf1
  3951  0006E6                     l2064:
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;main.c: 342: };main.c: 343: if((m_tabMines[y-1][x]!=2)&&(y>=0))
  3955  0006E6  0100               	movlb	0	; force () banked
  3956  0006E8  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3957  0006EA  0D15               	mullw	21
  3958  0006EC  0EEB               	movlw	235
  3959  0006EE  0100               	movlb	0	; force () banked
  3960  0006F0  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  3961  0006F2  0EFF               	movlw	255
  3962  0006F4  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3963  0006F6  0E64               	movlw	low _m_tabMines
  3964  0006F8  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3965  0006FA  0E00               	movlw	high _m_tabMines
  3966  0006FC  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3967  0006FE  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  3968  000700  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3969  000702  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  3970  000704  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3971  000706  50F3               	movf	243,w,c
  3972  000708  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3973  00070A  50F4               	movf	244,w,c
  3974  00070C  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3975  00070E  0100               	movlb	0	; force () banked
  3976  000710  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3977  000712  0100               	movlb	0	; force () banked
  3978  000714  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3979  000716  6ED9               	movwf	fsr2l,c
  3980  000718  0100               	movlb	0	; force () banked
  3981  00071A  0E00               	movlw	0
  3982  00071C  0100               	movlb	0	; force () banked
  3983  00071E  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3984  000720  6EDA               	movwf	fsr2h,c
  3985  000722  0E02               	movlw	2
  3986  000724  18DE               	xorwf	postinc2,w,c
  3987  000726  B4D8               	btfsc	status,2,c
  3988  000728  EF98  F003         	goto	u1261
  3989  00072C  EF9A  F003         	goto	u1260
  3990  000730                     u1261:
  3991  000730  EFD8  F003         	goto	l2068
  3992  000734                     u1260:
  3993  000734                     
  3994                           ; BSR set to: 0
  3995                           ;main.c: 344: {;main.c: 345: m_tabVue[y-1][x] = m_tabMines[y-1][x];
  3996  000734  0100               	movlb	0	; force () banked
  3997  000736  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3998  000738  0D15               	mullw	21
  3999  00073A  0EEB               	movlw	235
  4000  00073C  0100               	movlb	0	; force () banked
  4001  00073E  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4002  000740  0EFF               	movlw	255
  4003  000742  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4004  000744  0E64               	movlw	low _m_tabMines
  4005  000746  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4006  000748  0E00               	movlw	high _m_tabMines
  4007  00074A  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4008  00074C  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  4009  00074E  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4010  000750  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  4011  000752  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4012  000754  50F3               	movf	243,w,c
  4013  000756  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4014  000758  50F4               	movf	244,w,c
  4015  00075A  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4016  00075C  0100               	movlb	0	; force () banked
  4017  00075E  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4018  000760  0100               	movlb	0	; force () banked
  4019  000762  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4020  000764  6ED9               	movwf	fsr2l,c
  4021  000766  0100               	movlb	0	; force () banked
  4022  000768  0E00               	movlw	0
  4023  00076A  0100               	movlb	0	; force () banked
  4024  00076C  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4025  00076E  6EDA               	movwf	fsr2h,c
  4026  000770  0100               	movlb	0	; force () banked
  4027  000772  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4028  000774  0D15               	mullw	21
  4029  000776  0EEB               	movlw	235
  4030  000778  0100               	movlb	0	; force () banked
  4031  00077A  6FBD               	movwf	(??_enleveTuilesAutour+4)& (0+255),b
  4032  00077C  0EFF               	movlw	255
  4033  00077E  6FBE               	movwf	(??_enleveTuilesAutour+5)& (0+255),b
  4034  000780  0E00               	movlw	low _m_tabVue
  4035  000782  6FBF               	movwf	(??_enleveTuilesAutour+6)& (0+255),b
  4036  000784  0E01               	movlw	high _m_tabVue
  4037  000786  6FC0               	movwf	(??_enleveTuilesAutour+7)& (0+255),b
  4038  000788  51BD               	movf	(??_enleveTuilesAutour+4)& (0+255),w,b
  4039  00078A  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  4040  00078C  51BE               	movf	(??_enleveTuilesAutour+5)& (0+255),w,b
  4041  00078E  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  4042  000790  50F3               	movf	243,w,c
  4043  000792  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  4044  000794  50F4               	movf	244,w,c
  4045  000796  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  4046  000798  0100               	movlb	0	; force () banked
  4047  00079A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4048  00079C  0100               	movlb	0	; force () banked
  4049  00079E  25BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),w,b
  4050  0007A0  6EE1               	movwf	fsr1l,c
  4051  0007A2  0100               	movlb	0	; force () banked
  4052  0007A4  0E00               	movlw	0
  4053  0007A6  0100               	movlb	0	; force () banked
  4054  0007A8  21C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),w,b
  4055  0007AA  6EE2               	movwf	fsr1h,c
  4056  0007AC  CFDF FFE7          	movff	indf2,indf1
  4057  0007B0                     l2068:
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;main.c: 346: };main.c: 347: if((m_tabMines[y-1][x+1]!=2)&&(y>=0)&&(x<20))
  4061  0007B0  0100               	movlb	0	; force () banked
  4062  0007B2  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4063  0007B4  0D15               	mullw	21
  4064  0007B6  0EEC               	movlw	236
  4065  0007B8  0100               	movlb	0	; force () banked
  4066  0007BA  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4067  0007BC  0EFF               	movlw	255
  4068  0007BE  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4069  0007C0  0E64               	movlw	low _m_tabMines
  4070  0007C2  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4071  0007C4  0E00               	movlw	high _m_tabMines
  4072  0007C6  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4073  0007C8  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  4074  0007CA  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4075  0007CC  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  4076  0007CE  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4077  0007D0  50F3               	movf	243,w,c
  4078  0007D2  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4079  0007D4  50F4               	movf	244,w,c
  4080  0007D6  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4081  0007D8  0100               	movlb	0	; force () banked
  4082  0007DA  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4083  0007DC  0100               	movlb	0	; force () banked
  4084  0007DE  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4085  0007E0  6ED9               	movwf	fsr2l,c
  4086  0007E2  0100               	movlb	0	; force () banked
  4087  0007E4  0E00               	movlw	0
  4088  0007E6  0100               	movlb	0	; force () banked
  4089  0007E8  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4090  0007EA  6EDA               	movwf	fsr2h,c
  4091  0007EC  0E02               	movlw	2
  4092  0007EE  18DE               	xorwf	postinc2,w,c
  4093  0007F0  B4D8               	btfsc	status,2,c
  4094  0007F2  EFFD  F003         	goto	u1271
  4095  0007F6  EFFF  F003         	goto	u1270
  4096  0007FA                     u1271:
  4097  0007FA  EF46  F004         	goto	l2074
  4098  0007FE                     u1270:
  4099  0007FE                     
  4100                           ; BSR set to: 0
  4101  0007FE  0E14               	movlw	20
  4102  000800  0100               	movlb	0	; force () banked
  4103  000802  61C1               	cpfslt	enleveTuilesAutour@x& (0+255),b
  4104  000804  EF06  F004         	goto	u1281
  4105  000808  EF08  F004         	goto	u1280
  4106  00080C                     u1281:
  4107  00080C  EF46  F004         	goto	l2074
  4108  000810                     u1280:
  4109  000810                     
  4110                           ; BSR set to: 0
  4111                           ;main.c: 348: {;main.c: 349: m_tabVue[y-1][x+1] = m_tabMines[y-1][x+1];
  4112  000810  0100               	movlb	0	; force () banked
  4113  000812  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4114  000814  0D15               	mullw	21
  4115  000816  0EEC               	movlw	236
  4116  000818  0100               	movlb	0	; force () banked
  4117  00081A  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4118  00081C  0EFF               	movlw	255
  4119  00081E  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4120  000820  0E64               	movlw	low _m_tabMines
  4121  000822  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4122  000824  0E00               	movlw	high _m_tabMines
  4123  000826  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4124  000828  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  4125  00082A  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4126  00082C  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  4127  00082E  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4128  000830  50F3               	movf	243,w,c
  4129  000832  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4130  000834  50F4               	movf	244,w,c
  4131  000836  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4132  000838  0100               	movlb	0	; force () banked
  4133  00083A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4134  00083C  0100               	movlb	0	; force () banked
  4135  00083E  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4136  000840  6ED9               	movwf	fsr2l,c
  4137  000842  0100               	movlb	0	; force () banked
  4138  000844  0E00               	movlw	0
  4139  000846  0100               	movlb	0	; force () banked
  4140  000848  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4141  00084A  6EDA               	movwf	fsr2h,c
  4142  00084C  0100               	movlb	0	; force () banked
  4143  00084E  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4144  000850  0D15               	mullw	21
  4145  000852  0EEC               	movlw	236
  4146  000854  0100               	movlb	0	; force () banked
  4147  000856  6FBD               	movwf	(??_enleveTuilesAutour+4)& (0+255),b
  4148  000858  0EFF               	movlw	255
  4149  00085A  6FBE               	movwf	(??_enleveTuilesAutour+5)& (0+255),b
  4150  00085C  0E00               	movlw	low _m_tabVue
  4151  00085E  6FBF               	movwf	(??_enleveTuilesAutour+6)& (0+255),b
  4152  000860  0E01               	movlw	high _m_tabVue
  4153  000862  6FC0               	movwf	(??_enleveTuilesAutour+7)& (0+255),b
  4154  000864  51BD               	movf	(??_enleveTuilesAutour+4)& (0+255),w,b
  4155  000866  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  4156  000868  51BE               	movf	(??_enleveTuilesAutour+5)& (0+255),w,b
  4157  00086A  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  4158  00086C  50F3               	movf	243,w,c
  4159  00086E  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  4160  000870  50F4               	movf	244,w,c
  4161  000872  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  4162  000874  0100               	movlb	0	; force () banked
  4163  000876  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4164  000878  0100               	movlb	0	; force () banked
  4165  00087A  25BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),w,b
  4166  00087C  6EE1               	movwf	fsr1l,c
  4167  00087E  0100               	movlb	0	; force () banked
  4168  000880  0E00               	movlw	0
  4169  000882  0100               	movlb	0	; force () banked
  4170  000884  21C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),w,b
  4171  000886  6EE2               	movwf	fsr1h,c
  4172  000888  CFDF FFE7          	movff	indf2,indf1
  4173  00088C                     l2074:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;main.c: 350: };main.c: 351: if((m_tabMines[y+1][x-1]!=2)&&(x>=0)&&(y<4))
  4177  00088C  0100               	movlb	0	; force () banked
  4178  00088E  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4179  000890  0D15               	mullw	21
  4180  000892  0E64               	movlw	low _m_tabMines
  4181  000894  0100               	movlb	0	; force () banked
  4182  000896  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4183  000898  0E00               	movlw	high _m_tabMines
  4184  00089A  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4185  00089C  0E14               	movlw	20
  4186  00089E  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4187  0008A0  0E00               	movlw	0
  4188  0008A2  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4189  0008A4  50F3               	movf	243,w,c
  4190  0008A6  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4191  0008A8  50F4               	movf	244,w,c
  4192  0008AA  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4193  0008AC  0100               	movlb	0	; force () banked
  4194  0008AE  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4195  0008B0  0100               	movlb	0	; force () banked
  4196  0008B2  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4197  0008B4  6ED9               	movwf	fsr2l,c
  4198  0008B6  0100               	movlb	0	; force () banked
  4199  0008B8  0E00               	movlw	0
  4200  0008BA  0100               	movlb	0	; force () banked
  4201  0008BC  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4202  0008BE  6EDA               	movwf	fsr2h,c
  4203  0008C0  0E02               	movlw	2
  4204  0008C2  18DE               	xorwf	postinc2,w,c
  4205  0008C4  B4D8               	btfsc	status,2,c
  4206  0008C6  EF67  F004         	goto	u1291
  4207  0008CA  EF69  F004         	goto	u1290
  4208  0008CE                     u1291:
  4209  0008CE  EFA8  F004         	goto	l2080
  4210  0008D2                     u1290:
  4211  0008D2                     
  4212                           ; BSR set to: 0
  4213  0008D2  0E04               	movlw	4
  4214  0008D4  0100               	movlb	0	; force () banked
  4215  0008D6  61B8               	cpfslt	enleveTuilesAutour@y& (0+255),b
  4216  0008D8  EF70  F004         	goto	u1301
  4217  0008DC  EF72  F004         	goto	u1300
  4218  0008E0                     u1301:
  4219  0008E0  EFA8  F004         	goto	l2080
  4220  0008E4                     u1300:
  4221  0008E4                     
  4222                           ; BSR set to: 0
  4223                           ;main.c: 352: {;main.c: 353: m_tabVue[y+1][x-1] = m_tabMines[y+1][x-1];
  4224  0008E4  0100               	movlb	0	; force () banked
  4225  0008E6  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4226  0008E8  0D15               	mullw	21
  4227  0008EA  0E64               	movlw	low _m_tabMines
  4228  0008EC  0100               	movlb	0	; force () banked
  4229  0008EE  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4230  0008F0  0E00               	movlw	high _m_tabMines
  4231  0008F2  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4232  0008F4  0E14               	movlw	20
  4233  0008F6  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4234  0008F8  0E00               	movlw	0
  4235  0008FA  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4236  0008FC  50F3               	movf	243,w,c
  4237  0008FE  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4238  000900  50F4               	movf	244,w,c
  4239  000902  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4240  000904  0100               	movlb	0	; force () banked
  4241  000906  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4242  000908  0100               	movlb	0	; force () banked
  4243  00090A  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4244  00090C  6ED9               	movwf	fsr2l,c
  4245  00090E  0100               	movlb	0	; force () banked
  4246  000910  0E00               	movlw	0
  4247  000912  0100               	movlb	0	; force () banked
  4248  000914  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4249  000916  6EDA               	movwf	fsr2h,c
  4250  000918  0100               	movlb	0	; force () banked
  4251  00091A  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4252  00091C  0D15               	mullw	21
  4253  00091E  0E00               	movlw	low _m_tabVue
  4254  000920  0100               	movlb	0	; force () banked
  4255  000922  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4256  000924  0E01               	movlw	high _m_tabVue
  4257  000926  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4258  000928  0E14               	movlw	20
  4259  00092A  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4260  00092C  0E00               	movlw	0
  4261  00092E  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4262  000930  50F3               	movf	243,w,c
  4263  000932  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4264  000934  50F4               	movf	244,w,c
  4265  000936  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4266  000938  0100               	movlb	0	; force () banked
  4267  00093A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4268  00093C  0100               	movlb	0	; force () banked
  4269  00093E  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4270  000940  6EE1               	movwf	fsr1l,c
  4271  000942  0100               	movlb	0	; force () banked
  4272  000944  0E00               	movlw	0
  4273  000946  0100               	movlb	0	; force () banked
  4274  000948  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4275  00094A  6EE2               	movwf	fsr1h,c
  4276  00094C  CFDF FFE7          	movff	indf2,indf1
  4277  000950                     l2080:
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;main.c: 354: };main.c: 355: if((m_tabMines[y][x-1]!=2)&&(x>=0))
  4281  000950  0100               	movlb	0	; force () banked
  4282  000952  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4283  000954  0D15               	mullw	21
  4284  000956  0EFF               	movlw	255
  4285  000958  0100               	movlb	0	; force () banked
  4286  00095A  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4287  00095C  0EFF               	movlw	255
  4288  00095E  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4289  000960  0E64               	movlw	low _m_tabMines
  4290  000962  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4291  000964  0E00               	movlw	high _m_tabMines
  4292  000966  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4293  000968  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  4294  00096A  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4295  00096C  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  4296  00096E  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4297  000970  50F3               	movf	243,w,c
  4298  000972  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4299  000974  50F4               	movf	244,w,c
  4300  000976  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4301  000978  0100               	movlb	0	; force () banked
  4302  00097A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4303  00097C  0100               	movlb	0	; force () banked
  4304  00097E  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4305  000980  6ED9               	movwf	fsr2l,c
  4306  000982  0100               	movlb	0	; force () banked
  4307  000984  0E00               	movlw	0
  4308  000986  0100               	movlb	0	; force () banked
  4309  000988  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4310  00098A  6EDA               	movwf	fsr2h,c
  4311  00098C  0E02               	movlw	2
  4312  00098E  18DE               	xorwf	postinc2,w,c
  4313  000990  B4D8               	btfsc	status,2,c
  4314  000992  EFCD  F004         	goto	u1311
  4315  000996  EFCF  F004         	goto	u1310
  4316  00099A                     u1311:
  4317  00099A  EF0D  F005         	goto	l2084
  4318  00099E                     u1310:
  4319  00099E                     
  4320                           ; BSR set to: 0
  4321                           ;main.c: 356: {;main.c: 357: m_tabVue[y][x-1] = m_tabMines[y][x-1];
  4322  00099E  0100               	movlb	0	; force () banked
  4323  0009A0  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4324  0009A2  0D15               	mullw	21
  4325  0009A4  0EFF               	movlw	255
  4326  0009A6  0100               	movlb	0	; force () banked
  4327  0009A8  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4328  0009AA  0EFF               	movlw	255
  4329  0009AC  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4330  0009AE  0E64               	movlw	low _m_tabMines
  4331  0009B0  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4332  0009B2  0E00               	movlw	high _m_tabMines
  4333  0009B4  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4334  0009B6  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  4335  0009B8  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4336  0009BA  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  4337  0009BC  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4338  0009BE  50F3               	movf	243,w,c
  4339  0009C0  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4340  0009C2  50F4               	movf	244,w,c
  4341  0009C4  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4342  0009C6  0100               	movlb	0	; force () banked
  4343  0009C8  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4344  0009CA  0100               	movlb	0	; force () banked
  4345  0009CC  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4346  0009CE  6ED9               	movwf	fsr2l,c
  4347  0009D0  0100               	movlb	0	; force () banked
  4348  0009D2  0E00               	movlw	0
  4349  0009D4  0100               	movlb	0	; force () banked
  4350  0009D6  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4351  0009D8  6EDA               	movwf	fsr2h,c
  4352  0009DA  0100               	movlb	0	; force () banked
  4353  0009DC  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4354  0009DE  0D15               	mullw	21
  4355  0009E0  0EFF               	movlw	255
  4356  0009E2  0100               	movlb	0	; force () banked
  4357  0009E4  6FBD               	movwf	(??_enleveTuilesAutour+4)& (0+255),b
  4358  0009E6  0EFF               	movlw	255
  4359  0009E8  6FBE               	movwf	(??_enleveTuilesAutour+5)& (0+255),b
  4360  0009EA  0E00               	movlw	low _m_tabVue
  4361  0009EC  6FBF               	movwf	(??_enleveTuilesAutour+6)& (0+255),b
  4362  0009EE  0E01               	movlw	high _m_tabVue
  4363  0009F0  6FC0               	movwf	(??_enleveTuilesAutour+7)& (0+255),b
  4364  0009F2  51BD               	movf	(??_enleveTuilesAutour+4)& (0+255),w,b
  4365  0009F4  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  4366  0009F6  51BE               	movf	(??_enleveTuilesAutour+5)& (0+255),w,b
  4367  0009F8  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  4368  0009FA  50F3               	movf	243,w,c
  4369  0009FC  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  4370  0009FE  50F4               	movf	244,w,c
  4371  000A00  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  4372  000A02  0100               	movlb	0	; force () banked
  4373  000A04  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4374  000A06  0100               	movlb	0	; force () banked
  4375  000A08  25BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),w,b
  4376  000A0A  6EE1               	movwf	fsr1l,c
  4377  000A0C  0100               	movlb	0	; force () banked
  4378  000A0E  0E00               	movlw	0
  4379  000A10  0100               	movlb	0	; force () banked
  4380  000A12  21C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),w,b
  4381  000A14  6EE2               	movwf	fsr1h,c
  4382  000A16  CFDF FFE7          	movff	indf2,indf1
  4383  000A1A                     l2084:
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;main.c: 358: };main.c: 359: if((m_tabMines[y+1][x]!=2)&&(y<4))
  4387  000A1A  0100               	movlb	0	; force () banked
  4388  000A1C  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4389  000A1E  0D15               	mullw	21
  4390  000A20  0E64               	movlw	low _m_tabMines
  4391  000A22  0100               	movlb	0	; force () banked
  4392  000A24  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4393  000A26  0E00               	movlw	high _m_tabMines
  4394  000A28  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4395  000A2A  0E15               	movlw	21
  4396  000A2C  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4397  000A2E  0E00               	movlw	0
  4398  000A30  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4399  000A32  50F3               	movf	243,w,c
  4400  000A34  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4401  000A36  50F4               	movf	244,w,c
  4402  000A38  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4403  000A3A  0100               	movlb	0	; force () banked
  4404  000A3C  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4405  000A3E  0100               	movlb	0	; force () banked
  4406  000A40  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4407  000A42  6ED9               	movwf	fsr2l,c
  4408  000A44  0100               	movlb	0	; force () banked
  4409  000A46  0E00               	movlw	0
  4410  000A48  0100               	movlb	0	; force () banked
  4411  000A4A  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4412  000A4C  6EDA               	movwf	fsr2h,c
  4413  000A4E  0E02               	movlw	2
  4414  000A50  18DE               	xorwf	postinc2,w,c
  4415  000A52  B4D8               	btfsc	status,2,c
  4416  000A54  EF2E  F005         	goto	u1321
  4417  000A58  EF30  F005         	goto	u1320
  4418  000A5C                     u1321:
  4419  000A5C  EF6F  F005         	goto	l2090
  4420  000A60                     u1320:
  4421  000A60                     
  4422                           ; BSR set to: 0
  4423  000A60  0E04               	movlw	4
  4424  000A62  0100               	movlb	0	; force () banked
  4425  000A64  61B8               	cpfslt	enleveTuilesAutour@y& (0+255),b
  4426  000A66  EF37  F005         	goto	u1331
  4427  000A6A  EF39  F005         	goto	u1330
  4428  000A6E                     u1331:
  4429  000A6E  EF6F  F005         	goto	l2090
  4430  000A72                     u1330:
  4431  000A72                     
  4432                           ; BSR set to: 0
  4433                           ;main.c: 360: {;main.c: 361: m_tabVue[y+1][x] = m_tabMines[y+1][x];
  4434  000A72  0100               	movlb	0	; force () banked
  4435  000A74  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4436  000A76  0D15               	mullw	21
  4437  000A78  0E64               	movlw	low _m_tabMines
  4438  000A7A  0100               	movlb	0	; force () banked
  4439  000A7C  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4440  000A7E  0E00               	movlw	high _m_tabMines
  4441  000A80  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4442  000A82  0E15               	movlw	21
  4443  000A84  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4444  000A86  0E00               	movlw	0
  4445  000A88  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4446  000A8A  50F3               	movf	243,w,c
  4447  000A8C  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4448  000A8E  50F4               	movf	244,w,c
  4449  000A90  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4450  000A92  0100               	movlb	0	; force () banked
  4451  000A94  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4452  000A96  0100               	movlb	0	; force () banked
  4453  000A98  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4454  000A9A  6ED9               	movwf	fsr2l,c
  4455  000A9C  0100               	movlb	0	; force () banked
  4456  000A9E  0E00               	movlw	0
  4457  000AA0  0100               	movlb	0	; force () banked
  4458  000AA2  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4459  000AA4  6EDA               	movwf	fsr2h,c
  4460  000AA6  0100               	movlb	0	; force () banked
  4461  000AA8  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4462  000AAA  0D15               	mullw	21
  4463  000AAC  0E00               	movlw	low _m_tabVue
  4464  000AAE  0100               	movlb	0	; force () banked
  4465  000AB0  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4466  000AB2  0E01               	movlw	high _m_tabVue
  4467  000AB4  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4468  000AB6  0E15               	movlw	21
  4469  000AB8  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4470  000ABA  0E00               	movlw	0
  4471  000ABC  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4472  000ABE  50F3               	movf	243,w,c
  4473  000AC0  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4474  000AC2  50F4               	movf	244,w,c
  4475  000AC4  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4476  000AC6  0100               	movlb	0	; force () banked
  4477  000AC8  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4478  000ACA  0100               	movlb	0	; force () banked
  4479  000ACC  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4480  000ACE  6EE1               	movwf	fsr1l,c
  4481  000AD0  0100               	movlb	0	; force () banked
  4482  000AD2  0E00               	movlw	0
  4483  000AD4  0100               	movlb	0	; force () banked
  4484  000AD6  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4485  000AD8  6EE2               	movwf	fsr1h,c
  4486  000ADA  CFDF FFE7          	movff	indf2,indf1
  4487  000ADE                     l2090:
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;main.c: 362: };main.c: 363: if((m_tabMines[y+1][x+1]!=2)&&(y<4)&&(x<20))
  4491  000ADE  0100               	movlb	0	; force () banked
  4492  000AE0  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4493  000AE2  0D15               	mullw	21
  4494  000AE4  0E64               	movlw	low _m_tabMines
  4495  000AE6  0100               	movlb	0	; force () banked
  4496  000AE8  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4497  000AEA  0E00               	movlw	high _m_tabMines
  4498  000AEC  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4499  000AEE  0E16               	movlw	22
  4500  000AF0  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4501  000AF2  0E00               	movlw	0
  4502  000AF4  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4503  000AF6  50F3               	movf	243,w,c
  4504  000AF8  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4505  000AFA  50F4               	movf	244,w,c
  4506  000AFC  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4507  000AFE  0100               	movlb	0	; force () banked
  4508  000B00  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4509  000B02  0100               	movlb	0	; force () banked
  4510  000B04  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4511  000B06  6ED9               	movwf	fsr2l,c
  4512  000B08  0100               	movlb	0	; force () banked
  4513  000B0A  0E00               	movlw	0
  4514  000B0C  0100               	movlb	0	; force () banked
  4515  000B0E  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4516  000B10  6EDA               	movwf	fsr2h,c
  4517  000B12  0E02               	movlw	2
  4518  000B14  18DE               	xorwf	postinc2,w,c
  4519  000B16  B4D8               	btfsc	status,2,c
  4520  000B18  EF90  F005         	goto	u1341
  4521  000B1C  EF92  F005         	goto	u1340
  4522  000B20                     u1341:
  4523  000B20  EFDA  F005         	goto	l2098
  4524  000B24                     u1340:
  4525  000B24                     
  4526                           ; BSR set to: 0
  4527  000B24  0E04               	movlw	4
  4528  000B26  0100               	movlb	0	; force () banked
  4529  000B28  61B8               	cpfslt	enleveTuilesAutour@y& (0+255),b
  4530  000B2A  EF99  F005         	goto	u1351
  4531  000B2E  EF9B  F005         	goto	u1350
  4532  000B32                     u1351:
  4533  000B32  EFDA  F005         	goto	l2098
  4534  000B36                     u1350:
  4535  000B36                     
  4536                           ; BSR set to: 0
  4537  000B36  0E14               	movlw	20
  4538  000B38  0100               	movlb	0	; force () banked
  4539  000B3A  61C1               	cpfslt	enleveTuilesAutour@x& (0+255),b
  4540  000B3C  EFA2  F005         	goto	u1361
  4541  000B40  EFA4  F005         	goto	u1360
  4542  000B44                     u1361:
  4543  000B44  EFDA  F005         	goto	l2098
  4544  000B48                     u1360:
  4545  000B48                     
  4546                           ; BSR set to: 0
  4547                           ;main.c: 364: {;main.c: 365: m_tabVue[y+1][x+1] = m_tabMines[y+1][x+1];
  4548  000B48  0100               	movlb	0	; force () banked
  4549  000B4A  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4550  000B4C  0D15               	mullw	21
  4551  000B4E  0E64               	movlw	low _m_tabMines
  4552  000B50  0100               	movlb	0	; force () banked
  4553  000B52  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4554  000B54  0E00               	movlw	high _m_tabMines
  4555  000B56  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4556  000B58  0E16               	movlw	22
  4557  000B5A  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4558  000B5C  0E00               	movlw	0
  4559  000B5E  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4560  000B60  50F3               	movf	243,w,c
  4561  000B62  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4562  000B64  50F4               	movf	244,w,c
  4563  000B66  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4564  000B68  0100               	movlb	0	; force () banked
  4565  000B6A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4566  000B6C  0100               	movlb	0	; force () banked
  4567  000B6E  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4568  000B70  6ED9               	movwf	fsr2l,c
  4569  000B72  0100               	movlb	0	; force () banked
  4570  000B74  0E00               	movlw	0
  4571  000B76  0100               	movlb	0	; force () banked
  4572  000B78  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4573  000B7A  6EDA               	movwf	fsr2h,c
  4574  000B7C  0100               	movlb	0	; force () banked
  4575  000B7E  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4576  000B80  0D15               	mullw	21
  4577  000B82  0E00               	movlw	low _m_tabVue
  4578  000B84  0100               	movlb	0	; force () banked
  4579  000B86  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4580  000B88  0E01               	movlw	high _m_tabVue
  4581  000B8A  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4582  000B8C  0E16               	movlw	22
  4583  000B8E  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4584  000B90  0E00               	movlw	0
  4585  000B92  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4586  000B94  50F3               	movf	243,w,c
  4587  000B96  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4588  000B98  50F4               	movf	244,w,c
  4589  000B9A  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4590  000B9C  0100               	movlb	0	; force () banked
  4591  000B9E  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4592  000BA0  0100               	movlb	0	; force () banked
  4593  000BA2  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4594  000BA4  6EE1               	movwf	fsr1l,c
  4595  000BA6  0100               	movlb	0	; force () banked
  4596  000BA8  0E00               	movlw	0
  4597  000BAA  0100               	movlb	0	; force () banked
  4598  000BAC  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4599  000BAE  6EE2               	movwf	fsr1h,c
  4600  000BB0  CFDF FFE7          	movff	indf2,indf1
  4601  000BB4                     l2098:
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;main.c: 366: };main.c: 367: if((m_tabMines[y][x+1]!=2)&&(x<20))
  4605  000BB4  0100               	movlb	0	; force () banked
  4606  000BB6  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4607  000BB8  0D15               	mullw	21
  4608  000BBA  0E64               	movlw	low _m_tabMines
  4609  000BBC  0100               	movlb	0	; force () banked
  4610  000BBE  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4611  000BC0  0E00               	movlw	high _m_tabMines
  4612  000BC2  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4613  000BC4  0E01               	movlw	1
  4614  000BC6  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4615  000BC8  0E00               	movlw	0
  4616  000BCA  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4617  000BCC  50F3               	movf	243,w,c
  4618  000BCE  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4619  000BD0  50F4               	movf	244,w,c
  4620  000BD2  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4621  000BD4  0100               	movlb	0	; force () banked
  4622  000BD6  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4623  000BD8  0100               	movlb	0	; force () banked
  4624  000BDA  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4625  000BDC  6ED9               	movwf	fsr2l,c
  4626  000BDE  0100               	movlb	0	; force () banked
  4627  000BE0  0E00               	movlw	0
  4628  000BE2  0100               	movlb	0	; force () banked
  4629  000BE4  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4630  000BE6  6EDA               	movwf	fsr2h,c
  4631  000BE8  0E02               	movlw	2
  4632  000BEA  18DE               	xorwf	postinc2,w,c
  4633  000BEC  B4D8               	btfsc	status,2,c
  4634  000BEE  EFFB  F005         	goto	u1371
  4635  000BF2  EFFD  F005         	goto	u1370
  4636  000BF6                     u1371:
  4637  000BF6  EF3C  F006         	goto	l164
  4638  000BFA                     u1370:
  4639  000BFA                     
  4640                           ; BSR set to: 0
  4641  000BFA  0E14               	movlw	20
  4642  000BFC  0100               	movlb	0	; force () banked
  4643  000BFE  61C1               	cpfslt	enleveTuilesAutour@x& (0+255),b
  4644  000C00  EF04  F006         	goto	u1381
  4645  000C04  EF06  F006         	goto	u1380
  4646  000C08                     u1381:
  4647  000C08  EF3C  F006         	goto	l164
  4648  000C0C                     u1380:
  4649  000C0C                     
  4650                           ; BSR set to: 0
  4651                           ;main.c: 368: {;main.c: 369: m_tabVue[y][x+1] = m_tabMines[y][x+1];
  4652  000C0C  0100               	movlb	0	; force () banked
  4653  000C0E  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4654  000C10  0D15               	mullw	21
  4655  000C12  0E64               	movlw	low _m_tabMines
  4656  000C14  0100               	movlb	0	; force () banked
  4657  000C16  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4658  000C18  0E00               	movlw	high _m_tabMines
  4659  000C1A  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4660  000C1C  0E01               	movlw	1
  4661  000C1E  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4662  000C20  0E00               	movlw	0
  4663  000C22  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4664  000C24  50F3               	movf	243,w,c
  4665  000C26  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4666  000C28  50F4               	movf	244,w,c
  4667  000C2A  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4668  000C2C  0100               	movlb	0	; force () banked
  4669  000C2E  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4670  000C30  0100               	movlb	0	; force () banked
  4671  000C32  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4672  000C34  6ED9               	movwf	fsr2l,c
  4673  000C36  0100               	movlb	0	; force () banked
  4674  000C38  0E00               	movlw	0
  4675  000C3A  0100               	movlb	0	; force () banked
  4676  000C3C  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4677  000C3E  6EDA               	movwf	fsr2h,c
  4678  000C40  0100               	movlb	0	; force () banked
  4679  000C42  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4680  000C44  0D15               	mullw	21
  4681  000C46  0E00               	movlw	low _m_tabVue
  4682  000C48  0100               	movlb	0	; force () banked
  4683  000C4A  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4684  000C4C  0E01               	movlw	high _m_tabVue
  4685  000C4E  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4686  000C50  0E01               	movlw	1
  4687  000C52  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4688  000C54  0E00               	movlw	0
  4689  000C56  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4690  000C58  50F3               	movf	243,w,c
  4691  000C5A  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4692  000C5C  50F4               	movf	244,w,c
  4693  000C5E  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4694  000C60  0100               	movlb	0	; force () banked
  4695  000C62  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4696  000C64  0100               	movlb	0	; force () banked
  4697  000C66  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4698  000C68  6EE1               	movwf	fsr1l,c
  4699  000C6A  0100               	movlb	0	; force () banked
  4700  000C6C  0E00               	movlw	0
  4701  000C6E  0100               	movlb	0	; force () banked
  4702  000C70  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4703  000C72  6EE2               	movwf	fsr1h,c
  4704  000C74  CFDF FFE7          	movff	indf2,indf1
  4705  000C78                     l164:
  4706                           
  4707                           ; BSR set to: 0
  4708  000C78  0012               	return		;funcret
  4709  000C7A                     __end_of_enleveTuilesAutour:
  4710                           	opt callstack 0
  4711                           
  4712 ;; *************** function _afficheTabVue *****************
  4713 ;; Defined at:
  4714 ;;		line 134 in file "main.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;		None
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  i               2    9[BANK0 ] int 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      void 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4728 ;;      Params:         0       0       0       0       0       0       0
  4729 ;;      Locals:         0       2       0       0       0       0       0
  4730 ;;      Temps:          0       0       0       0       0       0       0
  4731 ;;      Totals:         0       2       0       0       0       0       0
  4732 ;;Total ram usage:        2 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    5
  4735 ;; This function calls:
  4736 ;;		___wmul
  4737 ;;		_lcd_gotoXY
  4738 ;;		_lcd_putMessage
  4739 ;; This function is called by:
  4740 ;;		_main
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text20
  4745  001ABE                     __ptext20:
  4746                           	opt callstack 0
  4747  001ABE                     _afficheTabVue:
  4748                           	opt callstack 25
  4749  001ABE                     
  4750                           ;main.c: 136: for(int i=0;i<4;i++)
  4751  001ABE  0E00               	movlw	0
  4752  001AC0  0100               	movlb	0	; force () banked
  4753  001AC2  6FC2               	movwf	(afficheTabVue@i+1)& (0+255),b
  4754  001AC4  0E00               	movlw	0
  4755  001AC6  6FC1               	movwf	afficheTabVue@i& (0+255),b
  4756  001AC8                     
  4757                           ; BSR set to: 0
  4758  001AC8  0100               	movlb	0	; force () banked
  4759  001ACA  BFC2               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  4760  001ACC  EF71  F00D         	goto	u1531
  4761  001AD0  51C2               	movf	(afficheTabVue@i+1)& (0+255),w,b
  4762  001AD2  E109               	bnz	u1530
  4763  001AD4  0E04               	movlw	4
  4764  001AD6  5DC1               	subwf	afficheTabVue@i& (0+255),w,b
  4765  001AD8  A0D8               	btfss	status,0,c
  4766  001ADA  EF71  F00D         	goto	u1531
  4767  001ADE  EF73  F00D         	goto	u1530
  4768  001AE2                     u1531:
  4769  001AE2  EF75  F00D         	goto	l2274
  4770  001AE6                     u1530:
  4771  001AE6  EFA5  F00D         	goto	l102
  4772  001AEA                     l2274:
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;main.c: 137: {;main.c: 138: lcd_gotoXY(1,i+1);
  4776  001AEA  0100               	movlb	0	; force () banked
  4777  001AEC  29C1               	incf	afficheTabVue@i& (0+255),w,b
  4778  001AEE  0100               	movlb	0	; force () banked
  4779  001AF0  6FBB               	movwf	lcd_gotoXY@y& (0+255),b
  4780  001AF2  0E01               	movlw	1
  4781  001AF4  ECED  F00D         	call	_lcd_gotoXY
  4782  001AF8                     
  4783                           ;main.c: 139: lcd_putMessage(m_tabVue[i]);
  4784  001AF8  C0C1  F0B8         	movff	afficheTabVue@i,___wmul@multiplier
  4785  001AFC  C0C2  F0B9         	movff	afficheTabVue@i+1,___wmul@multiplier+1
  4786  001B00  0E00               	movlw	0
  4787  001B02  0100               	movlb	0	; force () banked
  4788  001B04  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4789  001B06  0E15               	movlw	21
  4790  001B08  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  4791  001B0A  EC67  F010         	call	___wmul	;wreg free
  4792  001B0E  0E00               	movlw	low _m_tabVue
  4793  001B10  0100               	movlb	0	; force () banked
  4794  001B12  25B8               	addwf	?___wmul& (0+255),w,b
  4795  001B14  0100               	movlb	0	; force () banked
  4796  001B16  6FBE               	movwf	lcd_putMessage@chaine& (0+255),b
  4797  001B18  0E01               	movlw	high _m_tabVue
  4798  001B1A  0100               	movlb	0	; force () banked
  4799  001B1C  21B9               	addwfc	(?___wmul+1)& (0+255),w,b
  4800  001B1E  0100               	movlb	0	; force () banked
  4801  001B20  6FBF               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4802  001B22  EC71  F00F         	call	_lcd_putMessage	;wreg free
  4803  001B26  0100               	movlb	0	; force () banked
  4804  001B28  4BC1               	infsnz	afficheTabVue@i& (0+255),f,b
  4805  001B2A  2BC2               	incf	(afficheTabVue@i+1)& (0+255),f,b
  4806  001B2C                     
  4807                           ; BSR set to: 0
  4808  001B2C  0100               	movlb	0	; force () banked
  4809  001B2E  BFC2               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  4810  001B30  EFA3  F00D         	goto	u1541
  4811  001B34  51C2               	movf	(afficheTabVue@i+1)& (0+255),w,b
  4812  001B36  E109               	bnz	u1540
  4813  001B38  0E04               	movlw	4
  4814  001B3A  5DC1               	subwf	afficheTabVue@i& (0+255),w,b
  4815  001B3C  A0D8               	btfss	status,0,c
  4816  001B3E  EFA3  F00D         	goto	u1541
  4817  001B42  EFA5  F00D         	goto	u1540
  4818  001B46                     u1541:
  4819  001B46  EF75  F00D         	goto	l2274
  4820  001B4A                     u1540:
  4821  001B4A                     l102:
  4822                           
  4823                           ; BSR set to: 0
  4824  001B4A  0012               	return		;funcret
  4825  001B4C                     __end_of_afficheTabVue:
  4826                           	opt callstack 0
  4827                           
  4828 ;; *************** function _afficheTabMines *****************
  4829 ;; Defined at:
  4830 ;;		line 148 in file "main.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  i               2    9[BANK0 ] int 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4844 ;;      Params:         0       0       0       0       0       0       0
  4845 ;;      Locals:         0       2       0       0       0       0       0
  4846 ;;      Temps:          0       0       0       0       0       0       0
  4847 ;;      Totals:         0       2       0       0       0       0       0
  4848 ;;Total ram usage:        2 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; Hardware stack levels required when called:    5
  4851 ;; This function calls:
  4852 ;;		___wmul
  4853 ;;		_lcd_gotoXY
  4854 ;;		_lcd_putMessage
  4855 ;; This function is called by:
  4856 ;;		_main
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text21
  4861  001B4C                     __ptext21:
  4862                           	opt callstack 0
  4863  001B4C                     _afficheTabMines:
  4864                           	opt callstack 25
  4865  001B4C                     
  4866                           ;main.c: 150: for(int i=0;i<4;i++)
  4867  001B4C  0E00               	movlw	0
  4868  001B4E  0100               	movlb	0	; force () banked
  4869  001B50  6FC2               	movwf	(afficheTabMines@i+1)& (0+255),b
  4870  001B52  0E00               	movlw	0
  4871  001B54  6FC1               	movwf	afficheTabMines@i& (0+255),b
  4872  001B56                     
  4873                           ; BSR set to: 0
  4874  001B56  0100               	movlb	0	; force () banked
  4875  001B58  BFC2               	btfsc	(afficheTabMines@i+1)& (0+255),7,b
  4876  001B5A  EFB8  F00D         	goto	u1811
  4877  001B5E  51C2               	movf	(afficheTabMines@i+1)& (0+255),w,b
  4878  001B60  E109               	bnz	u1810
  4879  001B62  0E04               	movlw	4
  4880  001B64  5DC1               	subwf	afficheTabMines@i& (0+255),w,b
  4881  001B66  A0D8               	btfss	status,0,c
  4882  001B68  EFB8  F00D         	goto	u1811
  4883  001B6C  EFBA  F00D         	goto	u1810
  4884  001B70                     u1811:
  4885  001B70  EFBC  F00D         	goto	l2426
  4886  001B74                     u1810:
  4887  001B74  EFEC  F00D         	goto	l107
  4888  001B78                     l2426:
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;main.c: 151: {;main.c: 152: lcd_gotoXY(1,i+1);
  4892  001B78  0100               	movlb	0	; force () banked
  4893  001B7A  29C1               	incf	afficheTabMines@i& (0+255),w,b
  4894  001B7C  0100               	movlb	0	; force () banked
  4895  001B7E  6FBB               	movwf	lcd_gotoXY@y& (0+255),b
  4896  001B80  0E01               	movlw	1
  4897  001B82  ECED  F00D         	call	_lcd_gotoXY
  4898  001B86                     
  4899                           ;main.c: 153: lcd_putMessage(m_tabMines[i]);
  4900  001B86  C0C1  F0B8         	movff	afficheTabMines@i,___wmul@multiplier
  4901  001B8A  C0C2  F0B9         	movff	afficheTabMines@i+1,___wmul@multiplier+1
  4902  001B8E  0E00               	movlw	0
  4903  001B90  0100               	movlb	0	; force () banked
  4904  001B92  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4905  001B94  0E15               	movlw	21
  4906  001B96  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  4907  001B98  EC67  F010         	call	___wmul	;wreg free
  4908  001B9C  0E64               	movlw	low _m_tabMines
  4909  001B9E  0100               	movlb	0	; force () banked
  4910  001BA0  25B8               	addwf	?___wmul& (0+255),w,b
  4911  001BA2  0100               	movlb	0	; force () banked
  4912  001BA4  6FBE               	movwf	lcd_putMessage@chaine& (0+255),b
  4913  001BA6  0E00               	movlw	high _m_tabMines
  4914  001BA8  0100               	movlb	0	; force () banked
  4915  001BAA  21B9               	addwfc	(?___wmul+1)& (0+255),w,b
  4916  001BAC  0100               	movlb	0	; force () banked
  4917  001BAE  6FBF               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4918  001BB0  EC71  F00F         	call	_lcd_putMessage	;wreg free
  4919  001BB4  0100               	movlb	0	; force () banked
  4920  001BB6  4BC1               	infsnz	afficheTabMines@i& (0+255),f,b
  4921  001BB8  2BC2               	incf	(afficheTabMines@i+1)& (0+255),f,b
  4922  001BBA                     
  4923                           ; BSR set to: 0
  4924  001BBA  0100               	movlb	0	; force () banked
  4925  001BBC  BFC2               	btfsc	(afficheTabMines@i+1)& (0+255),7,b
  4926  001BBE  EFEA  F00D         	goto	u1821
  4927  001BC2  51C2               	movf	(afficheTabMines@i+1)& (0+255),w,b
  4928  001BC4  E109               	bnz	u1820
  4929  001BC6  0E04               	movlw	4
  4930  001BC8  5DC1               	subwf	afficheTabMines@i& (0+255),w,b
  4931  001BCA  A0D8               	btfss	status,0,c
  4932  001BCC  EFEA  F00D         	goto	u1821
  4933  001BD0  EFEC  F00D         	goto	u1820
  4934  001BD4                     u1821:
  4935  001BD4  EFBC  F00D         	goto	l2426
  4936  001BD8                     u1820:
  4937  001BD8                     l107:
  4938                           
  4939                           ; BSR set to: 0
  4940  001BD8  0012               	return		;funcret
  4941  001BDA                     __end_of_afficheTabMines:
  4942                           	opt callstack 0
  4943                           
  4944 ;; *************** function _lcd_putMessage *****************
  4945 ;; Defined at:
  4946 ;;		line 429 in file "Lcd4Lignes.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  chaine          2    6[BANK0 ] PTR const unsigned char 
  4949 ;;		 -> m_tabMines(84), m_tabVue(84), 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  j               1    8[BANK0 ] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4961 ;;      Params:         0       2       0       0       0       0       0
  4962 ;;      Locals:         0       1       0       0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0       0       0
  4964 ;;      Totals:         0       3       0       0       0       0       0
  4965 ;;Total ram usage:        3 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    4
  4968 ;; This function calls:
  4969 ;;		_lcd_ecritChar
  4970 ;; This function is called by:
  4971 ;;		_afficheTabVue
  4972 ;;		_afficheTabMines
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text22
  4977  001EE2                     __ptext22:
  4978                           	opt callstack 0
  4979  001EE2                     _lcd_putMessage:
  4980                           	opt callstack 25
  4981  001EE2                     
  4982                           ;Lcd4Lignes.c: 431: unsigned char j;;Lcd4Lignes.c: 433: for(j = 0; chaine[j] != 0; j++)
  4983  001EE2  0E00               	movlw	0
  4984  001EE4  0100               	movlb	0	; force () banked
  4985  001EE6  6FC0               	movwf	lcd_putMessage@j& (0+255),b
  4986  001EE8  EF85  F00F         	goto	l1978
  4987  001EEC                     l1974:
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;Lcd4Lignes.c: 434: lcd_ecritChar(chaine[j]);
  4991  001EEC  0100               	movlb	0	; force () banked
  4992  001EEE  51C0               	movf	lcd_putMessage@j& (0+255),w,b
  4993  001EF0  0100               	movlb	0	; force () banked
  4994  001EF2  25BE               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4995  001EF4  6ED9               	movwf	fsr2l,c
  4996  001EF6  0100               	movlb	0	; force () banked
  4997  001EF8  0E00               	movlw	0
  4998  001EFA  0100               	movlb	0	; force () banked
  4999  001EFC  21BF               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5000  001EFE  6EDA               	movwf	fsr2h,c
  5001  001F00  50DF               	movf	indf2,w,c
  5002  001F02  EC1E  F00F         	call	_lcd_ecritChar
  5003  001F06  0100               	movlb	0	; force () banked
  5004  001F08  2BC0               	incf	lcd_putMessage@j& (0+255),f,b
  5005  001F0A                     l1978:
  5006                           
  5007                           ; BSR set to: 0
  5008  001F0A  0100               	movlb	0	; force () banked
  5009  001F0C  51C0               	movf	lcd_putMessage@j& (0+255),w,b
  5010  001F0E  0100               	movlb	0	; force () banked
  5011  001F10  25BE               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5012  001F12  6ED9               	movwf	fsr2l,c
  5013  001F14  0100               	movlb	0	; force () banked
  5014  001F16  0E00               	movlw	0
  5015  001F18  0100               	movlb	0	; force () banked
  5016  001F1A  21BF               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5017  001F1C  6EDA               	movwf	fsr2h,c
  5018  001F1E  50DF               	movf	indf2,w,c
  5019  001F20  A4D8               	btfss	status,2,c
  5020  001F22  EF95  F00F         	goto	u1031
  5021  001F26  EF97  F00F         	goto	u1030
  5022  001F2A                     u1031:
  5023  001F2A  EF76  F00F         	goto	l1974
  5024  001F2E                     u1030:
  5025  001F2E                     
  5026                           ; BSR set to: 0
  5027  001F2E  0012               	return		;funcret
  5028  001F30                     __end_of_lcd_putMessage:
  5029                           	opt callstack 0
  5030                           
  5031 ;; *************** function _lcd_ecritChar *****************
  5032 ;; Defined at:
  5033 ;;		line 401 in file "Lcd4Lignes.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  car             1    wreg     unsigned char 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;  car             1    3[BANK0 ] unsigned char 
  5038 ;;  posRam          1    4[BANK0 ] unsigned char 
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, status,2, status,0, cstack
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5048 ;;      Params:         0       0       0       0       0       0       0
  5049 ;;      Locals:         0       2       0       0       0       0       0
  5050 ;;      Temps:          0       0       0       0       0       0       0
  5051 ;;      Totals:         0       2       0       0       0       0       0
  5052 ;;Total ram usage:        2 bytes
  5053 ;; Hardware stack levels used:    1
  5054 ;; Hardware stack levels required when called:    3
  5055 ;; This function calls:
  5056 ;;		_lcd_wrCom
  5057 ;;		_lcd_wrData
  5058 ;; This function is called by:
  5059 ;;		_lcd_putMessage
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text23
  5064  001E3C                     __ptext23:
  5065                           	opt callstack 0
  5066  001E3C                     _lcd_ecritChar:
  5067                           	opt callstack 25
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;incstack = 0
  5071                           ;lcd_ecritChar@car stored from wreg
  5072  001E3C  0100               	movlb	0	; force () banked
  5073  001E3E  6FBB               	movwf	lcd_ecritChar@car& (0+255),b
  5074  001E40                     
  5075                           ;Lcd4Lignes.c: 403: unsigned char posRam;;Lcd4Lignes.c: 405: posRam = lcd_wrData(car);
  5076  001E40  0100               	movlb	0	; force () banked
  5077  001E42  51BB               	movf	lcd_ecritChar@car& (0+255),w,b
  5078  001E44  EC23  F010         	call	_lcd_wrData
  5079  001E48  0100               	movlb	0	; force () banked
  5080  001E4A  6FBC               	movwf	lcd_ecritChar@posRam& (0+255),b
  5081                           
  5082                           ;Lcd4Lignes.c: 406: switch(posRam)
  5083  001E4C  EF37  F00F         	goto	l1940
  5084  001E50                     l1932:
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;Lcd4Lignes.c: 409: lcd_wrCom(0xC0|0x80);
  5088  001E50  0EC0               	movlw	192
  5089  001E52  EC5C  F00E         	call	_lcd_wrCom
  5090                           
  5091                           ;Lcd4Lignes.c: 410: break;
  5092  001E56  EF47  F00F         	goto	l257
  5093  001E5A                     l1934:
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;Lcd4Lignes.c: 412: lcd_wrCom(0x94|0x80);
  5097  001E5A  0E94               	movlw	148
  5098  001E5C  EC5C  F00E         	call	_lcd_wrCom
  5099                           
  5100                           ;Lcd4Lignes.c: 413: break;
  5101  001E60  EF47  F00F         	goto	l257
  5102  001E64                     l1936:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;Lcd4Lignes.c: 415: lcd_wrCom(0xD4|0x80);
  5106  001E64  0ED4               	movlw	212
  5107  001E66  EC5C  F00E         	call	_lcd_wrCom
  5108                           
  5109                           ;Lcd4Lignes.c: 416: break;
  5110  001E6A  EF47  F00F         	goto	l257
  5111  001E6E                     l1940:
  5112                           
  5113                           ; BSR set to: 0
  5114  001E6E  0100               	movlb	0	; force () banked
  5115  001E70  51BC               	movf	lcd_ecritChar@posRam& (0+255),w,b
  5116                           
  5117                           ; Switch size 1, requested type "simple"
  5118                           ; Number of cases is 3, Range of values is 148 to 212
  5119                           ; switch strategies available:
  5120                           ; Name         Instructions Cycles
  5121                           ; simple_byte           10     6 (average)
  5122                           ;	Chosen strategy is simple_byte
  5123  001E72  0A94               	xorlw	148	; case 148
  5124  001E74  B4D8               	btfsc	status,2,c
  5125  001E76  EF28  F00F         	goto	l1932
  5126  001E7A  0A54               	xorlw	84	; case 192
  5127  001E7C  B4D8               	btfsc	status,2,c
  5128  001E7E  EF32  F00F         	goto	l1936
  5129  001E82  0A14               	xorlw	20	; case 212
  5130  001E84  B4D8               	btfsc	status,2,c
  5131  001E86  EF2D  F00F         	goto	l1934
  5132  001E8A  EF47  F00F         	goto	l257
  5133  001E8E                     l257:
  5134  001E8E  0012               	return		;funcret
  5135  001E90                     __end_of_lcd_ecritChar:
  5136                           	opt callstack 0
  5137                           
  5138 ;; *************** function _lcd_wrData *****************
  5139 ;; Defined at:
  5140 ;;		line 230 in file "Lcd4Lignes.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  caractere       1    wreg     unsigned char 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  caractere       1    2[BANK0 ] unsigned char 
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      unsigned char 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0, cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5154 ;;      Params:         0       0       0       0       0       0       0
  5155 ;;      Locals:         0       1       0       0       0       0       0
  5156 ;;      Temps:          0       0       0       0       0       0       0
  5157 ;;      Totals:         0       1       0       0       0       0       0
  5158 ;;Total ram usage:        1 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:    2
  5161 ;; This function calls:
  5162 ;;		_lcd_busy
  5163 ;;		_lcd_ecrireDonnees
  5164 ;;		_lcd_strobeEnableBit
  5165 ;; This function is called by:
  5166 ;;		_lcd_ecritChar
  5167 ;;		_lcd_initCGRam
  5168 ;;		_lcd_effaceChar
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text24
  5173  002046                     __ptext24:
  5174                           	opt callstack 0
  5175  002046                     _lcd_wrData:
  5176                           	opt callstack 26
  5177                           
  5178                           ;incstack = 0
  5179                           ;lcd_wrData@caractere stored from wreg
  5180  002046  0100               	movlb	0	; force () banked
  5181  002048  6FBA               	movwf	lcd_wrData@caractere& (0+255),b
  5182  00204A                     
  5183                           ;Lcd4Lignes.c: 232: lcd_busy();
  5184  00204A  ECE2  F00F         	call	_lcd_busy	;wreg free
  5185  00204E                     
  5186                           ;Lcd4Lignes.c: 233: TRISD = 0b00000000;
  5187  00204E  0E00               	movlw	0
  5188  002050  6E95               	movwf	149,c	;volatile
  5189  002052                     
  5190                           ;Lcd4Lignes.c: 236: PORTAbits.RA0 = 1;
  5191  002052  8080               	bsf	128,0,c	;volatile
  5192  002054                     
  5193                           ;Lcd4Lignes.c: 237: PORTAbits.RA1 = 0;
  5194  002054  9280               	bcf	128,1,c	;volatile
  5195  002056                     
  5196                           ;Lcd4Lignes.c: 239: lcd_ecrireDonnees(caractere >> 4);
  5197  002056  0100               	movlb	0	; force () banked
  5198  002058  39BA               	swapf	lcd_wrData@caractere& (0+255),w,b
  5199  00205A  0B0F               	andlw	15
  5200  00205C  EC7B  F010         	call	_lcd_ecrireDonnees
  5201  002060                     
  5202                           ;Lcd4Lignes.c: 240: lcd_strobeEnableBit();
  5203  002060  EC95  F010         	call	_lcd_strobeEnableBit	;wreg free
  5204  002064                     
  5205                           ;Lcd4Lignes.c: 243: lcd_ecrireDonnees(caractere);
  5206  002064  0100               	movlb	0	; force () banked
  5207  002066  51BA               	movf	lcd_wrData@caractere& (0+255),w,b
  5208  002068  EC7B  F010         	call	_lcd_ecrireDonnees
  5209  00206C                     
  5210                           ;Lcd4Lignes.c: 244: lcd_strobeEnableBit();
  5211  00206C  EC95  F010         	call	_lcd_strobeEnableBit	;wreg free
  5212  002070                     
  5213                           ;Lcd4Lignes.c: 247: TRISD = 0b00001111;
  5214  002070  0E0F               	movlw	15
  5215  002072  6E95               	movwf	149,c	;volatile
  5216  002074                     
  5217                           ;Lcd4Lignes.c: 248: _delay((unsigned long)((2)*(1000000/4000000.0)));
  5218                           ;Lcd4Lignes.c: 249: return(lcd_busy());
  5219  002074  ECE2  F00F         	call	_lcd_busy	;wreg free
  5220  002078  0012               	return		;funcret
  5221  00207A                     __end_of_lcd_wrData:
  5222                           	opt callstack 0
  5223                           
  5224 ;; *************** function _lcd_gotoXY *****************
  5225 ;; Defined at:
  5226 ;;		line 356 in file "Lcd4Lignes.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  x               1    wreg     unsigned char 
  5229 ;;  y               1    3[BANK0 ] unsigned char 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  x               1    4[BANK0 ] unsigned char 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      void 
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0, cstack
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5241 ;;      Params:         0       1       0       0       0       0       0
  5242 ;;      Locals:         0       1       0       0       0       0       0
  5243 ;;      Temps:          0       0       0       0       0       0       0
  5244 ;;      Totals:         0       2       0       0       0       0       0
  5245 ;;Total ram usage:        2 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    3
  5248 ;; This function calls:
  5249 ;;		_lcd_wrCom
  5250 ;; This function is called by:
  5251 ;;		_afficheTabVue
  5252 ;;		_afficheTabMines
  5253 ;;		_deplace
  5254 ;;		_lcd_effaceLigne
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text25
  5259  001BDA                     __ptext25:
  5260                           	opt callstack 0
  5261  001BDA                     _lcd_gotoXY:
  5262                           	opt callstack 26
  5263                           
  5264                           ;incstack = 0
  5265                           ;lcd_gotoXY@x stored from wreg
  5266  001BDA  0100               	movlb	0	; force () banked
  5267  001BDC  6FBC               	movwf	lcd_gotoXY@x& (0+255),b
  5268  001BDE                     
  5269                           ;Lcd4Lignes.c: 358: switch(y)
  5270  001BDE  EF11  F00E         	goto	l1970
  5271  001BE2                     l1960:
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;Lcd4Lignes.c: 361: lcd_wrCom((x-1+0x80)|0x80);
  5275  001BE2  0100               	movlb	0	; force () banked
  5276  001BE4  51BC               	movf	lcd_gotoXY@x& (0+255),w,b
  5277  001BE6  0F7F               	addlw	127
  5278  001BE8  0980               	iorlw	128
  5279  001BEA  EC5C  F00E         	call	_lcd_wrCom
  5280                           
  5281                           ;Lcd4Lignes.c: 362: break;
  5282  001BEE  EF25  F00E         	goto	l246
  5283  001BF2                     l1962:
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;Lcd4Lignes.c: 364: lcd_wrCom((x-1+0xC0)|0x80);
  5287  001BF2  0100               	movlb	0	; force () banked
  5288  001BF4  51BC               	movf	lcd_gotoXY@x& (0+255),w,b
  5289  001BF6  0FBF               	addlw	191
  5290  001BF8  0980               	iorlw	128
  5291  001BFA  EC5C  F00E         	call	_lcd_wrCom
  5292                           
  5293                           ;Lcd4Lignes.c: 365: break;
  5294  001BFE  EF25  F00E         	goto	l246
  5295  001C02                     l1964:
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;Lcd4Lignes.c: 367: lcd_wrCom((x-1+0x94)|0x80);
  5299  001C02  0100               	movlb	0	; force () banked
  5300  001C04  51BC               	movf	lcd_gotoXY@x& (0+255),w,b
  5301  001C06  0F93               	addlw	147
  5302  001C08  0980               	iorlw	128
  5303  001C0A  EC5C  F00E         	call	_lcd_wrCom
  5304                           
  5305                           ;Lcd4Lignes.c: 368: break;
  5306  001C0E  EF25  F00E         	goto	l246
  5307  001C12                     l1966:
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;Lcd4Lignes.c: 370: lcd_wrCom((x-1+0xD4)|0x80);
  5311  001C12  0100               	movlb	0	; force () banked
  5312  001C14  51BC               	movf	lcd_gotoXY@x& (0+255),w,b
  5313  001C16  0FD3               	addlw	211
  5314  001C18  0980               	iorlw	128
  5315  001C1A  EC5C  F00E         	call	_lcd_wrCom
  5316                           
  5317                           ;Lcd4Lignes.c: 371: break;
  5318  001C1E  EF25  F00E         	goto	l246
  5319  001C22                     l1970:
  5320  001C22  0100               	movlb	0	; force () banked
  5321  001C24  51BB               	movf	lcd_gotoXY@y& (0+255),w,b
  5322                           
  5323                           ; Switch size 1, requested type "simple"
  5324                           ; Number of cases is 4, Range of values is 1 to 4
  5325                           ; switch strategies available:
  5326                           ; Name         Instructions Cycles
  5327                           ; simple_byte           13     7 (average)
  5328                           ;	Chosen strategy is simple_byte
  5329  001C26  0A01               	xorlw	1	; case 1
  5330  001C28  B4D8               	btfsc	status,2,c
  5331  001C2A  EFF1  F00D         	goto	l1960
  5332  001C2E  0A03               	xorlw	3	; case 2
  5333  001C30  B4D8               	btfsc	status,2,c
  5334  001C32  EFF9  F00D         	goto	l1962
  5335  001C36  0A01               	xorlw	1	; case 3
  5336  001C38  B4D8               	btfsc	status,2,c
  5337  001C3A  EF01  F00E         	goto	l1964
  5338  001C3E  0A07               	xorlw	7	; case 4
  5339  001C40  B4D8               	btfsc	status,2,c
  5340  001C42  EF09  F00E         	goto	l1966
  5341  001C46  EF25  F00E         	goto	l246
  5342  001C4A                     l246:
  5343  001C4A  0012               	return		;funcret
  5344  001C4C                     __end_of_lcd_gotoXY:
  5345                           	opt callstack 0
  5346                           
  5347 ;; *************** function _lcd_wrCom *****************
  5348 ;; Defined at:
  5349 ;;		line 198 in file "Lcd4Lignes.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  commande        1    wreg     unsigned char 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  commande        1    2[BANK0 ] unsigned char 
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      unsigned char 
  5356 ;; Registers used:
  5357 ;;		wreg, status,2, status,0, cstack
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5363 ;;      Params:         0       0       0       0       0       0       0
  5364 ;;      Locals:         0       1       0       0       0       0       0
  5365 ;;      Temps:          0       0       0       0       0       0       0
  5366 ;;      Totals:         0       1       0       0       0       0       0
  5367 ;;Total ram usage:        1 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    2
  5370 ;; This function calls:
  5371 ;;		_lcd_busy
  5372 ;;		_lcd_ecrireDonnees
  5373 ;;		_lcd_strobeEnableBit
  5374 ;; This function is called by:
  5375 ;;		_lcd_init
  5376 ;;		_lcd_curseurHome
  5377 ;;		_lcd_gotoXY
  5378 ;;		_lcd_ecritChar
  5379 ;;		_lcd_initCGRam
  5380 ;;		_lcd_effaceAffichage
  5381 ;;		_lcd_cacheCurseur
  5382 ;;		_lcd_montreCurseur
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text26
  5387  001CB8                     __ptext26:
  5388                           	opt callstack 0
  5389  001CB8                     _lcd_wrCom:
  5390                           	opt callstack 27
  5391                           
  5392                           ;incstack = 0
  5393                           ;lcd_wrCom@commande stored from wreg
  5394  001CB8  0100               	movlb	0	; force () banked
  5395  001CBA  6FBA               	movwf	lcd_wrCom@commande& (0+255),b
  5396  001CBC                     
  5397                           ;Lcd4Lignes.c: 200: lcd_busy();
  5398  001CBC  ECE2  F00F         	call	_lcd_busy	;wreg free
  5399  001CC0                     
  5400                           ;Lcd4Lignes.c: 202: TRISD = 0b00000000;
  5401  001CC0  0E00               	movlw	0
  5402  001CC2  6E95               	movwf	149,c	;volatile
  5403  001CC4                     
  5404                           ;Lcd4Lignes.c: 205: PORTAbits.RA0 = 0;
  5405  001CC4  9080               	bcf	128,0,c	;volatile
  5406  001CC6                     
  5407                           ;Lcd4Lignes.c: 206: PORTAbits.RA1 = 0;
  5408  001CC6  9280               	bcf	128,1,c	;volatile
  5409  001CC8                     
  5410                           ;Lcd4Lignes.c: 208: lcd_ecrireDonnees(commande >> 4);
  5411  001CC8  0100               	movlb	0	; force () banked
  5412  001CCA  39BA               	swapf	lcd_wrCom@commande& (0+255),w,b
  5413  001CCC  0B0F               	andlw	15
  5414  001CCE  EC7B  F010         	call	_lcd_ecrireDonnees
  5415  001CD2                     
  5416                           ;Lcd4Lignes.c: 209: lcd_strobeEnableBit();
  5417  001CD2  EC95  F010         	call	_lcd_strobeEnableBit	;wreg free
  5418  001CD6                     
  5419                           ;Lcd4Lignes.c: 212: lcd_ecrireDonnees(commande);
  5420  001CD6  0100               	movlb	0	; force () banked
  5421  001CD8  51BA               	movf	lcd_wrCom@commande& (0+255),w,b
  5422  001CDA  EC7B  F010         	call	_lcd_ecrireDonnees
  5423  001CDE                     
  5424                           ;Lcd4Lignes.c: 213: lcd_strobeEnableBit();
  5425  001CDE  EC95  F010         	call	_lcd_strobeEnableBit	;wreg free
  5426  001CE2                     
  5427                           ;Lcd4Lignes.c: 214: _delay((unsigned long)((40)*(1000000/4000000.0)));
  5428  001CE2  0E03               	movlw	3
  5429  001CE4                     u1957:
  5430  001CE4  2EE8               	decfsz	wreg,f,c
  5431  001CE6  D7FE               	bra	u1957
  5432  001CE8  F000               	nop	
  5433  001CEA                     
  5434                           ;Lcd4Lignes.c: 216: if ((commande == 0x01) || commande == 0x02)
  5435  001CEA  0100               	movlb	0	; force () banked
  5436  001CEC  05BA               	decf	lcd_wrCom@commande& (0+255),w,b
  5437  001CEE  B4D8               	btfsc	status,2,c
  5438  001CF0  EF7C  F00E         	goto	u991
  5439  001CF4  EF7E  F00E         	goto	u990
  5440  001CF8                     u991:
  5441  001CF8  EF88  F00E         	goto	l1890
  5442  001CFC                     u990:
  5443  001CFC                     
  5444                           ; BSR set to: 0
  5445  001CFC  0E02               	movlw	2
  5446  001CFE  0100               	movlb	0	; force () banked
  5447  001D00  19BA               	xorwf	lcd_wrCom@commande& (0+255),w,b
  5448  001D02  A4D8               	btfss	status,2,c
  5449  001D04  EF86  F00E         	goto	u1001
  5450  001D08  EF88  F00E         	goto	u1000
  5451  001D0C                     u1001:
  5452  001D0C  EF8D  F00E         	goto	l1892
  5453  001D10                     u1000:
  5454  001D10                     l1890:
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;Lcd4Lignes.c: 217: _delay((unsigned long)((2)*(1000000/4000.0)));
  5458  001D10  0EA6               	movlw	166
  5459  001D12                     u1967:
  5460  001D12  2EE8               	decfsz	wreg,f,c
  5461  001D14  D7FE               	bra	u1967
  5462  001D16  F000 F000          	nop2	
  5463  001D1A                     l1892:
  5464                           
  5465                           ;Lcd4Lignes.c: 219: TRISD = 0b00001111;
  5466  001D1A  0E0F               	movlw	15
  5467  001D1C  6E95               	movwf	149,c	;volatile
  5468  001D1E                     
  5469                           ;Lcd4Lignes.c: 221: return(lcd_busy());
  5470  001D1E  ECE2  F00F         	call	_lcd_busy	;wreg free
  5471  001D22  0012               	return		;funcret
  5472  001D24                     __end_of_lcd_wrCom:
  5473                           	opt callstack 0
  5474                           
  5475 ;; *************** function _lcd_strobeEnableBit *****************
  5476 ;; Defined at:
  5477 ;;		line 473 in file "Lcd4Lignes.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;		None
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      void 
  5484 ;; Registers used:
  5485 ;;		None
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5491 ;;      Params:         0       0       0       0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0
  5494 ;;      Totals:         0       0       0       0       0       0       0
  5495 ;;Total ram usage:        0 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; This function calls:
  5498 ;;		Nothing
  5499 ;; This function is called by:
  5500 ;;		_lcd_wrCom
  5501 ;;		_lcd_wrData
  5502 ;;		_lcd_resetSequence
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text27
  5507  00212A                     __ptext27:
  5508                           	opt callstack 0
  5509  00212A                     _lcd_strobeEnableBit:
  5510                           	opt callstack 28
  5511  00212A                     
  5512                           ;Lcd4Lignes.c: 475: PORTAbits.RA2 = 1;
  5513  00212A  8480               	bsf	128,2,c	;volatile
  5514                           
  5515                           ;Lcd4Lignes.c: 476: __nop();
  5516  00212C  F000               	nop	
  5517                           
  5518                           ;Lcd4Lignes.c: 477: PORTAbits.RA2 = 0;
  5519  00212E  9480               	bcf	128,2,c	;volatile
  5520  002130  0012               	return		;funcret
  5521  002132                     __end_of_lcd_strobeEnableBit:
  5522                           	opt callstack 0
  5523                           
  5524 ;; *************** function _lcd_ecrireDonnees *****************
  5525 ;; Defined at:
  5526 ;;		line 149 in file "Lcd4Lignes.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  donnee          1    wreg     unsigned char 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  donnee          1    1[BANK0 ] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      void 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5540 ;;      Params:         0       0       0       0       0       0       0
  5541 ;;      Locals:         0       1       0       0       0       0       0
  5542 ;;      Temps:          0       1       0       0       0       0       0
  5543 ;;      Totals:         0       2       0       0       0       0       0
  5544 ;;Total ram usage:        2 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; This function calls:
  5547 ;;		Nothing
  5548 ;; This function is called by:
  5549 ;;		_lcd_wrCom
  5550 ;;		_lcd_wrData
  5551 ;;		_lcd_resetSequence
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text28
  5556  0020F6                     __ptext28:
  5557                           	opt callstack 0
  5558  0020F6                     _lcd_ecrireDonnees:
  5559                           	opt callstack 28
  5560                           
  5561                           ;incstack = 0
  5562                           ;lcd_ecrireDonnees@donnee stored from wreg
  5563  0020F6  0100               	movlb	0	; force () banked
  5564  0020F8  6FB9               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  5565  0020FA                     
  5566                           ;Lcd4Lignes.c: 152: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  5567  0020FA  CF83 F0B8          	movff	3971,??_lcd_ecrireDonnees	;volatile
  5568  0020FE  0EF0               	movlw	240
  5569  002100  0100               	movlb	0	; force () banked
  5570  002102  17B8               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  5571  002104  0100               	movlb	0	; force () banked
  5572  002106  51B9               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  5573  002108  0B0F               	andlw	15
  5574  00210A  0100               	movlb	0	; force () banked
  5575  00210C  11B8               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  5576  00210E  6E83               	movwf	131,c	;volatile
  5577  002110                     
  5578                           ; BSR set to: 0
  5579  002110  0012               	return		;funcret
  5580  002112                     __end_of_lcd_ecrireDonnees:
  5581                           	opt callstack 0
  5582                           
  5583 ;; *************** function _lcd_busy *****************
  5584 ;; Defined at:
  5585 ;;		line 166 in file "Lcd4Lignes.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;		None
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;  adresse         1    1[BANK0 ] unsigned char 
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  1    wreg      unsigned char 
  5592 ;; Registers used:
  5593 ;;		wreg, status,2, status,0, cstack
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5599 ;;      Params:         0       0       0       0       0       0       0
  5600 ;;      Locals:         0       1       0       0       0       0       0
  5601 ;;      Temps:          0       1       0       0       0       0       0
  5602 ;;      Totals:         0       2       0       0       0       0       0
  5603 ;;Total ram usage:        2 bytes
  5604 ;; Hardware stack levels used:    1
  5605 ;; Hardware stack levels required when called:    1
  5606 ;; This function calls:
  5607 ;;		_lcd_lireDonnees
  5608 ;; This function is called by:
  5609 ;;		_lcd_wrCom
  5610 ;;		_lcd_wrData
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           	psect	text29
  5615  001FC4                     __ptext29:
  5616                           	opt callstack 0
  5617  001FC4                     _lcd_busy:
  5618                           	opt callstack 27
  5619  001FC4                     
  5620                           ;Lcd4Lignes.c: 168: unsigned char adresse;;Lcd4Lignes.c: 170: PORTAbits.RA0 = 0;
  5621  001FC4  9080               	bcf	128,0,c	;volatile
  5622                           
  5623                           ;Lcd4Lignes.c: 171: PORTAbits.RA1 = 1;
  5624  001FC6  8280               	bsf	128,1,c	;volatile
  5625  001FC8                     l208:
  5626                           
  5627                           ;Lcd4Lignes.c: 174: {;Lcd4Lignes.c: 175: PORTAbits.RA2 = 1;
  5628  001FC8  8480               	bsf	128,2,c	;volatile
  5629                           
  5630                           ;Lcd4Lignes.c: 176: __nop();
  5631  001FCA  F000               	nop	
  5632  001FCC                     
  5633                           ;Lcd4Lignes.c: 177: adresse = lcd_lireDonnees() << 4;
  5634  001FCC  EC99  F010         	call	_lcd_lireDonnees	;wreg free
  5635  001FD0  0100               	movlb	0	; force () banked
  5636  001FD2  6FB8               	movwf	??_lcd_busy& (0+255),b
  5637  001FD4  39B8               	swapf	??_lcd_busy& (0+255),w,b
  5638  001FD6  0BF0               	andlw	240
  5639  001FD8  0100               	movlb	0	; force () banked
  5640  001FDA  6FB9               	movwf	lcd_busy@adresse& (0+255),b
  5641  001FDC                     
  5642                           ; BSR set to: 0
  5643                           ;Lcd4Lignes.c: 178: PORTAbits.RA2 = 0;
  5644  001FDC  9480               	bcf	128,2,c	;volatile
  5645  001FDE                     
  5646                           ;Lcd4Lignes.c: 180: PORTAbits.RA2 = 1;
  5647  001FDE  8480               	bsf	128,2,c	;volatile
  5648  001FE0                     
  5649                           ;Lcd4Lignes.c: 181: __nop();
  5650  001FE0  F000               	nop	
  5651                           
  5652                           ;Lcd4Lignes.c: 182: adresse |= lcd_lireDonnees();
  5653  001FE2  EC99  F010         	call	_lcd_lireDonnees	;wreg free
  5654  001FE6  0100               	movlb	0	; force () banked
  5655  001FE8  13B9               	iorwf	lcd_busy@adresse& (0+255),f,b
  5656  001FEA                     
  5657                           ; BSR set to: 0
  5658                           ;Lcd4Lignes.c: 183: PORTAbits.RA2 = 0;
  5659  001FEA  9480               	bcf	128,2,c	;volatile
  5660  001FEC                     
  5661                           ;Lcd4Lignes.c: 185: };Lcd4Lignes.c: 186: while(adresse&0x80);
  5662  001FEC  0100               	movlb	0	; force () banked
  5663  001FEE  BFB9               	btfsc	lcd_busy@adresse& (0+255),7,b
  5664  001FF0  EFFC  F00F         	goto	u981
  5665  001FF4  EFFE  F00F         	goto	u980
  5666  001FF8                     u981:
  5667  001FF8  EFE4  F00F         	goto	l208
  5668  001FFC                     u980:
  5669  001FFC                     
  5670                           ; BSR set to: 0
  5671                           ;Lcd4Lignes.c: 188: PORTAbits.RA1 = 0;
  5672  001FFC  9280               	bcf	128,1,c	;volatile
  5673  001FFE                     
  5674                           ; BSR set to: 0
  5675                           ;Lcd4Lignes.c: 189: return(adresse&0x7f);
  5676  001FFE  0100               	movlb	0	; force () banked
  5677  002000  51B9               	movf	lcd_busy@adresse& (0+255),w,b
  5678  002002  0B7F               	andlw	127
  5679  002004                     
  5680                           ; BSR set to: 0
  5681  002004  0012               	return		;funcret
  5682  002006                     __end_of_lcd_busy:
  5683                           	opt callstack 0
  5684                           
  5685 ;; *************** function _lcd_lireDonnees *****************
  5686 ;; Defined at:
  5687 ;;		line 135 in file "Lcd4Lignes.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;		None
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;		None
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      unsigned char 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5701 ;;      Params:         0       0       0       0       0       0       0
  5702 ;;      Locals:         0       0       0       0       0       0       0
  5703 ;;      Temps:          0       0       0       0       0       0       0
  5704 ;;      Totals:         0       0       0       0       0       0       0
  5705 ;;Total ram usage:        0 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_lcd_busy
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text30
  5715  002132                     __ptext30:
  5716                           	opt callstack 0
  5717  002132                     _lcd_lireDonnees:
  5718                           	opt callstack 27
  5719  002132                     
  5720                           ;Lcd4Lignes.c: 138: return (PORTD & 0x0f);
  5721  002132  5083               	movf	131,w,c	;volatile
  5722  002134  0B0F               	andlw	15
  5723  002136  0012               	return		;funcret
  5724  002138                     __end_of_lcd_lireDonnees:
  5725                           	opt callstack 0
  5726                           
  5727 ;; *************** function ___wmul *****************
  5728 ;; Defined at:
  5729 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5732 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  product         2    4[BANK0 ] unsigned int 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  2    0[BANK0 ] unsigned int 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0, prodl, prodh
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5744 ;;      Params:         0       4       0       0       0       0       0
  5745 ;;      Locals:         0       2       0       0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0
  5747 ;;      Totals:         0       6       0       0       0       0       0
  5748 ;;Total ram usage:        6 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_initTabVue
  5754 ;;		_afficheTabVue
  5755 ;;		_afficheTabMines
  5756 ;;		_rempliMines
  5757 ;;		_calculToucheCombien
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text31
  5762  0020CE                     __ptext31:
  5763                           	opt callstack 0
  5764  0020CE                     ___wmul:
  5765                           	opt callstack 29
  5766  0020CE  0100               	movlb	0	; () banked
  5767  0020D0  51B8               	movf	___wmul@multiplier& (0+255),w,b
  5768  0020D2  03BA               	mulwf	___wmul@multiplicand& (0+255),b
  5769  0020D4  CFF3 F0BC          	movff	prodl,___wmul@product
  5770  0020D8  CFF4 F0BD          	movff	prodh,___wmul@product+1
  5771  0020DC  51B8               	movf	___wmul@multiplier& (0+255),w,b
  5772  0020DE  03BB               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5773  0020E0  50F3               	movf	243,w,c
  5774  0020E2  27BD               	addwf	(___wmul@product+1)& (0+255),f,b
  5775  0020E4  51B9               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5776  0020E6  03BA               	mulwf	___wmul@multiplicand& (0+255),b
  5777  0020E8  50F3               	movf	243,w,c
  5778  0020EA  27BD               	addwf	(___wmul@product+1)& (0+255),f,b
  5779  0020EC                     
  5780                           ; BSR set to: 0
  5781  0020EC  C0BC  F0B8         	movff	___wmul@product,?___wmul
  5782  0020F0  C0BD  F0B9         	movff	___wmul@product+1,?___wmul+1
  5783  0020F4                     
  5784                           ; BSR set to: 0
  5785  0020F4  0012               	return		;funcret
  5786  0020F6                     __end_of___wmul:
  5787                           	opt callstack 0
  5788                           
  5789                           	psect	param0
  5790  0000                     tosu	equ	0xFFF
  5791                           tosh	equ	0xFFE
  5792                           tosl	equ	0xFFD
  5793                           stkptr	equ	0xFFC
  5794                           pclatu	equ	0xFFB
  5795                           pclath	equ	0xFFA
  5796                           pcl	equ	0xFF9
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           prodh	equ	0xFF4
  5802                           prodl	equ	0xFF3
  5803                           indf0	equ	0xFEF
  5804                           postinc0	equ	0xFEE
  5805                           postdec0	equ	0xFED
  5806                           preinc0	equ	0xFEC
  5807                           plusw0	equ	0xFEB
  5808                           fsr0h	equ	0xFEA
  5809                           fsr0l	equ	0xFE9
  5810                           wreg	equ	0xFE8
  5811                           indf1	equ	0xFE7
  5812                           postinc1	equ	0xFE6
  5813                           postdec1	equ	0xFE5
  5814                           preinc1	equ	0xFE4
  5815                           plusw1	equ	0xFE3
  5816                           fsr1h	equ	0xFE2
  5817                           fsr1l	equ	0xFE1
  5818                           bsr	equ	0xFE0
  5819                           indf2	equ	0xFDF
  5820                           postinc2	equ	0xFDE
  5821                           postdec2	equ	0xFDD
  5822                           preinc2	equ	0xFDC
  5823                           plusw2	equ	0xFDB
  5824                           fsr2h	equ	0xFDA
  5825                           fsr2l	equ	0xFD9
  5826                           status	equ	0xFD8


Data Sizes:
    Strings     21
    Constant    0
    Data        152
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     37     125
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), 

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), m_tabVue(BANK1[84]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@nbMines(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 1
		 -> main@posY(BANK0[1]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 1
		 -> main@posX(BANK0[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _strcpy->___wmul
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _initTabVue->___wmul
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _afficheTabVue->_lcd_putMessage
    _afficheTabMines->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   28970
                                             30 BANK0      7     7      0
                    _afficheTabMines
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                     _initialisation
                           _lcd_init
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         10     8      2    5352
                                             20 BANK0     10     8      2
                            ___awmod
                             ___wmul
                               _rand
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     243
                                              6 BANK0      6     2      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     5     5      0    5046
                                             16 BANK0      5     5      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 10     6      4    4734
                                              6 BANK0     10     6      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           6     6      0    4093
                                              6 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _gagne                                                9     7      2     280
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _deplace                                              5     1      4    1121
                                              5 BANK0      5     1      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               6     5      1    1560
                                             10 BANK0      6     5      1
                 _enleveTuilesAutour
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  10     9      1    1264
                                              0 BANK0     10     9      1
 ---------------------------------------------------------------------------------
 (1) _afficheTabVue                                        2     2      0    5226
                                              9 BANK0      2     2      0
                             ___wmul
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _afficheTabMines                                      2     2      0    5226
                                              9 BANK0      2     2      0
                             ___wmul
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_putMessage                                       3     1      2     555
                                              6 BANK0      3     1      2
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (3) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3935
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabMines
     ___wmul
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _afficheTabVue
     ___wmul
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _enleveTuilesAutour
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
   _initTabVue
     ___wmul
   _initialisation
     _srand
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul
     _strcpy
       ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     25      7D       4       78.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     111      14        0.0%
DATA                 0      0     111      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 05 09:53:14 2019

 __end_of_calculToucheCombien 1172                            l85 174A                            l79 16EE  
                          l97 1684          ??_enleveTuilesAutour 00B9           ___wmul@multiplicand 00BA  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008                           l102 1B4A  
                         l202 2136                           l210 2004                           l107 1BD8  
                         l205 2110                           l117 12D6                           l222 1D8C  
                         l126 1434                           l231 2128                           l208 1FC8  
                         l216 1D22                           l152 187C                           l209 1FFC  
                         l225 20CC                           l137 1170                           l219 2078  
                         l171 18FC                           l164 0C78                           l180 20A4  
                         l148 1572                           l340 1CA6                           l173 1968  
                         l341 1CB6                           l246 1C4A                           l263 1F2E  
                         l183 1F7A                           l329 20F4                           l257 1E8E  
                         l177 2094                           l276 1ABC                           l279 2130  
                         l573 1A1A                           l993 2120                           l996 1E3A  
                __CFG_CPB$OFF 000000                           u280 20A2                           u281 209E  
                __CFG_CPD$OFF 000000                           u980 1FFC                           u981 1FF8  
                         u990 1CFC                           u991 1CF8                  __CFG_BORV$18 000000  
                ___awmod@sign 00CB                   lcd_gotoXY@x 00BC                           wreg 000FE8  
                 lcd_gotoXY@y 00BB                   main@nbMines 00D9                  __CFG_LVP$OFF 000000  
                        l1002 1FC2                          l2000 0C80                          l2010 0D84  
                        l2002 0CE6                          l2100 0BFA                          l2020 0E4A  
                        l2012 0D9E                          l2004 0D00                          l2102 0C0C  
                        l2110 1D3C                          l2030 0F38                          l2022 0E4E  
                        l2014 0DA2                          l2006 0D1A                          l2104 2112  
                        l2120 1D52                          l2112 1D3E                          l2040 1014  
                        l2032 0F52                          l2024 0EB4                          l2016 0E00  
                        l2008 0D1E                          l2210 1F50                          l2202 1F30  
                        l2130 1D6E                          l2122 1D58                          l2114 1D40  
                        l2106 1D24                          l2050 10DA                          l2042 1018  
                        l2034 0F82                          l2026 0ECE                          l2018 0E1A  
                        l2060 061C                          l2220 1F5E                          l2212 1F52  
                        l2204 1F38                          l2140 1A1C                          l2132 1D76  
                        l2124 1D5C                          l2116 1D46                          l2108 1D28  
                        l2052 1138                          l2044 1076                          l2036 0F86  
                        l2028 0ED2                          l2300 1272                          l2070 07FE  
                        l2062 066A                          l2230 1F6A                          l2222 1F62  
                        l2214 1F54                          l2206 1F42                          l2150 1A44  
                        l2142 1A22                          l2134 1D7C                          l2126 1D64  
                        l2118 1D4A                          l2054 1168                          l2046 10A6  
                        l2038 0FE4                          l2302 12A2                          l2080 0950  
                        l2072 0810                          l2064 06E6                          l1360 20A2  
                        l2400 1900                          l2232 1F72                          l2224 1F64  
                        l2216 1F58                          l2208 1F44                          l2160 1AA2  
                        l2144 1A28                          l2136 1D80                          l2128 1D6A  
                        l2240 20A6                          l2056 116C                          l2048 10D6  
                        l2320 134E                          l2312 12F4                          l2304 12A6  
                        l2090 0ADE                          l2082 099E                          l2074 088C  
                        l2066 0734                          l1354 207E                          l2410 1960  
                        l2402 1912                          l2250 15A0                          l2234 1F74  
                        l2226 1F66                          l2218 1F5A                          l2162 1AA6  
                        l2154 1A5A                          l2138 1D88                          l2242 20C8  
                        l2322 139A                          l2330 141E                          l2314 12FA  
                        l2306 12D8                          l2170 197E                          l2420 1B4C  
                        l2092 0B24                          l2084 0A1A                          l2076 08D2  
                        l2068 07B0                          l1356 2092                          l2340 1474  
                        l2404 1916                          l2260 161A                          l2252 15AA  
                        l2244 1574                          l2236 1F76                          l2228 1F68  
                        l2156 1A8C                          l2164 1AB8                          l2148 1A3E  
                        l2332 1422                          l2324 13D8                          l2308 12DE  
                        l2180 19B2                          l2172 1986                          l2430 1BB4  
                        l2422 1B56                          l2270 1AC8                          l2094 0B36  
                        l2086 0A60                          l2078 08E4                          l1358 2092  
                        l2350 14C6                          l2342 147E                          l2334 1436  
                        l2406 1928                          l2262 1638                          l2246 157E  
                        l2238 1F78                          l2158 1A90                          l2326 1408  
                        l2318 1310                          l2190 19EE                          l2182 19BA  
                        l2174 198A                          l2166 196A                          l2432 1BBA  
                        l2280 1B2C                          l2096 0B48                          l2088 0A72  
                        l2360 1526                          l2352 14DE                          l2344 1498  
                        l2336 1450                          l2408 1952                          l2416 1966  
                        l2264 1660                          l2256 15CC                          l2328 140C  
                        l2192 19F4                          l2184 19C2                          l2176 1998  
                        l2168 1970                          l2426 1B78                          l2274 1AEA  
                        l2098 0BB4                          l2370 17D0                          l2362 1532  
                        l2354 14EA                          l2346 14A2                          l2338 145A  
                        l2266 1666                          l2258 1614                          l2186 19D0  
                        l2194 19FA                          l2178 19A0                          l2290 11D6  
                        l2282 1172                          l2450 16B4                          l2442 1686  
                        l1900 204A                          l2428 1B86                          l2276 1AF8  
                        l2268 1ABE                          l2380 187A                          l2364 154A  
                        l2356 1502                          l2348 14BC                          l2196 1A0A  
                        l2188 19E6                          l2292 11DC                          l2284 117C  
                        l2452 16B8                          l2444 16A8                          l1910 2056  
                        l1902 204E                          l2278 1B26                          l2374 17D6  
                        l2366 1556                          l2358 150E                          l2390 18A0  
                        l2198 1A12                          l2294 11FA                          l2470 1746  
                        l2462 16FC                          l2454 16C4                          l2446 16AC  
                        l1840 1FC4                          l1920 2070                          l1912 2060  
                        l1904 2052                          l2376 1812                          l2368 1792  
                        l2392 18A6                          l2384 187E                          l2296 1204  
                        l2288 119E                          l2472 1758                          l2464 1710  
                        l2480 1774                          l2456 16C8                          l2448 16B0  
                        l1834 2132                          l1850 1FE0                          l1842 1FCC  
                        l1922 2070                          l1914 2064                          l1906 2052  
                        l1930 1E40                          l2378 181E                          l2386 188A  
                        l2298 1234                          l2474 1760                          l2466 1722  
                        l2458 16E0                          l1852 1FEA                          l1844 1FDC  
                        l1924 2074                          l1916 2064                          l1908 2054  
                        l1932 1E50                          l1940 1E6E                          l2396 18BC  
                        l2476 176C                          l2468 1734                          l1942 20CE  
                        l1854 1FEC                          l1846 1FDE                          l1838 20FA  
                        l1862 212A                          l1870 1CC4                          l1918 206C  
                        l1934 1E5A                          l2398 18F8                          l1950 1C5E  
                        l2478 1770                          l1944 20EC                          l1856 1FEC  
                        l1848 1FDE                          l1880 1CD6                          l1872 1CC6  
                        l1864 1CBC                          l1960 1BE2                          l1936 1E64  
                        l1928 2122                          l1952 1C6C                          l1858 1FFE  
                        l1890 1D10                          l1882 1CDE                          l1874 1CC8  
                        l1866 1CC0                          l1962 1BF2                          l1970 1C22  
                        l1954 1C7C                          l1892 1D1A                          l1884 1CE2  
                        l1876 1CD2                          l1868 1CC4                          l1964 1C02  
                        l1972 1EE2                          l1956 1C86                          l1948 1C4C  
                        l1980 1F7C                          l1894 1D1E                          l1886 1CEA  
                        l1878 1CD6                          l1966 1C12                          l1958 1BDE  
                        l1974 1EEC                          l1990 1DE6                          l1982 1F88  
                        l1896 1D1E                          l1888 1CFC                          l1976 1F06  
                        l1992 1E1C                          l1984 1F92                          l1978 1F0A  
                        l1994 1E2E                          l1986 1FBA                          l1998 0C7A  
                        STR_1 0601                          u1000 1D10                          u1001 1D0C  
                        u1010 1C6C                          u1011 1C68                          u1100 0E00  
                        u1020 1CA6                          u1101 0DFC                          u1021 1CA2  
                        u1030 1F2E                          u1110 0E1A                          u1031 1F2A  
                        u1111 0E16                          u1200 1076                          u1120 0E4A  
                        u1040 1FBA                          u1201 1072                          u1121 0E46  
                        u1041 1FB6                          u1210 10A6                          u1130 0EB4  
                        u1050 0CE6                          u1211 10A2                          u1131 0EB0  
                        u1051 0CE2                          u1300 08E4                          u1220 10D6  
                        u1140 0ECE                          u1060 0D00                          u1301 08E0  
                        u1221 10D2                          u1141 0ECA                          u1061 0CFC  
                        u1310 099E                          u1230 1138                          u1150 0F38  
                        u1070 0D1A                          u1311 099A                          u1231 1134  
                        u1151 0F34                          u1071 0D16                          u1320 0A60  
                        u1400 1A56                          u1240 1168                          u1160 0F52  
                        u1080 0D84                          u1321 0A5C                          u1401 1A52  
                        u1241 1164                          u1161 0F4E                          u1081 0D80  
                        u1330 0A72                          u1250 066A                          u1410 1AA2  
                        u1170 0F82                          u1090 0D9E                          u1331 0A6E  
                        u1251 0666                          u1411 1A9E                          u1171 0F7E  
                        u1091 0D9A                          u1340 0B24                          u1260 0734  
                        u1500 15C8                          u1420 1AB8                          u1180 0FE4  
                        u1341 0B20                          u1261 0730                          u1501 15C4  
                        u1421 1AB4                          u1181 0FE0                          u1350 0B36  
                        u1270 07FE                          u1510 1638                          u1190 1014  
                        u1430 197E                          u1351 0B32                          u1271 07FA  
                        u1511 1634                          u1191 1010                          u1431 197A  
                        u1360 0B48                          u1280 0810                          u1520 1684  
                        u1600 130C                          u1440 1998                          u1361 0B44  
                        u1281 080C                          u1521 1680                          u1601 1308  
                        u1441 1994                          u1530 1AE6                          u1370 0BFA  
                        u1290 08D2                          u1610 134E                          u1450 19B2  
                        u1531 1AE2                          u1371 0BF6                          u1291 08CE  
                        u1611 134A                          u1451 19AE                          u1540 1B4A  
                        u1380 0C0C                          u1700 1502                          u1620 13D8  
                        u1460 19D0                          u1541 1B46                          u1381 0C08  
                        u1701 14FE                          u1621 13D4                          u1461 19CC  
                        u1710 1526                          u1390 1A3A                          u1630 141E  
                        u1470 19E6                          u1550 119A                          u1711 1522  
                        u1391 1A36                          u1631 141A                          u1471 19E2  
                        u1551 1196                          u1720 154A                          u1800 1952  
                        u1640 1434                          u1480 1A0A                          u1560 11FA  
                        u1721 1546                          u1801 194E                          u1641 1430  
                        u1481 1A06                          u1561 11F6                          u1810 1B74  
                        u1730 17D0                          u1650 1450                          u1490 159C  
                        u1570 1272                          u1811 1B70                          u1731 17CC  
                        u1651 144C                          u1491 1598                          u1571 126E  
                        u1820 1BD8                          u1740 1812                          u1660 1474  
                        u1580 12D6                          u1821 1BD4                          u1741 180E  
                        u1661 1470                          u1581 12D2                          u1670 1498  
                        u1750 189C                          u1590 12F0                          u1671 1494  
                        u1751 1898                          u1591 12EC                          u1680 14BC  
                        u1760 18B8                          u1840 16EE                          u1681 14B8  
                        u1761 18B4                          u1841 16EA                          u1690 14DE  
                        u1770 18F8                          u1850 16FC                          u1691 14DA  
                        u1771 18F4                          u1907 1D30                          u1851 16F8  
                        u1780 1912                          u1860 1734                          u1781 190E  
                        u1917 1D4C                          u1861 1730                          u1790 1928  
                        u1870 1746                          u1791 1924                          u1927 1D5E  
                        u1871 1742                          u1880 1758                          u1937 1D70  
                        u1881 1754                          u1947 1D82                          u1957 1CE4  
                        u1967 1D12                          u1897 177C                          _RCIF 007CF5  
                        _TMR1 000FCE              ??_initialisation 00BA                          _main 1686  
                        _rand 1DE6                          fsr2h 000FDA                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        prodh 000FF4                          prodl 000FF3                          start 0000  
             ?_lcd_putMessage 00BE                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               ??_lcd_ecritChar 00BB                         ?_main 00B8  
                       ?_rand 00C4               __end_of___awmod 1A1C                         _ANSEL 000F7E  
                       _RCREG 000FAE                         _SPBRG 000FAF                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISD 000F95  
                       _TXREG 000FAD                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000               __end_of_deplace 1574  
         ___lmul@multiplicand 00BC                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 00BB  
                       _gagne 187E                         _randx 0060                         _srand 2112  
                       tablat 000FF5                         status 000FD8                __CFG_HFOFST$ON 000000  
           ??_afficheTabMines 00C1                __CFG_PBADEN$ON 000000              _metToucheCombien 12D8  
             __initialization 1E90                  __end_of_main 178E                  __end_of_rand 1E3C  
         enleveTuilesAutour@x 00C1           enleveTuilesAutour@y 00B8          lcd_putMessage@chaine 00BE  
  calculToucheCombien@colonne 00C0                        ??_main 00D6                        ??_rand 00C6  
               __activetblptr 000003                        ?_gagne 00B8                        _ADCON1 000FC1  
                      _ADRESH 000FC4                        ?_srand 00B8                        _ANSELH 000F7F  
                 initTabVue@i 00C2                   initTabVue@j 00C0                __CFG_WDTEN$OFF 000000  
                ?_rempliMines 00CC                        _SPBRGH 000FB0                __CFG_XINST$OFF 000000  
              lcd_initCGRam@i 00BD                lcd_initCGRam@j 00BE                getAnalog@canal 00B9  
            __end_of_lcd_busy 2006              __end_of_lcd_init 20CE                        ___lmul 1C4C  
                      ___wmul 20CE                __CFG_STVREN$ON 000000                     ??___awmod 00CA  
                      _demine 178E                        gagne@i 00BF                        gagne@j 00C0  
                      clear_0 1ED6               ___awmod@divisor 00C8                     ??_deplace 00C1  
             ___awmod@counter 00CA                        _strcpy 1F7C                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 00B8        __size_of_afficheTabVue 008E             _lcd_resetSequence 1D24  
                  __accesstop 0060       __end_of__initialization 1EDC           _lcd_strobeEnableBit 212A  
          ?_lcd_resetSequence 00B8                 ___rparam_used 000000                  __pidataBANK0 1D8E  
                __pidataBANK1 2006           ??_lcd_resetSequence 00BA                 __end_of_gagne 196A  
               __end_of_srand 2122          ?_lcd_strobeEnableBit 00B8            __size_of_getAnalog 002C  
          __size_of_lcd_wrCom 006C                       ??_gagne 00BA     __end_of_lcd_resetSequence 1D8E  
                     ??_srand 00BA      __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 20F6  
                  __pbssBANK1 0100              ??_lcd_putMessage 00C0            ?_lcd_ecrireDonnees 00B8  
    __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00B8                       ?___lmul 00B8  
                     ?___wmul 00B8                       ?_demine 00C2                 _afficheTabVue 1ABE  
              ___lmul@product 00C0   __size_of_enleveTuilesAutour 0662         ??_lcd_strobeEnableBit 00B8  
                     ?_strcpy 00BE  __size_of_calculToucheCombien 04F8      __end_of_metToucheCombien 1436  
                  _lcd_gotoXY 1BDA                    _lcd_wrData 2046               _afficheTabMines 1B4C  
   __end_of_lcd_ecrireDonnees 2112                     ?_lcd_busy 00B8                     ?_lcd_init 00B8  
     lcd_ecrireDonnees@donnee 00B9                    _m_tabMines 0064             __end_of_getAnalog 20A6  
        __size_of_rempliMines 0166                       __Hparam 0000                       __Lparam 0000  
                  _initTabVue 1574             __end_of_lcd_wrCom 1D24                ?_afficheTabVue 00B8  
             __size_of___lmul 006C                       ___awmod 196A               __size_of___wmul 0028  
             __size_of_demine 00F0                  __psmallconst 0600                       __pcinit 1E90  
                   _ANSELbits 000F7E                       __ramtop 0600                       _deplace 1436  
                     __ptext0 1686                       __ptext1 1172                       __ptext2 1F7C  
                     __ptext3 1DE6                       __ptext4 1C4C                       __ptext5 196A  
                     __ptext6 12D8                       __ptext7 0C7A                       __ptext8 20A6  
                     __ptext9 1D24         __end_of_lcd_ecritChar 1E90                     _T0CONbits 000FD5  
             lcd_busy@adresse 00B9               __size_of_strcpy 0048                     _T1CONbits 000FCD  
            ___awmod@dividend 00C6                    gagne@count 00BE                       demine@x 00C7  
                     demine@y 00C2              lcd_ecritChar@car 00BB                    ??_lcd_busy 00B8  
                     main@win 00D8                    ??_lcd_init 00BF    __size_of_lcd_resetSequence 006A  
        end_of_initialization 1EDC         __end_of_lcd_initCGRam 1ABE             ??_lcd_lireDonnees 00B8  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE       __size_of_initialisation 004C  
           ??_lcd_curseurHome 00BB           lcd_ecritChar@posRam 00BC                     _PORTAbits 000F80  
                   _PORTBbits 000F81       __end_of_afficheTabMines 1BDA                   ?_lcd_gotoXY 00BB  
                   _TRISCbits 000F94                   ?_lcd_wrData 00B8    __size_of_lcd_ecrireDonnees 001C  
                   _TXSTAbits 000FAC               ??_afficheTabVue 00C1                   ?_initTabVue 00B8  
              __end_of___lmul 1CB8                __end_of___wmul 20F6                   _BAUDCONbits 000FB8  
              __end_of_demine 187E                __end_of_strcpy 1FC4           start_initialization 1E90  
         _calculToucheCombien 0C7A           __size_of_lcd_gotoXY 0072  calculToucheCombien@countMine 00C7  
                    ??___lmul 00C0                      ??___wmul 00BC                 rempliMines@nb 00CC  
         __size_of_lcd_wrData 0034                      ??_demine 00C3                   __pdataBANK0 0060  
                 __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000                      ??_strcpy 00C2  
        ?_calculToucheCombien 00BE              ?_afficheTabMines 00B8                 __pcstackBANK0 00B8  
           ?_metToucheCombien 00B8              afficheTabMines@i 00C1           __size_of_initTabVue 0112  
          ??_metToucheCombien 00C8             __size_of_lcd_busy 0042             __size_of_lcd_init 0028  
           __CFG_CCP2MX$PORTC 000000                     _getAnalog 207A   __end_of_lcd_strobeEnableBit 2132  
              _initialisation 1F30    __end_of_enleveTuilesAutour 0C7A                      ?___awmod 00C6  
                    ?_deplace 00BD                     _lcd_wrCom 1CB8         ??_calculToucheCombien 00C2  
                 __smallconst 0600                __size_of_gagne 00EC               _lcd_lireDonnees 2132  
         lcd_wrData@caractere 00BA                __size_of_srand 0010                 ??_rempliMines 00CE  
             _lcd_curseurHome 2122                ___wmul@product 00BC        __end_of_initialisation 1F7C  
                  ?_getAnalog 00B8              __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 004E  
                  ?_lcd_wrCom 00B8                    _ADCON0bits 000FC2                    _ADCON2bits 000FC0  
           ___wmul@multiplier 00B8                  ??_lcd_gotoXY 00BC                  ??_lcd_wrData 00BA  
           lcd_wrCom@commande 00BA             ___lmul@multiplier 00B8                     copy_data0 1EA4  
                   copy_data1 1EC4                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 00B8           __end_of_rempliMines 12D8  
                ??_initTabVue 00BE            __CFG_BOREN$SBORDIS 000000                  rempliMines@i 00D4  
                rempliMines@x 00D2                  rempliMines@y 00D3            __end_of_lcd_gotoXY 1C4C  
          __end_of_lcd_wrData 207A              __size_of___awmod 00B2        __size_of_lcd_initCGRam 00A2  
             lcd_putMessage@j 00C0              __size_of_deplace 013E       __end_of_lcd_lireDonnees 2138  
                    _matCGRAM 0154       __end_of_lcd_curseurHome 212A                      __ptext10 1A1C  
                    __ptext11 2122                      __ptext20 1ABE                      __ptext12 1F30  
                    __ptext21 1B4C                      __ptext13 2112                      __ptext30 2132  
                    __ptext22 1EE2                      __ptext14 1574                      __ptext31 20CE  
                    __ptext23 1E3C                      __ptext15 187E                      __ptext24 2046  
                    __ptext16 1436                      __ptext25 1BDA                      __ptext17 207A  
                    __ptext26 1CB8                      __ptext18 178E                      __ptext27 212A  
                    __ptext19 0618                      __ptext28 20F6                      __ptext29 1FC4  
           metToucheCombien@i 00CB             metToucheCombien@j 00CC                      _lcd_busy 1FC4  
                    _lcd_init 20A6            __end_of_initTabVue 1686              rempliMines@i_497 00D1  
    calculToucheCombien@ligne 00BE                      _m_tabVue 0100                    strcpy@from 00C0  
               __size_of_main 0108                 __size_of_rand 0056                   gagne@pMines 00B8  
                    deplace@x 00BD                      deplace@y 00BF                   ??_getAnalog 00B8  
       __end_of_afficheTabVue 1B4C                      main@lose 00D7                      main@posX 00DC  
                    main@posY 00DB                   ??_lcd_wrCom 00BA                 _lcd_ecritChar 1E3C  
                  _INTCONbits 000FF2                afficheTabVue@i 00C1                 _lcd_initCGRam 1A1C  
                 _rempliMines 1172     __size_of_metToucheCombien 015E                _lcd_putMessage 1EE2  
              ?_lcd_ecritChar 00B8              ?_lcd_lireDonnees 00B8                      strcpy@cp 00C2  
                    strcpy@to 00BE            _enleveTuilesAutour 0618              ?_lcd_curseurHome 00B8  
    __size_of_afficheTabMines 008E                ?_lcd_initCGRam 00B8           ?_enleveTuilesAutour 00B8  
           __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 1F30  
