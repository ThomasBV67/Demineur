

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 05 00:02:32 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1,minocg
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F45K20 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataBANK0
    83  001C36                     __pidataBANK0:
    84                           	opt callstack 0
    85                           
    86                           ;initializer for _randx
    87  001C36  0001               	dw	1
    88  001C38  0000               	dw	0
    89                           
    90                           ;initializer for _m_tabMines
    91  001C3A  20                 	db	32
    92  001C3B  20                 	db	32
    93  001C3C  20                 	db	32
    94  001C3D  20                 	db	32
    95  001C3E  20                 	db	32
    96  001C3F  20                 	db	32
    97  001C40  20                 	db	32
    98  001C41  20                 	db	32
    99  001C42  20                 	db	32
   100  001C43  20                 	db	32
   101  001C44  20                 	db	32
   102  001C45  20                 	db	32
   103  001C46  20                 	db	32
   104  001C47  20                 	db	32
   105  001C48  20                 	db	32
   106  001C49  20                 	db	32
   107  001C4A  20                 	db	32
   108  001C4B  20                 	db	32
   109  001C4C  20                 	db	32
   110  001C4D  20                 	db	32
   111  001C4E  00                 	db	0
   112  001C4F  20                 	db	32
   113  001C50  20                 	db	32
   114  001C51  20                 	db	32
   115  001C52  20                 	db	32
   116  001C53  20                 	db	32
   117  001C54  20                 	db	32
   118  001C55  20                 	db	32
   119  001C56  20                 	db	32
   120  001C57  20                 	db	32
   121  001C58  20                 	db	32
   122  001C59  20                 	db	32
   123  001C5A  20                 	db	32
   124  001C5B  20                 	db	32
   125  001C5C  20                 	db	32
   126  001C5D  20                 	db	32
   127  001C5E  20                 	db	32
   128  001C5F  20                 	db	32
   129  001C60  20                 	db	32
   130  001C61  20                 	db	32
   131  001C62  20                 	db	32
   132  001C63  00                 	db	0
   133  001C64  20                 	db	32
   134  001C65  20                 	db	32
   135  001C66  20                 	db	32
   136  001C67  20                 	db	32
   137  001C68  20                 	db	32
   138  001C69  20                 	db	32
   139  001C6A  20                 	db	32
   140  001C6B  20                 	db	32
   141  001C6C  20                 	db	32
   142  001C6D  20                 	db	32
   143  001C6E  20                 	db	32
   144  001C6F  20                 	db	32
   145  001C70  20                 	db	32
   146  001C71  20                 	db	32
   147  001C72  20                 	db	32
   148  001C73  20                 	db	32
   149  001C74  20                 	db	32
   150  001C75  20                 	db	32
   151  001C76  20                 	db	32
   152  001C77  20                 	db	32
   153  001C78  00                 	db	0
   154  001C79  20                 	db	32
   155  001C7A  20                 	db	32
   156  001C7B  20                 	db	32
   157  001C7C  20                 	db	32
   158  001C7D  20                 	db	32
   159  001C7E  20                 	db	32
   160  001C7F  20                 	db	32
   161  001C80  20                 	db	32
   162  001C81  20                 	db	32
   163  001C82  20                 	db	32
   164  001C83  20                 	db	32
   165  001C84  20                 	db	32
   166  001C85  20                 	db	32
   167  001C86  20                 	db	32
   168  001C87  20                 	db	32
   169  001C88  20                 	db	32
   170  001C89  20                 	db	32
   171  001C8A  20                 	db	32
   172  001C8B  20                 	db	32
   173  001C8C  20                 	db	32
   174  001C8D  00                 	db	0
   175                           
   176                           	psect	idataBANK1
   177  001EAE                     __pidataBANK1:
   178                           	opt callstack 0
   179                           
   180                           ;initializer for _matCGRAM
   181  001EAE  08                 	db	8
   182  001EAF  04                 	db	4
   183  001EB0  04                 	db	4
   184  001EB1  0A                 	db	10
   185  001EB2  11                 	db	17
   186  001EB3  1F                 	db	31
   187  001EB4  11                 	db	17
   188  001EB5  00                 	db	0
   189  001EB6  00                 	db	0
   190  001EB7  0E                 	db	14
   191  001EB8  1F                 	db	31
   192  001EB9  1F                 	db	31
   193  001EBA  1F                 	db	31
   194  001EBB  1F                 	db	31
   195  001EBC  0E                 	db	14
   196  001EBD  00                 	db	0
   197  001EBE  08                 	db	8
   198  001EBF  14                 	db	20
   199  001EC0  04                 	db	4
   200  001EC1  0E                 	db	14
   201  001EC2  1F                 	db	31
   202  001EC3  1F                 	db	31
   203  001EC4  1F                 	db	31
   204  001EC5  0E                 	db	14
   205  001EC6  0A                 	db	10
   206  001EC7  11                 	db	17
   207  001EC8  0A                 	db	10
   208  001EC9  0E                 	db	14
   209  001ECA  1B                 	db	27
   210  001ECB  0E                 	db	14
   211  001ECC  04                 	db	4
   212  001ECD  04                 	db	4
   213  001ECE  0A                 	db	10
   214  001ECF  0A                 	db	10
   215  001ED0  0A                 	db	10
   216  001ED1  0E                 	db	14
   217  001ED2  1B                 	db	27
   218  001ED3  11                 	db	17
   219  001ED4  1F                 	db	31
   220  001ED5  15                 	db	21
   221  001ED6  04                 	db	4
   222  001ED7  0A                 	db	10
   223  001ED8  0E                 	db	14
   224  001ED9  11                 	db	17
   225  001EDA  1F                 	db	31
   226  001EDB  10                 	db	16
   227  001EDC  0E                 	db	14
   228  001EDD  00                 	db	0
   229  001EDE  08                 	db	8
   230  001EDF  04                 	db	4
   231  001EE0  0E                 	db	14
   232  001EE1  01                 	db	1
   233  001EE2  0F                 	db	15
   234  001EE3  11                 	db	17
   235  001EE4  0F                 	db	15
   236  001EE5  00                 	db	0
   237  001EE6  04                 	db	4
   238  001EE7  0A                 	db	10
   239  001EE8  0E                 	db	14
   240  001EE9  01                 	db	1
   241  001EEA  0F                 	db	15
   242  001EEB  11                 	db	17
   243  001EEC  0F                 	db	15
   244  001EED  00                 	db	0
   245  0000                     _TRISCbits	set	3988
   246  0000                     _PORTAbits	set	3968
   247  0000                     _PORTD	set	3971
   248  0000                     _ANSELbits	set	3966
   249  0000                     _TRISA	set	3986
   250  0000                     _ANSEL	set	3966
   251  0000                     _TRISB	set	3987
   252  0000                     _ANSELH	set	3967
   253  0000                     _TRISD	set	3989
   254  0000                     _PORTBbits	set	3969
   255  0000                     _TMR1	set	4046
   256  0000                     _RCREG	set	4014
   257  0000                     _TXREG	set	4013
   258  0000                     _RCSTAbits	set	4011
   259  0000                     _TXSTAbits	set	4012
   260  0000                     _BAUDCONbits	set	4024
   261  0000                     _SPBRG	set	4015
   262  0000                     _SPBRGH	set	4016
   263  0000                     _ADCON2bits	set	4032
   264  0000                     _ADCON1	set	4033
   265  0000                     _T1CONbits	set	4045
   266  0000                     _ADRESH	set	4036
   267  0000                     _ADCON0bits	set	4034
   268  0000                     _RCIF	set	31989
   269  0000                     _T0CONbits	set	4053
   270  0000                     _INTCONbits	set	4082
   271                           
   272                           	psect	smallconst
   273  000600                     __psmallconst:
   274                           	opt callstack 0
   275  000600  00                 	db	0
   276  000601                     STR_1:
   277                           
   278                           ; BSR set to: 0
   279  000601  20                 	db	32
   280  000602  20                 	db	32
   281  000603  20                 	db	32
   282  000604  20                 	db	32
   283  000605  20                 	db	32
   284  000606  20                 	db	32
   285  000607  20                 	db	32
   286  000608  20                 	db	32
   287  000609  20                 	db	32
   288  00060A  20                 	db	32
   289  00060B  20                 	db	32
   290  00060C  20                 	db	32
   291  00060D  20                 	db	32
   292  00060E  20                 	db	32
   293  00060F  20                 	db	32
   294  000610  20                 	db	32
   295  000611  20                 	db	32
   296  000612  20                 	db	32
   297  000613  20                 	db	32
   298  000614  20                 	db	32
   299  000615  00                 	db	0
   300                           
   301                           ; #config settings
   302  000616  00                 	db	0	; dummy byte at the end
   303  0000                     
   304                           	psect	cinit
   305  001D38                     __pcinit:
   306                           	opt callstack 0
   307  001D38                     start_initialization:
   308                           	opt callstack 0
   309  001D38                     __initialization:
   310                           	opt callstack 0
   311                           
   312                           ; Initialize objects allocated to BANK1 (64 bytes)
   313                           ; load TBLPTR registers with __pidataBANK1
   314  001D38  0EAE               	movlw	low __pidataBANK1
   315  001D3A  6EF6               	movwf	tblptrl,c
   316  001D3C  0E1E               	movlw	high __pidataBANK1
   317  001D3E  6EF7               	movwf	tblptrh,c
   318  001D40  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   319  001D42  6EF8               	movwf	tblptru,c
   320  001D44  EE01  F054         	lfsr	0,__pdataBANK1
   321  001D48  EE10 F040          	lfsr	1,64
   322  001D4C                     copy_data0:
   323  001D4C  0009               	tblrd		*+
   324  001D4E  CFF5 FFEE          	movff	tablat,postinc0
   325  001D52  50E5               	movf	postdec1,w,c
   326  001D54  50E1               	movf	fsr1l,w,c
   327  001D56  E1FA               	bnz	copy_data0
   328                           
   329                           ; Initialize objects allocated to BANK0 (88 bytes)
   330                           ; load TBLPTR registers with __pidataBANK0
   331  001D58  0E36               	movlw	low __pidataBANK0
   332  001D5A  6EF6               	movwf	tblptrl,c
   333  001D5C  0E1C               	movlw	high __pidataBANK0
   334  001D5E  6EF7               	movwf	tblptrh,c
   335  001D60  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   336  001D62  6EF8               	movwf	tblptru,c
   337  001D64  EE00  F060         	lfsr	0,__pdataBANK0
   338  001D68  EE10 F058          	lfsr	1,88
   339  001D6C                     copy_data1:
   340  001D6C  0009               	tblrd		*+
   341  001D6E  CFF5 FFEE          	movff	tablat,postinc0
   342  001D72  50E5               	movf	postdec1,w,c
   343  001D74  50E1               	movf	fsr1l,w,c
   344  001D76  E1FA               	bnz	copy_data1
   345                           
   346                           ; Clear objects allocated to BANK1 (84 bytes)
   347  001D78  EE01  F000         	lfsr	0,__pbssBANK1
   348  001D7C  0E54               	movlw	84
   349  001D7E                     clear_0:
   350  001D7E  6AEE               	clrf	postinc0,c
   351  001D80  06E8               	decf	wreg,f,c
   352  001D82  E1FD               	bnz	clear_0
   353  001D84                     end_of_initialization:
   354                           	opt callstack 0
   355  001D84                     __end_of__initialization:
   356                           	opt callstack 0
   357  001D84  0100               	movlb	0
   358  001D86  EF43  F00B         	goto	_main	;jump to C main() function
   359                           
   360                           	psect	dataBANK0
   361  000060                     __pdataBANK0:
   362                           	opt callstack 0
   363  000060                     _randx:
   364                           	opt callstack 0
   365  000060                     	ds	4
   366  000064                     _m_tabMines:
   367                           	opt callstack 0
   368  000064                     	ds	84
   369                           
   370                           	psect	bssBANK1
   371  000100                     __pbssBANK1:
   372                           	opt callstack 0
   373  000100                     _m_tabVue:
   374                           	opt callstack 0
   375  000100                     	ds	84
   376                           
   377                           	psect	dataBANK1
   378  000154                     __pdataBANK1:
   379                           	opt callstack 0
   380  000154                     _matCGRAM:
   381                           	opt callstack 0
   382  000154                     	ds	64
   383                           
   384                           	psect	cstackBANK0
   385  0000B8                     __pcstackBANK0:
   386                           	opt callstack 0
   387  0000B8                     ??_getAnalog:
   388  0000B8                     ??_lcd_ecrireDonnees:
   389  0000B8                     ??_lcd_busy:
   390  0000B8                     ?___wmul:
   391                           	opt callstack 0
   392  0000B8                     ?___lmul:
   393                           	opt callstack 0
   394  0000B8                     enleveTuilesAutour@y:
   395                           	opt callstack 0
   396  0000B8                     ___wmul@multiplier:
   397                           	opt callstack 0
   398  0000B8                     srand@x:
   399                           	opt callstack 0
   400  0000B8                     ___lmul@multiplier:
   401                           	opt callstack 0
   402                           
   403                           ; 4 bytes @ 0x0
   404  0000B8                     	ds	1
   405  0000B9                     ??_enleveTuilesAutour:
   406  0000B9                     getAnalog@canal:
   407                           	opt callstack 0
   408  0000B9                     lcd_ecrireDonnees@donnee:
   409                           	opt callstack 0
   410  0000B9                     lcd_busy@adresse:
   411                           	opt callstack 0
   412                           
   413                           ; 1 bytes @ 0x1
   414  0000B9                     	ds	1
   415  0000BA                     ??_lcd_resetSequence:
   416  0000BA                     lcd_wrCom@commande:
   417                           	opt callstack 0
   418  0000BA                     lcd_wrData@caractere:
   419                           	opt callstack 0
   420  0000BA                     ___wmul@multiplicand:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x2
   424  0000BA                     	ds	1
   425  0000BB                     ??_lcd_initCGRam:
   426  0000BB                     lcd_gotoXY@y:
   427                           	opt callstack 0
   428  0000BB                     lcd_ecritChar@car:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0x3
   432  0000BB                     	ds	1
   433  0000BC                     lcd_gotoXY@x:
   434                           	opt callstack 0
   435  0000BC                     lcd_ecritChar@posRam:
   436                           	opt callstack 0
   437  0000BC                     ___wmul@product:
   438                           	opt callstack 0
   439  0000BC                     ___lmul@multiplicand:
   440                           	opt callstack 0
   441                           
   442                           ; 4 bytes @ 0x4
   443  0000BC                     	ds	1
   444  0000BD                     lcd_initCGRam@i:
   445                           	opt callstack 0
   446  0000BD                     deplace@x:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x5
   450  0000BD                     	ds	1
   451  0000BE                     ??_initTabVue:
   452  0000BE                     ?_strcpy:
   453                           	opt callstack 0
   454  0000BE                     lcd_initCGRam@j:
   455                           	opt callstack 0
   456  0000BE                     calculToucheCombien@ligne:
   457                           	opt callstack 0
   458  0000BE                     lcd_putMessage@chaine:
   459                           	opt callstack 0
   460  0000BE                     strcpy@to:
   461                           	opt callstack 0
   462                           
   463                           ; 2 bytes @ 0x6
   464  0000BE                     	ds	1
   465  0000BF                     deplace@y:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x7
   469  0000BF                     	ds	1
   470  0000C0                     lcd_putMessage@j:
   471                           	opt callstack 0
   472  0000C0                     initTabVue@j:
   473                           	opt callstack 0
   474  0000C0                     calculToucheCombien@colonne:
   475                           	opt callstack 0
   476  0000C0                     strcpy@from:
   477                           	opt callstack 0
   478  0000C0                     ___lmul@product:
   479                           	opt callstack 0
   480                           
   481                           ; 4 bytes @ 0x8
   482  0000C0                     	ds	1
   483  0000C1                     ??_deplace:
   484  0000C1                     enleveTuilesAutour@x:
   485                           	opt callstack 0
   486  0000C1                     afficheTabVue@i:
   487                           	opt callstack 0
   488  0000C1                     afficheTabMines@i:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x9
   492  0000C1                     	ds	1
   493  0000C2                     ??_calculToucheCombien:
   494  0000C2                     demine@y:
   495                           	opt callstack 0
   496  0000C2                     initTabVue@i:
   497                           	opt callstack 0
   498  0000C2                     strcpy@cp:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0xA
   502  0000C2                     	ds	1
   503  0000C3                     ??_demine:
   504                           
   505                           ; 1 bytes @ 0xB
   506  0000C3                     	ds	1
   507  0000C4                     ?_rand:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0xC
   511  0000C4                     	ds	2
   512  0000C6                     ?___awmod:
   513                           	opt callstack 0
   514  0000C6                     ___awmod@dividend:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0xE
   518  0000C6                     	ds	1
   519  0000C7                     calculToucheCombien@countMine:
   520                           	opt callstack 0
   521  0000C7                     demine@x:
   522                           	opt callstack 0
   523                           
   524                           ; 1 bytes @ 0xF
   525  0000C7                     	ds	1
   526  0000C8                     ??_metToucheCombien:
   527  0000C8                     ___awmod@divisor:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x10
   531  0000C8                     	ds	2
   532  0000CA                     ___awmod@counter:
   533                           	opt callstack 0
   534                           
   535                           ; 1 bytes @ 0x12
   536  0000CA                     	ds	1
   537  0000CB                     metToucheCombien@i:
   538                           	opt callstack 0
   539  0000CB                     ___awmod@sign:
   540                           	opt callstack 0
   541                           
   542                           ; 1 bytes @ 0x13
   543  0000CB                     	ds	1
   544  0000CC                     metToucheCombien@j:
   545                           	opt callstack 0
   546  0000CC                     rempliMines@nb:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x14
   550  0000CC                     	ds	2
   551  0000CE                     ??_rempliMines:
   552                           
   553                           ; 1 bytes @ 0x16
   554  0000CE                     	ds	3
   555  0000D1                     rempliMines@i_490:
   556                           	opt callstack 0
   557                           
   558                           ; 1 bytes @ 0x19
   559  0000D1                     	ds	1
   560  0000D2                     rempliMines@x:
   561                           	opt callstack 0
   562                           
   563                           ; 1 bytes @ 0x1A
   564  0000D2                     	ds	1
   565  0000D3                     rempliMines@y:
   566                           	opt callstack 0
   567                           
   568                           ; 1 bytes @ 0x1B
   569  0000D3                     	ds	1
   570  0000D4                     rempliMines@i:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x1C
   574  0000D4                     	ds	2
   575  0000D6                     ??_main:
   576                           
   577                           ; 1 bytes @ 0x1E
   578  0000D6                     	ds	1
   579  0000D7                     main@lose:
   580                           	opt callstack 0
   581                           
   582                           ; 1 bytes @ 0x1F
   583  0000D7                     	ds	1
   584  0000D8                     main@posY:
   585                           	opt callstack 0
   586                           
   587                           ; 1 bytes @ 0x20
   588  0000D8                     	ds	1
   589  0000D9                     main@posX:
   590                           	opt callstack 0
   591                           
   592                           ; 1 bytes @ 0x21
   593  0000D9                     	ds	1
   594                           
   595 ;;
   596 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   597 ;;
   598 ;; *************** function _main *****************
   599 ;; Defined at:
   600 ;;		line 65 in file "main.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;  posX            1   33[BANK0 ] unsigned char 
   605 ;;  posY            1   32[BANK0 ] unsigned char 
   606 ;;  lose            1   31[BANK0 ] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   616 ;;      Params:         0       0       0       0       0       0       0
   617 ;;      Locals:         0       3       0       0       0       0       0
   618 ;;      Temps:          0       1       0       0       0       0       0
   619 ;;      Totals:         0       4       0       0       0       0       0
   620 ;;Total ram usage:        4 bytes
   621 ;; Hardware stack levels required when called:    6
   622 ;; This function calls:
   623 ;;		_afficheTabMines
   624 ;;		_afficheTabVue
   625 ;;		_demine
   626 ;;		_deplace
   627 ;;		_initTabVue
   628 ;;		_initialisation
   629 ;;		_lcd_init
   630 ;;		_metToucheCombien
   631 ;;		_rempliMines
   632 ;; This function is called by:
   633 ;;		Startup code after reset
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text0
   638  001686                     __ptext0:
   639                           	opt callstack 0
   640  001686                     _main:
   641                           	opt callstack 25
   642  001686                     
   643                           ;main.c: 67: char posY=1;
   644  001686  0E01               	movlw	1
   645  001688  0100               	movlb	0	; force () banked
   646  00168A  6FD8               	movwf	main@posY& (0+255),b
   647                           
   648                           ;main.c: 68: char posX=1;
   649  00168C  0E01               	movlw	1
   650  00168E  0100               	movlb	0	; force () banked
   651  001690  6FD9               	movwf	main@posX& (0+255),b
   652                           
   653                           ;main.c: 69: bool lose=1;
   654  001692  0E01               	movlw	1
   655  001694  0100               	movlb	0	; force () banked
   656  001696  6FD7               	movwf	main@lose& (0+255),b
   657  001698                     
   658                           ; BSR set to: 0
   659                           ;main.c: 71: initialisation();
   660  001698  ECEC  F00E         	call	_initialisation	;wreg free
   661  00169C                     
   662                           ;main.c: 72: lcd_init();
   663  00169C  ECA7  F00F         	call	_lcd_init	;wreg free
   664  0016A0                     
   665                           ;main.c: 73: initTabVue();
   666  0016A0  ECBA  F00A         	call	_initTabVue	;wreg free
   667  0016A4                     
   668                           ;main.c: 74: afficheTabVue();
   669  0016A4  ECB3  F00C         	call	_afficheTabVue	;wreg free
   670  0016A8                     
   671                           ;main.c: 75: rempliMines(5);
   672  0016A8  0E00               	movlw	0
   673  0016AA  0100               	movlb	0	; force () banked
   674  0016AC  6FCD               	movwf	(rempliMines@nb+1)& (0+255),b
   675  0016AE  0E05               	movlw	5
   676  0016B0  6FCC               	movwf	rempliMines@nb& (0+255),b
   677  0016B2  ECB9  F008         	call	_rempliMines	;wreg free
   678  0016B6                     
   679                           ;main.c: 76: metToucheCombien();
   680  0016B6  EC6C  F009         	call	_metToucheCombien	;wreg free
   681  0016BA                     l2364:
   682                           
   683                           ;main.c: 87: {;main.c: 88: deplace(&posX,&posY);
   684  0016BA  0ED9               	movlw	low main@posX
   685  0016BC  0100               	movlb	0	; force () banked
   686  0016BE  6FBD               	movwf	deplace@x& (0+255),b
   687  0016C0  0E00               	movlw	high main@posX
   688  0016C2  6FBE               	movwf	(deplace@x+1)& (0+255),b
   689  0016C4  0ED8               	movlw	low main@posY
   690  0016C6  0100               	movlb	0	; force () banked
   691  0016C8  6FBF               	movwf	deplace@y& (0+255),b
   692  0016CA  0E00               	movlw	high main@posY
   693  0016CC  6FC0               	movwf	(deplace@y+1)& (0+255),b
   694  0016CE  EC1B  F00A         	call	_deplace	;wreg free
   695  0016D2                     
   696                           ;main.c: 89: if(PORTBbits.RB1==0)
   697  0016D2  B281               	btfsc	129,1,c	;volatile
   698  0016D4  EF6E  F00B         	goto	u1691
   699  0016D8  EF70  F00B         	goto	u1690
   700  0016DC                     u1691:
   701  0016DC  EFA2  F00B         	goto	l2384
   702  0016E0                     u1690:
   703  0016E0                     l77:
   704  0016E0  A281               	btfss	129,1,c	;volatile
   705  0016E2  EF75  F00B         	goto	u1701
   706  0016E6  EF77  F00B         	goto	u1700
   707  0016EA                     u1701:
   708  0016EA  EF70  F00B         	goto	l77
   709  0016EE                     u1700:
   710  0016EE                     
   711                           ;main.c: 92: lose = demine(posX-1,posY-1);
   712  0016EE  0100               	movlb	0	; force () banked
   713  0016F0  05D8               	decf	main@posY& (0+255),w,b
   714  0016F2  0100               	movlb	0	; force () banked
   715  0016F4  6FC2               	movwf	demine@y& (0+255),b
   716  0016F6  0100               	movlb	0	; force () banked
   717  0016F8  05D9               	decf	main@posX& (0+255),w,b
   718  0016FA  ECAF  F00B         	call	_demine
   719  0016FE  0100               	movlb	0	; force () banked
   720  001700  6FD7               	movwf	main@lose& (0+255),b
   721  001702                     
   722                           ; BSR set to: 0
   723                           ;main.c: 93: if(lose == 0)
   724  001702  0100               	movlb	0	; force () banked
   725  001704  51D7               	movf	main@lose& (0+255),w,b
   726  001706  A4D8               	btfss	status,2,c
   727  001708  EF88  F00B         	goto	u1711
   728  00170C  EF8A  F00B         	goto	u1710
   729  001710                     u1711:
   730  001710  EFA0  F00B         	goto	l2382
   731  001714                     u1710:
   732  001714                     
   733                           ; BSR set to: 0
   734                           ;main.c: 94: {;main.c: 95: afficheTabMines();
   735  001714  ECFA  F00C         	call	_afficheTabMines	;wreg free
   736  001718                     l81:
   737  001718  B281               	btfsc	129,1,c	;volatile
   738  00171A  EF91  F00B         	goto	u1721
   739  00171E  EF93  F00B         	goto	u1720
   740  001722                     u1721:
   741  001722  EF8C  F00B         	goto	l81
   742  001726                     u1720:
   743  001726                     
   744                           ;main.c: 97: initTabVue();
   745  001726  ECBA  F00A         	call	_initTabVue	;wreg free
   746                           
   747                           ;main.c: 98: afficheTabVue();
   748  00172A  ECB3  F00C         	call	_afficheTabVue	;wreg free
   749  00172E                     
   750                           ;main.c: 99: rempliMines(5);
   751  00172E  0E00               	movlw	0
   752  001730  0100               	movlb	0	; force () banked
   753  001732  6FCD               	movwf	(rempliMines@nb+1)& (0+255),b
   754  001734  0E05               	movlw	5
   755  001736  6FCC               	movwf	rempliMines@nb& (0+255),b
   756  001738  ECB9  F008         	call	_rempliMines	;wreg free
   757  00173C                     
   758                           ;main.c: 100: metToucheCombien();
   759  00173C  EC6C  F009         	call	_metToucheCombien	;wreg free
   760  001740                     l2382:
   761                           
   762                           ;main.c: 101: };main.c: 102: afficheTabVue();
   763  001740  ECB3  F00C         	call	_afficheTabVue	;wreg free
   764  001744                     l2384:
   765                           
   766                           ;main.c: 103: };main.c: 104: _delay((unsigned long)((100)*(1000000/4000.0)));
   767  001744  0E21               	movlw	33
   768  001746  0100               	movlb	0	; force () banked
   769  001748  6FD6               	movwf	??_main& (0+255),b
   770  00174A  0E76               	movlw	118
   771  00174C                     u1737:
   772  00174C  2EE8               	decfsz	wreg,f,c
   773  00174E  D7FE               	bra	u1737
   774  001750  2FD6               	decfsz	??_main& (0+255),f,b
   775  001752  D7FC               	bra	u1737
   776  001754  F000               	nop	
   777  001756  EF5D  F00B         	goto	l2364
   778  00175A  EF00  F000         	goto	start
   779  00175E                     __end_of_main:
   780                           	opt callstack 0
   781                           
   782 ;; *************** function _rempliMines *****************
   783 ;; Defined at:
   784 ;;		line 160 in file "main.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  nb              2   20[BANK0 ] int 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  i               1   25[BANK0 ] unsigned char 
   789 ;;  i               2   28[BANK0 ] int 
   790 ;;  y               1   27[BANK0 ] unsigned char 
   791 ;;  x               1   26[BANK0 ] unsigned char 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   801 ;;      Params:         0       2       0       0       0       0       0
   802 ;;      Locals:         0       5       0       0       0       0       0
   803 ;;      Temps:          0       3       0       0       0       0       0
   804 ;;      Totals:         0      10       0       0       0       0       0
   805 ;;Total ram usage:       10 bytes
   806 ;; Hardware stack levels used:    1
   807 ;; Hardware stack levels required when called:    2
   808 ;; This function calls:
   809 ;;		___awmod
   810 ;;		___wmul
   811 ;;		_rand
   812 ;;		_strcpy
   813 ;; This function is called by:
   814 ;;		_main
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text1
   819  001172                     __ptext1:
   820                           	opt callstack 0
   821  001172                     _rempliMines:
   822                           	opt callstack 28
   823  001172                     
   824                           ;main.c: 162: char x;;main.c: 163: char y;;main.c: 165: for(int i=0;i<4;i++)
   825  001172  0E00               	movlw	0
   826  001174  0100               	movlb	0	; force () banked
   827  001176  6FD5               	movwf	(rempliMines@i+1)& (0+255),b
   828  001178  0E00               	movlw	0
   829  00117A  6FD4               	movwf	rempliMines@i& (0+255),b
   830  00117C                     
   831                           ; BSR set to: 0
   832  00117C  0100               	movlb	0	; force () banked
   833  00117E  BFD5               	btfsc	(rempliMines@i+1)& (0+255),7,b
   834  001180  EFCB  F008         	goto	u1471
   835  001184  51D5               	movf	(rempliMines@i+1)& (0+255),w,b
   836  001186  E109               	bnz	u1470
   837  001188  0E04               	movlw	4
   838  00118A  5DD4               	subwf	rempliMines@i& (0+255),w,b
   839  00118C  A0D8               	btfss	status,0,c
   840  00118E  EFCB  F008         	goto	u1471
   841  001192  EFCD  F008         	goto	u1470
   842  001196                     u1471:
   843  001196  EFCF  F008         	goto	l2234
   844  00119A                     u1470:
   845  00119A  EFFD  F008         	goto	l2240
   846  00119E                     l2234:
   847                           
   848                           ; BSR set to: 0
   849                           ;main.c: 166: {;main.c: 167: strcpy(m_tabMines[i],"                    ");
   850  00119E  C0D4  F0B8         	movff	rempliMines@i,___wmul@multiplier
   851  0011A2  C0D5  F0B9         	movff	rempliMines@i+1,___wmul@multiplier+1
   852  0011A6  0E00               	movlw	0
   853  0011A8  0100               	movlb	0	; force () banked
   854  0011AA  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
   855  0011AC  0E15               	movlw	21
   856  0011AE  6FBA               	movwf	___wmul@multiplicand& (0+255),b
   857  0011B0  ECBB  F00F         	call	___wmul	;wreg free
   858  0011B4  0E64               	movlw	low _m_tabMines
   859  0011B6  0100               	movlb	0	; force () banked
   860  0011B8  25B8               	addwf	?___wmul& (0+255),w,b
   861  0011BA  0100               	movlb	0	; force () banked
   862  0011BC  6FBE               	movwf	strcpy@to& (0+255),b
   863  0011BE  0E00               	movlw	high _m_tabMines
   864  0011C0  0100               	movlb	0	; force () banked
   865  0011C2  21B9               	addwfc	(?___wmul+1)& (0+255),w,b
   866  0011C4  0100               	movlb	0	; force () banked
   867  0011C6  6FBF               	movwf	(strcpy@to+1)& (0+255),b
   868  0011C8  0E01               	movlw	low STR_1
   869  0011CA  0100               	movlb	0	; force () banked
   870  0011CC  6FC0               	movwf	strcpy@from& (0+255),b
   871  0011CE  0E06               	movlw	high STR_1
   872  0011D0  6FC1               	movwf	(strcpy@from+1)& (0+255),b
   873  0011D2  EC12  F00F         	call	_strcpy	;wreg free
   874  0011D6  0100               	movlb	0	; force () banked
   875  0011D8  4BD4               	infsnz	rempliMines@i& (0+255),f,b
   876  0011DA  2BD5               	incf	(rempliMines@i+1)& (0+255),f,b
   877  0011DC                     
   878                           ; BSR set to: 0
   879  0011DC  0100               	movlb	0	; force () banked
   880  0011DE  BFD5               	btfsc	(rempliMines@i+1)& (0+255),7,b
   881  0011E0  EFFB  F008         	goto	u1481
   882  0011E4  51D5               	movf	(rempliMines@i+1)& (0+255),w,b
   883  0011E6  E109               	bnz	u1480
   884  0011E8  0E04               	movlw	4
   885  0011EA  5DD4               	subwf	rempliMines@i& (0+255),w,b
   886  0011EC  A0D8               	btfss	status,0,c
   887  0011EE  EFFB  F008         	goto	u1481
   888  0011F2  EFFD  F008         	goto	u1480
   889  0011F6                     u1481:
   890  0011F6  EFCF  F008         	goto	l2234
   891  0011FA                     u1480:
   892  0011FA                     l2240:
   893                           
   894                           ; BSR set to: 0
   895                           ;main.c: 168: };main.c: 169: for(char i=0;i<nb;i++)
   896  0011FA  0E00               	movlw	0
   897  0011FC  0100               	movlb	0	; force () banked
   898  0011FE  6FD1               	movwf	rempliMines@i_490& (0+255),b
   899  001200  EF53  F009         	goto	l2250
   900  001204                     l2242:
   901                           
   902                           ; BSR set to: 0
   903                           ;main.c: 172: {;main.c: 173: y=rand()%4;
   904  001204  EC47  F00E         	call	_rand	;wreg free
   905  001208  0100               	movlb	0	; force () banked
   906  00120A  51C4               	movf	?_rand& (0+255),w,b
   907  00120C  0B03               	andlw	3
   908  00120E  0100               	movlb	0	; force () banked
   909  001210  6FD3               	movwf	rempliMines@y& (0+255),b
   910                           
   911                           ;main.c: 174: x=rand()%20;
   912  001212  EC47  F00E         	call	_rand	;wreg free
   913  001216  C0C4  F0C6         	movff	?_rand,___awmod@dividend
   914  00121A  C0C5  F0C7         	movff	?_rand+1,___awmod@dividend+1
   915  00121E  0E00               	movlw	0
   916  001220  0100               	movlb	0	; force () banked
   917  001222  6FC9               	movwf	(___awmod@divisor+1)& (0+255),b
   918  001224  0E14               	movlw	20
   919  001226  6FC8               	movwf	___awmod@divisor& (0+255),b
   920  001228  EC09  F00C         	call	___awmod	;wreg free
   921  00122C  0100               	movlb	0	; force () banked
   922  00122E  51C6               	movf	?___awmod& (0+255),w,b
   923  001230  0100               	movlb	0	; force () banked
   924  001232  6FD2               	movwf	rempliMines@x& (0+255),b
   925  001234                     
   926                           ; BSR set to: 0
   927                           ;main.c: 175: }while(m_tabMines[y][x]!=' ');
   928  001234  0100               	movlb	0	; force () banked
   929  001236  51D3               	movf	rempliMines@y& (0+255),w,b
   930  001238  0D15               	mullw	21
   931  00123A  0E64               	movlw	low _m_tabMines
   932  00123C  0100               	movlb	0	; force () banked
   933  00123E  6FCE               	movwf	??_rempliMines& (0+255),b
   934  001240  0E00               	movlw	high _m_tabMines
   935  001242  6FCF               	movwf	(??_rempliMines+1)& (0+255),b
   936  001244  50F3               	movf	243,w,c
   937  001246  27CE               	addwf	??_rempliMines& (0+255),f,b
   938  001248  50F4               	movf	244,w,c
   939  00124A  23CF               	addwfc	(??_rempliMines+1)& (0+255),f,b
   940  00124C  0100               	movlb	0	; force () banked
   941  00124E  51D2               	movf	rempliMines@x& (0+255),w,b
   942  001250  0100               	movlb	0	; force () banked
   943  001252  25CE               	addwf	??_rempliMines& (0+255),w,b
   944  001254  6ED9               	movwf	fsr2l,c
   945  001256  0100               	movlb	0	; force () banked
   946  001258  0E00               	movlw	0
   947  00125A  0100               	movlb	0	; force () banked
   948  00125C  21CF               	addwfc	(??_rempliMines+1)& (0+255),w,b
   949  00125E  6EDA               	movwf	fsr2h,c
   950  001260  0E20               	movlw	32
   951  001262  18DE               	xorwf	postinc2,w,c
   952  001264  A4D8               	btfss	status,2,c
   953  001266  EF37  F009         	goto	u1491
   954  00126A  EF39  F009         	goto	u1490
   955  00126E                     u1491:
   956  00126E  EF02  F009         	goto	l2242
   957  001272                     u1490:
   958  001272                     
   959                           ; BSR set to: 0
   960                           ;main.c: 176: m_tabMines[y][x]=2;
   961  001272  0100               	movlb	0	; force () banked
   962  001274  51D3               	movf	rempliMines@y& (0+255),w,b
   963  001276  0D15               	mullw	21
   964  001278  0E64               	movlw	low _m_tabMines
   965  00127A  0100               	movlb	0	; force () banked
   966  00127C  6FCE               	movwf	??_rempliMines& (0+255),b
   967  00127E  0E00               	movlw	high _m_tabMines
   968  001280  6FCF               	movwf	(??_rempliMines+1)& (0+255),b
   969  001282  50F3               	movf	243,w,c
   970  001284  27CE               	addwf	??_rempliMines& (0+255),f,b
   971  001286  50F4               	movf	244,w,c
   972  001288  23CF               	addwfc	(??_rempliMines+1)& (0+255),f,b
   973  00128A  0100               	movlb	0	; force () banked
   974  00128C  51D2               	movf	rempliMines@x& (0+255),w,b
   975  00128E  0100               	movlb	0	; force () banked
   976  001290  25CE               	addwf	??_rempliMines& (0+255),w,b
   977  001292  6ED9               	movwf	fsr2l,c
   978  001294  0100               	movlb	0	; force () banked
   979  001296  0E00               	movlw	0
   980  001298  0100               	movlb	0	; force () banked
   981  00129A  21CF               	addwfc	(??_rempliMines+1)& (0+255),w,b
   982  00129C  6EDA               	movwf	fsr2h,c
   983  00129E  0E02               	movlw	2
   984  0012A0  6EDF               	movwf	indf2,c
   985  0012A2                     
   986                           ; BSR set to: 0
   987  0012A2  0100               	movlb	0	; force () banked
   988  0012A4  2BD1               	incf	rempliMines@i_490& (0+255),f,b
   989  0012A6                     l2250:
   990                           
   991                           ; BSR set to: 0
   992  0012A6  0100               	movlb	0	; force () banked
   993  0012A8  51D1               	movf	rempliMines@i_490& (0+255),w,b
   994  0012AA  0100               	movlb	0	; force () banked
   995  0012AC  6FCE               	movwf	??_rempliMines& (0+255),b
   996  0012AE  6BCF               	clrf	(??_rempliMines+1)& (0+255),b
   997  0012B0  0100               	movlb	0	; force () banked
   998  0012B2  51CC               	movf	rempliMines@nb& (0+255),w,b
   999  0012B4  0100               	movlb	0	; force () banked
  1000  0012B6  5DCE               	subwf	??_rempliMines& (0+255),w,b
  1001  0012B8  51CF               	movf	(??_rempliMines+1)& (0+255),w,b
  1002  0012BA  0A80               	xorlw	128
  1003  0012BC  6FD0               	movwf	(??_rempliMines+2)& (0+255),b
  1004  0012BE  0100               	movlb	0	; force () banked
  1005  0012C0  51CD               	movf	(rempliMines@nb+1)& (0+255),w,b
  1006  0012C2  0A80               	xorlw	128
  1007  0012C4  0100               	movlb	0	; force () banked
  1008  0012C6  59D0               	subwfb	(??_rempliMines+2)& (0+255),w,b
  1009  0012C8  A0D8               	btfss	status,0,c
  1010  0012CA  EF69  F009         	goto	u1501
  1011  0012CE  EF6B  F009         	goto	u1500
  1012  0012D2                     u1501:
  1013  0012D2  EF02  F009         	goto	l2242
  1014  0012D6                     u1500:
  1015  0012D6                     
  1016                           ; BSR set to: 0
  1017  0012D6  0012               	return		;funcret
  1018  0012D8                     __end_of_rempliMines:
  1019                           	opt callstack 0
  1020                           
  1021 ;; *************** function _strcpy *****************
  1022 ;; Defined at:
  1023 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  to              2    6[BANK0 ] PTR unsigned char 
  1026 ;;		 -> m_tabMines(84), 
  1027 ;;  from            2    8[BANK0 ] PTR const unsigned char 
  1028 ;;		 -> STR_1(21), 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  cp              2   10[BANK0 ] PTR unsigned char 
  1031 ;;		 -> m_tabMines(84), 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  2    6[BANK0 ] PTR unsigned char 
  1034 ;; Registers used:
  1035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1041 ;;      Params:         0       4       0       0       0       0       0
  1042 ;;      Locals:         0       2       0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0
  1044 ;;      Totals:         0       6       0       0       0       0       0
  1045 ;;Total ram usage:        6 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; This function calls:
  1048 ;;		Nothing
  1049 ;; This function is called by:
  1050 ;;		_rempliMines
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text2
  1055  001E24                     __ptext2:
  1056                           	opt callstack 0
  1057  001E24                     _strcpy:
  1058                           	opt callstack 29
  1059  001E24  C0BE  F0C2         	movff	strcpy@to,strcpy@cp
  1060  001E28  C0BF  F0C3         	movff	strcpy@to+1,strcpy@cp+1
  1061  001E2C  EF1D  F00F         	goto	l1930
  1062  001E30                     l1928:
  1063  001E30  0100               	movlb	0	; () banked
  1064  001E32  4BC2               	infsnz	strcpy@cp& (0+255),f,b
  1065  001E34  2BC3               	incf	(strcpy@cp+1)& (0+255),f,b
  1066  001E36  4BC0               	infsnz	strcpy@from& (0+255),f,b
  1067  001E38  2BC1               	incf	(strcpy@from+1)& (0+255),f,b
  1068  001E3A                     l1930:
  1069  001E3A  C0C0  FFF6         	movff	strcpy@from,tblptrl
  1070  001E3E  C0C1  FFF7         	movff	strcpy@from+1,tblptrh
  1071  001E42                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1072  001E42  6AF8               	clrf	tblptru,c
  1073  001E44                     	endif
  1074  001E44                     	if	0	;tblptru may be non-zero
  1075  001E44                     	endif
  1076  001E44  C0C2  FFD9         	movff	strcpy@cp,fsr2l
  1077  001E48  C0C3  FFDA         	movff	strcpy@cp+1,fsr2h
  1078  001E4C  0008               	tblrd		*
  1079  001E4E  CFF5 FFDF          	movff	tablat,indf2
  1080  001E52  50DF               	movf	indf2,w,c
  1081  001E54  A4D8               	btfss	status,2,c
  1082  001E56  EF2F  F00F         	goto	u961
  1083  001E5A  EF31  F00F         	goto	u960
  1084  001E5E                     u961:
  1085  001E5E  EF18  F00F         	goto	l1928
  1086  001E62                     u960:
  1087  001E62  C0BE  F0BE         	movff	strcpy@to,?_strcpy
  1088  001E66  C0BF  F0BF         	movff	strcpy@to+1,?_strcpy+1
  1089  001E6A  0012               	return		;funcret
  1090  001E6C                     __end_of_strcpy:
  1091                           	opt callstack 0
  1092                           
  1093 ;; *************** function _rand *****************
  1094 ;; Defined at:
  1095 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  2   12[BANK0 ] int 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1109 ;;      Params:         0       2       0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0
  1112 ;;      Totals:         0       2       0       0       0       0       0
  1113 ;;Total ram usage:        2 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    1
  1116 ;; This function calls:
  1117 ;;		___lmul
  1118 ;; This function is called by:
  1119 ;;		_rempliMines
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text3
  1124  001C8E                     __ptext3:
  1125                           	opt callstack 0
  1126  001C8E                     _rand:
  1127                           	opt callstack 28
  1128  001C8E  C060  F0B8         	movff	_randx,___lmul@multiplier
  1129  001C92  C061  F0B9         	movff	_randx+1,___lmul@multiplier+1
  1130  001C96  C062  F0BA         	movff	_randx+2,___lmul@multiplier+2
  1131  001C9A  C063  F0BB         	movff	_randx+3,___lmul@multiplier+3
  1132  001C9E  0E6D               	movlw	109
  1133  001CA0  0100               	movlb	0	; () banked
  1134  001CA2  6FBC               	movwf	___lmul@multiplicand& (0+255),b
  1135  001CA4  0E4E               	movlw	78
  1136  001CA6  6FBD               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1137  001CA8  0EC6               	movlw	198
  1138  001CAA  6FBE               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1139  001CAC  0E41               	movlw	65
  1140  001CAE  6FBF               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1141  001CB0  EC7A  F00D         	call	___lmul	;wreg free
  1142  001CB4  C0B8  F060         	movff	?___lmul,_randx
  1143  001CB8  C0B9  F061         	movff	?___lmul+1,_randx+1
  1144  001CBC  C0BA  F062         	movff	?___lmul+2,_randx+2
  1145  001CC0  C0BB  F063         	movff	?___lmul+3,_randx+3
  1146  001CC4  0E39               	movlw	57
  1147  001CC6  0100               	movlb	0	; () banked
  1148  001CC8  2760               	addwf	_randx& (0+255),f,b
  1149  001CCA  0E30               	movlw	48
  1150  001CCC  2361               	addwfc	(_randx+1)& (0+255),f,b
  1151  001CCE  0E00               	movlw	0
  1152  001CD0  2362               	addwfc	(_randx+2)& (0+255),f,b
  1153  001CD2  0E00               	movlw	0
  1154  001CD4  2363               	addwfc	(_randx+3)& (0+255),f,b
  1155  001CD6                     
  1156                           ; BSR set to: 0
  1157  001CD6  0EFF               	movlw	255
  1158  001CD8  1562               	andwf	(_randx+2)& (0+255),w,b
  1159  001CDA  6FC4               	movwf	?_rand& (0+255),b
  1160  001CDC  0E7F               	movlw	127
  1161  001CDE  1563               	andwf	(_randx+3)& (0+255),w,b
  1162  001CE0  6FC5               	movwf	(?_rand+1)& (0+255),b
  1163  001CE2                     
  1164                           ; BSR set to: 0
  1165  001CE2  0012               	return		;funcret
  1166  001CE4                     __end_of_rand:
  1167                           	opt callstack 0
  1168                           
  1169 ;; *************** function ___lmul *****************
  1170 ;; Defined at:
  1171 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1174 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  product         4    8[BANK0 ] unsigned long 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  4    0[BANK0 ] unsigned long 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1186 ;;      Params:         0       8       0       0       0       0       0
  1187 ;;      Locals:         0       4       0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0
  1189 ;;      Totals:         0      12       0       0       0       0       0
  1190 ;;Total ram usage:       12 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; This function calls:
  1193 ;;		Nothing
  1194 ;; This function is called by:
  1195 ;;		_rand
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text4
  1200  001AF4                     __ptext4:
  1201                           	opt callstack 0
  1202  001AF4                     ___lmul:
  1203                           	opt callstack 28
  1204  001AF4  0E00               	movlw	0
  1205  001AF6  0100               	movlb	0	; () banked
  1206  001AF8  6FC0               	movwf	___lmul@product& (0+255),b
  1207  001AFA  0E00               	movlw	0
  1208  001AFC  6FC1               	movwf	(___lmul@product+1)& (0+255),b
  1209  001AFE  0E00               	movlw	0
  1210  001B00  6FC2               	movwf	(___lmul@product+2)& (0+255),b
  1211  001B02  0E00               	movlw	0
  1212  001B04  6FC3               	movwf	(___lmul@product+3)& (0+255),b
  1213  001B06                     l1896:
  1214                           
  1215                           ; BSR set to: 0
  1216  001B06  A1B8               	btfss	___lmul@multiplier& (0+255),0,b
  1217  001B08  EF88  F00D         	goto	u931
  1218  001B0C  EF8A  F00D         	goto	u930
  1219  001B10                     u931:
  1220  001B10  EF92  F00D         	goto	l1900
  1221  001B14                     u930:
  1222  001B14                     
  1223                           ; BSR set to: 0
  1224  001B14  51BC               	movf	___lmul@multiplicand& (0+255),w,b
  1225  001B16  27C0               	addwf	___lmul@product& (0+255),f,b
  1226  001B18  51BD               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1227  001B1A  23C1               	addwfc	(___lmul@product+1)& (0+255),f,b
  1228  001B1C  51BE               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1229  001B1E  23C2               	addwfc	(___lmul@product+2)& (0+255),f,b
  1230  001B20  51BF               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1231  001B22  23C3               	addwfc	(___lmul@product+3)& (0+255),f,b
  1232  001B24                     l1900:
  1233                           
  1234                           ; BSR set to: 0
  1235  001B24  90D8               	bcf	status,0,c
  1236  001B26  37BC               	rlcf	___lmul@multiplicand& (0+255),f,b
  1237  001B28  37BD               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1238  001B2A  37BE               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1239  001B2C  37BF               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1240  001B2E                     
  1241                           ; BSR set to: 0
  1242  001B2E  90D8               	bcf	status,0,c
  1243  001B30  33BB               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1244  001B32  33BA               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1245  001B34  33B9               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1246  001B36  33B8               	rrcf	___lmul@multiplier& (0+255),f,b
  1247  001B38  51B8               	movf	___lmul@multiplier& (0+255),w,b
  1248  001B3A  11B9               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1249  001B3C  11BA               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1250  001B3E  11BB               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1251  001B40  A4D8               	btfss	status,2,c
  1252  001B42  EFA5  F00D         	goto	u941
  1253  001B46  EFA7  F00D         	goto	u940
  1254  001B4A                     u941:
  1255  001B4A  EF83  F00D         	goto	l1896
  1256  001B4E                     u940:
  1257  001B4E                     
  1258                           ; BSR set to: 0
  1259  001B4E  C0C0  F0B8         	movff	___lmul@product,?___lmul
  1260  001B52  C0C1  F0B9         	movff	___lmul@product+1,?___lmul+1
  1261  001B56  C0C2  F0BA         	movff	___lmul@product+2,?___lmul+2
  1262  001B5A  C0C3  F0BB         	movff	___lmul@product+3,?___lmul+3
  1263  001B5E                     
  1264                           ; BSR set to: 0
  1265  001B5E  0012               	return		;funcret
  1266  001B60                     __end_of___lmul:
  1267                           	opt callstack 0
  1268                           
  1269 ;; *************** function ___awmod *****************
  1270 ;; Defined at:
  1271 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  dividend        2   14[BANK0 ] int 
  1274 ;;  divisor         2   16[BANK0 ] int 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  sign            1   19[BANK0 ] unsigned char 
  1277 ;;  counter         1   18[BANK0 ] unsigned char 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  2   14[BANK0 ] int 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1287 ;;      Params:         0       4       0       0       0       0       0
  1288 ;;      Locals:         0       2       0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0       0       0
  1290 ;;      Totals:         0       6       0       0       0       0       0
  1291 ;;Total ram usage:        6 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_rempliMines
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text5
  1301  001812                     __ptext5:
  1302                           	opt callstack 0
  1303  001812                     ___awmod:
  1304                           	opt callstack 29
  1305  001812  0E00               	movlw	0
  1306  001814  0100               	movlb	0	; () banked
  1307  001816  6FCB               	movwf	___awmod@sign& (0+255),b
  1308  001818                     
  1309                           ; BSR set to: 0
  1310  001818  BFC7               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1311  00181A  EF13  F00C         	goto	u1350
  1312  00181E  EF11  F00C         	goto	u1351
  1313  001822                     u1351:
  1314  001822  EF19  F00C         	goto	l2120
  1315  001826                     u1350:
  1316  001826                     
  1317                           ; BSR set to: 0
  1318  001826  6DC6               	negf	___awmod@dividend& (0+255),b
  1319  001828  1FC7               	comf	(___awmod@dividend+1)& (0+255),f,b
  1320  00182A  B0D8               	btfsc	status,0,c
  1321  00182C  2BC7               	incf	(___awmod@dividend+1)& (0+255),f,b
  1322  00182E                     
  1323                           ; BSR set to: 0
  1324  00182E  0E01               	movlw	1
  1325  001830  6FCB               	movwf	___awmod@sign& (0+255),b
  1326  001832                     l2120:
  1327                           
  1328                           ; BSR set to: 0
  1329  001832  BFC9               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1330  001834  EF20  F00C         	goto	u1360
  1331  001838  EF1E  F00C         	goto	u1361
  1332  00183C                     u1361:
  1333  00183C  EF24  F00C         	goto	l2124
  1334  001840                     u1360:
  1335  001840                     
  1336                           ; BSR set to: 0
  1337  001840  6DC8               	negf	___awmod@divisor& (0+255),b
  1338  001842  1FC9               	comf	(___awmod@divisor+1)& (0+255),f,b
  1339  001844  B0D8               	btfsc	status,0,c
  1340  001846  2BC9               	incf	(___awmod@divisor+1)& (0+255),f,b
  1341  001848                     l2124:
  1342                           
  1343                           ; BSR set to: 0
  1344  001848  51C8               	movf	___awmod@divisor& (0+255),w,b
  1345  00184A  11C9               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1346  00184C  B4D8               	btfsc	status,2,c
  1347  00184E  EF2B  F00C         	goto	u1371
  1348  001852  EF2D  F00C         	goto	u1370
  1349  001856                     u1371:
  1350  001856  EF51  F00C         	goto	l2140
  1351  00185A                     u1370:
  1352  00185A                     
  1353                           ; BSR set to: 0
  1354  00185A  0E01               	movlw	1
  1355  00185C  6FCA               	movwf	___awmod@counter& (0+255),b
  1356  00185E  EF35  F00C         	goto	l2130
  1357  001862                     l2128:
  1358                           
  1359                           ; BSR set to: 0
  1360  001862  90D8               	bcf	status,0,c
  1361  001864  37C8               	rlcf	___awmod@divisor& (0+255),f,b
  1362  001866  37C9               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1363  001868  2BCA               	incf	___awmod@counter& (0+255),f,b
  1364  00186A                     l2130:
  1365                           
  1366                           ; BSR set to: 0
  1367  00186A  AFC9               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1368  00186C  EF3A  F00C         	goto	u1381
  1369  001870  EF3C  F00C         	goto	u1380
  1370  001874                     u1381:
  1371  001874  EF31  F00C         	goto	l2128
  1372  001878                     u1380:
  1373  001878                     l2132:
  1374                           
  1375                           ; BSR set to: 0
  1376  001878  51C8               	movf	___awmod@divisor& (0+255),w,b
  1377  00187A  5DC6               	subwf	___awmod@dividend& (0+255),w,b
  1378  00187C  51C9               	movf	(___awmod@divisor+1)& (0+255),w,b
  1379  00187E  59C7               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1380  001880  A0D8               	btfss	status,0,c
  1381  001882  EF45  F00C         	goto	u1391
  1382  001886  EF47  F00C         	goto	u1390
  1383  00188A                     u1391:
  1384  00188A  EF4B  F00C         	goto	l2136
  1385  00188E                     u1390:
  1386  00188E                     
  1387                           ; BSR set to: 0
  1388  00188E  51C8               	movf	___awmod@divisor& (0+255),w,b
  1389  001890  5FC6               	subwf	___awmod@dividend& (0+255),f,b
  1390  001892  51C9               	movf	(___awmod@divisor+1)& (0+255),w,b
  1391  001894  5BC7               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1392  001896                     l2136:
  1393                           
  1394                           ; BSR set to: 0
  1395  001896  90D8               	bcf	status,0,c
  1396  001898  33C9               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1397  00189A  33C8               	rrcf	___awmod@divisor& (0+255),f,b
  1398  00189C                     
  1399                           ; BSR set to: 0
  1400  00189C  2FCA               	decfsz	___awmod@counter& (0+255),f,b
  1401  00189E  EF3C  F00C         	goto	l2132
  1402  0018A2                     l2140:
  1403                           
  1404                           ; BSR set to: 0
  1405  0018A2  51CB               	movf	___awmod@sign& (0+255),w,b
  1406  0018A4  B4D8               	btfsc	status,2,c
  1407  0018A6  EF57  F00C         	goto	u1401
  1408  0018AA  EF59  F00C         	goto	u1400
  1409  0018AE                     u1401:
  1410  0018AE  EF5D  F00C         	goto	l2144
  1411  0018B2                     u1400:
  1412  0018B2                     
  1413                           ; BSR set to: 0
  1414  0018B2  6DC6               	negf	___awmod@dividend& (0+255),b
  1415  0018B4  1FC7               	comf	(___awmod@dividend+1)& (0+255),f,b
  1416  0018B6  B0D8               	btfsc	status,0,c
  1417  0018B8  2BC7               	incf	(___awmod@dividend+1)& (0+255),f,b
  1418  0018BA                     l2144:
  1419                           
  1420                           ; BSR set to: 0
  1421  0018BA  C0C6  F0C6         	movff	___awmod@dividend,?___awmod
  1422  0018BE  C0C7  F0C7         	movff	___awmod@dividend+1,?___awmod+1
  1423  0018C2                     
  1424                           ; BSR set to: 0
  1425  0018C2  0012               	return		;funcret
  1426  0018C4                     __end_of___awmod:
  1427                           	opt callstack 0
  1428                           
  1429 ;; *************** function _metToucheCombien *****************
  1430 ;; Defined at:
  1431 ;;		line 191 in file "main.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  j               1   20[BANK0 ] unsigned char 
  1436 ;;  i               1   19[BANK0 ] unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1446 ;;      Params:         0       0       0       0       0       0       0
  1447 ;;      Locals:         0       2       0       0       0       0       0
  1448 ;;      Temps:          0       3       0       0       0       0       0
  1449 ;;      Totals:         0       5       0       0       0       0       0
  1450 ;;Total ram usage:        5 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    2
  1453 ;; This function calls:
  1454 ;;		_calculToucheCombien
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text6
  1461  0012D8                     __ptext6:
  1462                           	opt callstack 0
  1463  0012D8                     _metToucheCombien:
  1464                           	opt callstack 28
  1465  0012D8                     
  1466                           ;main.c: 193: for(char i=0;i<4;i++)
  1467  0012D8  0E00               	movlw	0
  1468  0012DA  0100               	movlb	0	; force () banked
  1469  0012DC  6FCB               	movwf	metToucheCombien@i& (0+255),b
  1470  0012DE                     
  1471                           ; BSR set to: 0
  1472  0012DE  0E03               	movlw	3
  1473  0012E0  0100               	movlb	0	; force () banked
  1474  0012E2  65CB               	cpfsgt	metToucheCombien@i& (0+255),b
  1475  0012E4  EF76  F009         	goto	u1511
  1476  0012E8  EF78  F009         	goto	u1510
  1477  0012EC                     u1511:
  1478  0012EC  EF7A  F009         	goto	l2258
  1479  0012F0                     u1510:
  1480  0012F0  EF1A  F00A         	goto	l122
  1481  0012F4                     l2258:
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;main.c: 194: {;main.c: 195: for(char j=0;j<20;j++)
  1485  0012F4  0E00               	movlw	0
  1486  0012F6  0100               	movlb	0	; force () banked
  1487  0012F8  6FCC               	movwf	metToucheCombien@j& (0+255),b
  1488  0012FA                     
  1489                           ; BSR set to: 0
  1490  0012FA  0E13               	movlw	19
  1491  0012FC  0100               	movlb	0	; force () banked
  1492  0012FE  65CC               	cpfsgt	metToucheCombien@j& (0+255),b
  1493  001300  EF84  F009         	goto	u1521
  1494  001304  EF86  F009         	goto	u1520
  1495  001308                     u1521:
  1496  001308  EF88  F009         	goto	l2264
  1497  00130C                     u1520:
  1498  00130C  EF0F  F00A         	goto	l2276
  1499  001310                     l2264:
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;main.c: 196: {;main.c: 197: if(m_tabMines[i][j]!=2)
  1503  001310  0100               	movlb	0	; force () banked
  1504  001312  51CB               	movf	metToucheCombien@i& (0+255),w,b
  1505  001314  0D15               	mullw	21
  1506  001316  0E64               	movlw	low _m_tabMines
  1507  001318  0100               	movlb	0	; force () banked
  1508  00131A  6FC8               	movwf	??_metToucheCombien& (0+255),b
  1509  00131C  0E00               	movlw	high _m_tabMines
  1510  00131E  6FC9               	movwf	(??_metToucheCombien+1)& (0+255),b
  1511  001320  50F3               	movf	243,w,c
  1512  001322  27C8               	addwf	??_metToucheCombien& (0+255),f,b
  1513  001324  50F4               	movf	244,w,c
  1514  001326  23C9               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1515  001328  0100               	movlb	0	; force () banked
  1516  00132A  51CC               	movf	metToucheCombien@j& (0+255),w,b
  1517  00132C  0100               	movlb	0	; force () banked
  1518  00132E  25C8               	addwf	??_metToucheCombien& (0+255),w,b
  1519  001330  6ED9               	movwf	fsr2l,c
  1520  001332  0100               	movlb	0	; force () banked
  1521  001334  0E00               	movlw	0
  1522  001336  0100               	movlb	0	; force () banked
  1523  001338  21C9               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1524  00133A  6EDA               	movwf	fsr2h,c
  1525  00133C  0E02               	movlw	2
  1526  00133E  18DE               	xorwf	postinc2,w,c
  1527  001340  B4D8               	btfsc	status,2,c
  1528  001342  EFA5  F009         	goto	u1531
  1529  001346  EFA7  F009         	goto	u1530
  1530  00134A                     u1531:
  1531  00134A  EF04  F00A         	goto	l2272
  1532  00134E                     u1530:
  1533  00134E                     
  1534                           ; BSR set to: 0
  1535                           ;main.c: 198: {;main.c: 199: m_tabMines[i][j]=(calculToucheCombien(i,j)+0x30);
  1536  00134E  C0CB  F0BE         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1537  001352  0100               	movlb	0	; force () banked
  1538  001354  6BBF               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  1539  001356  C0CC  F0C0         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1540  00135A  0100               	movlb	0	; force () banked
  1541  00135C  6BC1               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  1542  00135E  EC3D  F006         	call	_calculToucheCombien	;wreg free
  1543  001362  0100               	movlb	0	; force () banked
  1544  001364  6FC8               	movwf	??_metToucheCombien& (0+255),b
  1545  001366  0E30               	movlw	48
  1546  001368  27C8               	addwf	??_metToucheCombien& (0+255),f,b
  1547  00136A  0100               	movlb	0	; force () banked
  1548  00136C  51CB               	movf	metToucheCombien@i& (0+255),w,b
  1549  00136E  0D15               	mullw	21
  1550  001370  0E64               	movlw	low _m_tabMines
  1551  001372  0100               	movlb	0	; force () banked
  1552  001374  6FC9               	movwf	(??_metToucheCombien+1)& (0+255),b
  1553  001376  0E00               	movlw	high _m_tabMines
  1554  001378  6FCA               	movwf	(??_metToucheCombien+2)& (0+255),b
  1555  00137A  50F3               	movf	243,w,c
  1556  00137C  27C9               	addwf	(??_metToucheCombien+1)& (0+255),f,b
  1557  00137E  50F4               	movf	244,w,c
  1558  001380  23CA               	addwfc	(??_metToucheCombien+2)& (0+255),f,b
  1559  001382  0100               	movlb	0	; force () banked
  1560  001384  51CC               	movf	metToucheCombien@j& (0+255),w,b
  1561  001386  0100               	movlb	0	; force () banked
  1562  001388  25C9               	addwf	(??_metToucheCombien+1)& (0+255),w,b
  1563  00138A  6ED9               	movwf	fsr2l,c
  1564  00138C  0100               	movlb	0	; force () banked
  1565  00138E  0E00               	movlw	0
  1566  001390  0100               	movlb	0	; force () banked
  1567  001392  21CA               	addwfc	(??_metToucheCombien+2)& (0+255),w,b
  1568  001394  6EDA               	movwf	fsr2h,c
  1569  001396  C0C8  FFDF         	movff	??_metToucheCombien,indf2
  1570  00139A                     
  1571                           ; BSR set to: 0
  1572                           ;main.c: 200: if(m_tabMines[i][j]==0x30)
  1573  00139A  0100               	movlb	0	; force () banked
  1574  00139C  51CB               	movf	metToucheCombien@i& (0+255),w,b
  1575  00139E  0D15               	mullw	21
  1576  0013A0  0E64               	movlw	low _m_tabMines
  1577  0013A2  0100               	movlb	0	; force () banked
  1578  0013A4  6FC8               	movwf	??_metToucheCombien& (0+255),b
  1579  0013A6  0E00               	movlw	high _m_tabMines
  1580  0013A8  6FC9               	movwf	(??_metToucheCombien+1)& (0+255),b
  1581  0013AA  50F3               	movf	243,w,c
  1582  0013AC  27C8               	addwf	??_metToucheCombien& (0+255),f,b
  1583  0013AE  50F4               	movf	244,w,c
  1584  0013B0  23C9               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1585  0013B2  0100               	movlb	0	; force () banked
  1586  0013B4  51CC               	movf	metToucheCombien@j& (0+255),w,b
  1587  0013B6  0100               	movlb	0	; force () banked
  1588  0013B8  25C8               	addwf	??_metToucheCombien& (0+255),w,b
  1589  0013BA  6ED9               	movwf	fsr2l,c
  1590  0013BC  0100               	movlb	0	; force () banked
  1591  0013BE  0E00               	movlw	0
  1592  0013C0  0100               	movlb	0	; force () banked
  1593  0013C2  21C9               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1594  0013C4  6EDA               	movwf	fsr2h,c
  1595  0013C6  0E30               	movlw	48
  1596  0013C8  18DE               	xorwf	postinc2,w,c
  1597  0013CA  A4D8               	btfss	status,2,c
  1598  0013CC  EFEA  F009         	goto	u1541
  1599  0013D0  EFEC  F009         	goto	u1540
  1600  0013D4                     u1541:
  1601  0013D4  EF04  F00A         	goto	l2272
  1602  0013D8                     u1540:
  1603  0013D8                     
  1604                           ; BSR set to: 0
  1605                           ;main.c: 201: {;main.c: 202: m_tabMines[i][j]=' ';
  1606  0013D8  0100               	movlb	0	; force () banked
  1607  0013DA  51CB               	movf	metToucheCombien@i& (0+255),w,b
  1608  0013DC  0D15               	mullw	21
  1609  0013DE  0E64               	movlw	low _m_tabMines
  1610  0013E0  0100               	movlb	0	; force () banked
  1611  0013E2  6FC8               	movwf	??_metToucheCombien& (0+255),b
  1612  0013E4  0E00               	movlw	high _m_tabMines
  1613  0013E6  6FC9               	movwf	(??_metToucheCombien+1)& (0+255),b
  1614  0013E8  50F3               	movf	243,w,c
  1615  0013EA  27C8               	addwf	??_metToucheCombien& (0+255),f,b
  1616  0013EC  50F4               	movf	244,w,c
  1617  0013EE  23C9               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1618  0013F0  0100               	movlb	0	; force () banked
  1619  0013F2  51CC               	movf	metToucheCombien@j& (0+255),w,b
  1620  0013F4  0100               	movlb	0	; force () banked
  1621  0013F6  25C8               	addwf	??_metToucheCombien& (0+255),w,b
  1622  0013F8  6ED9               	movwf	fsr2l,c
  1623  0013FA  0100               	movlb	0	; force () banked
  1624  0013FC  0E00               	movlw	0
  1625  0013FE  0100               	movlb	0	; force () banked
  1626  001400  21C9               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1627  001402  6EDA               	movwf	fsr2h,c
  1628  001404  0E20               	movlw	32
  1629  001406  6EDF               	movwf	indf2,c
  1630  001408                     l2272:
  1631                           
  1632                           ; BSR set to: 0
  1633  001408  0100               	movlb	0	; force () banked
  1634  00140A  2BCC               	incf	metToucheCombien@j& (0+255),f,b
  1635  00140C                     
  1636                           ; BSR set to: 0
  1637  00140C  0E13               	movlw	19
  1638  00140E  0100               	movlb	0	; force () banked
  1639  001410  65CC               	cpfsgt	metToucheCombien@j& (0+255),b
  1640  001412  EF0D  F00A         	goto	u1551
  1641  001416  EF0F  F00A         	goto	u1550
  1642  00141A                     u1551:
  1643  00141A  EF88  F009         	goto	l2264
  1644  00141E                     u1550:
  1645  00141E                     l2276:
  1646                           
  1647                           ; BSR set to: 0
  1648  00141E  0100               	movlb	0	; force () banked
  1649  001420  2BCB               	incf	metToucheCombien@i& (0+255),f,b
  1650  001422                     
  1651                           ; BSR set to: 0
  1652  001422  0E03               	movlw	3
  1653  001424  0100               	movlb	0	; force () banked
  1654  001426  65CB               	cpfsgt	metToucheCombien@i& (0+255),b
  1655  001428  EF18  F00A         	goto	u1561
  1656  00142C  EF1A  F00A         	goto	u1560
  1657  001430                     u1561:
  1658  001430  EF7A  F009         	goto	l2258
  1659  001434                     u1560:
  1660  001434                     l122:
  1661                           
  1662                           ; BSR set to: 0
  1663  001434  0012               	return		;funcret
  1664  001436                     __end_of_metToucheCombien:
  1665                           	opt callstack 0
  1666                           
  1667 ;; *************** function _calculToucheCombien *****************
  1668 ;; Defined at:
  1669 ;;		line 214 in file "main.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  ligne           2    6[BANK0 ] int 
  1672 ;;  colonne         2    8[BANK0 ] int 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  countMine       1   15[BANK0 ] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      unsigned char 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1684 ;;      Params:         0       4       0       0       0       0       0
  1685 ;;      Locals:         0       1       0       0       0       0       0
  1686 ;;      Temps:          0       5       0       0       0       0       0
  1687 ;;      Totals:         0      10       0       0       0       0       0
  1688 ;;Total ram usage:       10 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    1
  1691 ;; This function calls:
  1692 ;;		___wmul
  1693 ;; This function is called by:
  1694 ;;		_metToucheCombien
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text7
  1699  000C7A                     __ptext7:
  1700                           	opt callstack 0
  1701  000C7A                     _calculToucheCombien:
  1702                           	opt callstack 28
  1703  000C7A                     
  1704                           ;main.c: 216: char countMine=0;
  1705  000C7A  0E00               	movlw	0
  1706  000C7C  0100               	movlb	0	; force () banked
  1707  000C7E  6FC7               	movwf	calculToucheCombien@countMine& (0+255),b
  1708  000C80                     
  1709                           ; BSR set to: 0
  1710                           ;main.c: 217: if((m_tabMines[ligne-1][colonne-1]==2)&&(ligne-1>=0)&&(colonne-1>=0))
  1711  000C80  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1712  000C84  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1713  000C88  0E00               	movlw	0
  1714  000C8A  0100               	movlb	0	; force () banked
  1715  000C8C  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1716  000C8E  0E15               	movlw	21
  1717  000C90  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  1718  000C92  ECBB  F00F         	call	___wmul	;wreg free
  1719  000C96  0EEA               	movlw	234
  1720  000C98  0100               	movlb	0	; force () banked
  1721  000C9A  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  1722  000C9C  0EFF               	movlw	255
  1723  000C9E  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1724  000CA0  0E64               	movlw	low _m_tabMines
  1725  000CA2  6FC4               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1726  000CA4  0E00               	movlw	high _m_tabMines
  1727  000CA6  6FC5               	movwf	(??_calculToucheCombien+3)& (0+255),b
  1728  000CA8  51C2               	movf	??_calculToucheCombien& (0+255),w,b
  1729  000CAA  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1730  000CAC  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1731  000CAE  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1732  000CB0  0100               	movlb	0	; force () banked
  1733  000CB2  51B8               	movf	?___wmul& (0+255),w,b
  1734  000CB4  0100               	movlb	0	; force () banked
  1735  000CB6  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1736  000CB8  0100               	movlb	0	; force () banked
  1737  000CBA  51B9               	movf	(?___wmul+1)& (0+255),w,b
  1738  000CBC  0100               	movlb	0	; force () banked
  1739  000CBE  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1740  000CC0  0100               	movlb	0	; force () banked
  1741  000CC2  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  1742  000CC4  0100               	movlb	0	; force () banked
  1743  000CC6  25C4               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  1744  000CC8  6ED9               	movwf	fsr2l,c
  1745  000CCA  0100               	movlb	0	; force () banked
  1746  000CCC  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1747  000CCE  0100               	movlb	0	; force () banked
  1748  000CD0  21C5               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  1749  000CD2  6EDA               	movwf	fsr2h,c
  1750  000CD4  0E02               	movlw	2
  1751  000CD6  18DE               	xorwf	postinc2,w,c
  1752  000CD8  A4D8               	btfss	status,2,c
  1753  000CDA  EF71  F006         	goto	u971
  1754  000CDE  EF73  F006         	goto	u970
  1755  000CE2                     u971:
  1756  000CE2  EF8F  F006         	goto	l1954
  1757  000CE6                     u970:
  1758  000CE6                     
  1759                           ; BSR set to: 0
  1760  000CE6  0EFF               	movlw	255
  1761  000CE8  0100               	movlb	0	; force () banked
  1762  000CEA  25BE               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1763  000CEC  0EFF               	movlw	255
  1764  000CEE  21BF               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1765  000CF0  0B80               	andlw	128
  1766  000CF2  A4D8               	btfss	status,2,c
  1767  000CF4  EF7E  F006         	goto	u981
  1768  000CF8  EF80  F006         	goto	u980
  1769  000CFC                     u981:
  1770  000CFC  EF8F  F006         	goto	l1954
  1771  000D00                     u980:
  1772  000D00                     
  1773                           ; BSR set to: 0
  1774  000D00  0EFF               	movlw	255
  1775  000D02  0100               	movlb	0	; force () banked
  1776  000D04  25C0               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1777  000D06  0EFF               	movlw	255
  1778  000D08  21C1               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1779  000D0A  0B80               	andlw	128
  1780  000D0C  A4D8               	btfss	status,2,c
  1781  000D0E  EF8B  F006         	goto	u991
  1782  000D12  EF8D  F006         	goto	u990
  1783  000D16                     u991:
  1784  000D16  EF8F  F006         	goto	l1954
  1785  000D1A                     u990:
  1786  000D1A                     
  1787                           ; BSR set to: 0
  1788                           ;main.c: 218: {;main.c: 219: countMine++;
  1789  000D1A  0100               	movlb	0	; force () banked
  1790  000D1C  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  1791  000D1E                     l1954:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;main.c: 220: };main.c: 221: if((m_tabMines[ligne][colonne-1]==2)&&(colonne-1>=0))
  1795  000D1E  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1796  000D22  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1797  000D26  0E00               	movlw	0
  1798  000D28  0100               	movlb	0	; force () banked
  1799  000D2A  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1800  000D2C  0E15               	movlw	21
  1801  000D2E  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  1802  000D30  ECBB  F00F         	call	___wmul	;wreg free
  1803  000D34  0EFF               	movlw	255
  1804  000D36  0100               	movlb	0	; force () banked
  1805  000D38  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  1806  000D3A  0EFF               	movlw	255
  1807  000D3C  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1808  000D3E  0E64               	movlw	low _m_tabMines
  1809  000D40  6FC4               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1810  000D42  0E00               	movlw	high _m_tabMines
  1811  000D44  6FC5               	movwf	(??_calculToucheCombien+3)& (0+255),b
  1812  000D46  51C2               	movf	??_calculToucheCombien& (0+255),w,b
  1813  000D48  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1814  000D4A  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1815  000D4C  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1816  000D4E  0100               	movlb	0	; force () banked
  1817  000D50  51B8               	movf	?___wmul& (0+255),w,b
  1818  000D52  0100               	movlb	0	; force () banked
  1819  000D54  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1820  000D56  0100               	movlb	0	; force () banked
  1821  000D58  51B9               	movf	(?___wmul+1)& (0+255),w,b
  1822  000D5A  0100               	movlb	0	; force () banked
  1823  000D5C  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1824  000D5E  0100               	movlb	0	; force () banked
  1825  000D60  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  1826  000D62  0100               	movlb	0	; force () banked
  1827  000D64  25C4               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  1828  000D66  6ED9               	movwf	fsr2l,c
  1829  000D68  0100               	movlb	0	; force () banked
  1830  000D6A  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1831  000D6C  0100               	movlb	0	; force () banked
  1832  000D6E  21C5               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  1833  000D70  6EDA               	movwf	fsr2h,c
  1834  000D72  0E02               	movlw	2
  1835  000D74  18DE               	xorwf	postinc2,w,c
  1836  000D76  A4D8               	btfss	status,2,c
  1837  000D78  EFC0  F006         	goto	u1001
  1838  000D7C  EFC2  F006         	goto	u1000
  1839  000D80                     u1001:
  1840  000D80  EFD1  F006         	goto	l1960
  1841  000D84                     u1000:
  1842  000D84                     
  1843                           ; BSR set to: 0
  1844  000D84  0EFF               	movlw	255
  1845  000D86  0100               	movlb	0	; force () banked
  1846  000D88  25C0               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1847  000D8A  0EFF               	movlw	255
  1848  000D8C  21C1               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1849  000D8E  0B80               	andlw	128
  1850  000D90  A4D8               	btfss	status,2,c
  1851  000D92  EFCD  F006         	goto	u1011
  1852  000D96  EFCF  F006         	goto	u1010
  1853  000D9A                     u1011:
  1854  000D9A  EFD1  F006         	goto	l1960
  1855  000D9E                     u1010:
  1856  000D9E                     
  1857                           ; BSR set to: 0
  1858                           ;main.c: 222: {;main.c: 223: countMine++;
  1859  000D9E  0100               	movlb	0	; force () banked
  1860  000DA0  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  1861  000DA2                     l1960:
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;main.c: 224: };main.c: 225: if((m_tabMines[ligne+1][colonne-1]==2)&&(colonne-1>=0)&&(li
      +                          gne+1<20))
  1865  000DA2  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1866  000DA6  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1867  000DAA  0E00               	movlw	0
  1868  000DAC  0100               	movlb	0	; force () banked
  1869  000DAE  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1870  000DB0  0E15               	movlw	21
  1871  000DB2  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  1872  000DB4  ECBB  F00F         	call	___wmul	;wreg free
  1873  000DB8  0E64               	movlw	low _m_tabMines
  1874  000DBA  0100               	movlb	0	; force () banked
  1875  000DBC  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  1876  000DBE  0E00               	movlw	high _m_tabMines
  1877  000DC0  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1878  000DC2  0E14               	movlw	20
  1879  000DC4  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  1880  000DC6  0E00               	movlw	0
  1881  000DC8  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1882  000DCA  0100               	movlb	0	; force () banked
  1883  000DCC  51B8               	movf	?___wmul& (0+255),w,b
  1884  000DCE  0100               	movlb	0	; force () banked
  1885  000DD0  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  1886  000DD2  0100               	movlb	0	; force () banked
  1887  000DD4  51B9               	movf	(?___wmul+1)& (0+255),w,b
  1888  000DD6  0100               	movlb	0	; force () banked
  1889  000DD8  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1890  000DDA  0100               	movlb	0	; force () banked
  1891  000DDC  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  1892  000DDE  0100               	movlb	0	; force () banked
  1893  000DE0  25C2               	addwf	??_calculToucheCombien& (0+255),w,b
  1894  000DE2  6ED9               	movwf	fsr2l,c
  1895  000DE4  0100               	movlb	0	; force () banked
  1896  000DE6  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1897  000DE8  0100               	movlb	0	; force () banked
  1898  000DEA  21C3               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1899  000DEC  6EDA               	movwf	fsr2h,c
  1900  000DEE  0E02               	movlw	2
  1901  000DF0  18DE               	xorwf	postinc2,w,c
  1902  000DF2  A4D8               	btfss	status,2,c
  1903  000DF4  EFFE  F006         	goto	u1021
  1904  000DF8  EF00  F007         	goto	u1020
  1905  000DFC                     u1021:
  1906  000DFC  EF27  F007         	goto	l1968
  1907  000E00                     u1020:
  1908  000E00                     
  1909                           ; BSR set to: 0
  1910  000E00  0EFF               	movlw	255
  1911  000E02  0100               	movlb	0	; force () banked
  1912  000E04  25C0               	addwf	calculToucheCombien@colonne& (0+255),w,b
  1913  000E06  0EFF               	movlw	255
  1914  000E08  21C1               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  1915  000E0A  0B80               	andlw	128
  1916  000E0C  A4D8               	btfss	status,2,c
  1917  000E0E  EF0B  F007         	goto	u1031
  1918  000E12  EF0D  F007         	goto	u1030
  1919  000E16                     u1031:
  1920  000E16  EF27  F007         	goto	l1968
  1921  000E1A                     u1030:
  1922  000E1A                     
  1923                           ; BSR set to: 0
  1924  000E1A  0E01               	movlw	1
  1925  000E1C  0100               	movlb	0	; force () banked
  1926  000E1E  25BE               	addwf	calculToucheCombien@ligne& (0+255),w,b
  1927  000E20  0100               	movlb	0	; force () banked
  1928  000E22  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  1929  000E24  0E00               	movlw	0
  1930  000E26  0100               	movlb	0	; force () banked
  1931  000E28  21BF               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  1932  000E2A  0100               	movlb	0	; force () banked
  1933  000E2C  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1934  000E2E  BFC3               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  1935  000E30  EF25  F007         	goto	u1040
  1936  000E34  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1937  000E36  E107               	bnz	u1041
  1938  000E38  0E14               	movlw	20
  1939  000E3A  5DC2               	subwf	??_calculToucheCombien& (0+255),w,b
  1940  000E3C  B0D8               	btfsc	status,0,c
  1941  000E3E  EF23  F007         	goto	u1041
  1942  000E42  EF25  F007         	goto	u1040
  1943  000E46                     u1041:
  1944  000E46  EF27  F007         	goto	l1968
  1945  000E4A                     u1040:
  1946  000E4A                     
  1947                           ; BSR set to: 0
  1948                           ;main.c: 226: {;main.c: 227: countMine++;
  1949  000E4A  0100               	movlb	0	; force () banked
  1950  000E4C  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  1951  000E4E                     l1968:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;main.c: 228: };main.c: 229: if((m_tabMines[ligne-1][colonne]==2)&&(ligne-1>=0))
  1955  000E4E  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1956  000E52  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1957  000E56  0E00               	movlw	0
  1958  000E58  0100               	movlb	0	; force () banked
  1959  000E5A  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1960  000E5C  0E15               	movlw	21
  1961  000E5E  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  1962  000E60  ECBB  F00F         	call	___wmul	;wreg free
  1963  000E64  0EEB               	movlw	235
  1964  000E66  0100               	movlb	0	; force () banked
  1965  000E68  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  1966  000E6A  0EFF               	movlw	255
  1967  000E6C  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1968  000E6E  0E64               	movlw	low _m_tabMines
  1969  000E70  6FC4               	movwf	(??_calculToucheCombien+2)& (0+255),b
  1970  000E72  0E00               	movlw	high _m_tabMines
  1971  000E74  6FC5               	movwf	(??_calculToucheCombien+3)& (0+255),b
  1972  000E76  51C2               	movf	??_calculToucheCombien& (0+255),w,b
  1973  000E78  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1974  000E7A  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  1975  000E7C  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1976  000E7E  0100               	movlb	0	; force () banked
  1977  000E80  51B8               	movf	?___wmul& (0+255),w,b
  1978  000E82  0100               	movlb	0	; force () banked
  1979  000E84  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  1980  000E86  0100               	movlb	0	; force () banked
  1981  000E88  51B9               	movf	(?___wmul+1)& (0+255),w,b
  1982  000E8A  0100               	movlb	0	; force () banked
  1983  000E8C  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  1984  000E8E  0100               	movlb	0	; force () banked
  1985  000E90  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  1986  000E92  0100               	movlb	0	; force () banked
  1987  000E94  25C4               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  1988  000E96  6ED9               	movwf	fsr2l,c
  1989  000E98  0100               	movlb	0	; force () banked
  1990  000E9A  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1991  000E9C  0100               	movlb	0	; force () banked
  1992  000E9E  21C5               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  1993  000EA0  6EDA               	movwf	fsr2h,c
  1994  000EA2  0E02               	movlw	2
  1995  000EA4  18DE               	xorwf	postinc2,w,c
  1996  000EA6  A4D8               	btfss	status,2,c
  1997  000EA8  EF58  F007         	goto	u1051
  1998  000EAC  EF5A  F007         	goto	u1050
  1999  000EB0                     u1051:
  2000  000EB0  EF69  F007         	goto	l1974
  2001  000EB4                     u1050:
  2002  000EB4                     
  2003                           ; BSR set to: 0
  2004  000EB4  0EFF               	movlw	255
  2005  000EB6  0100               	movlb	0	; force () banked
  2006  000EB8  25BE               	addwf	calculToucheCombien@ligne& (0+255),w,b
  2007  000EBA  0EFF               	movlw	255
  2008  000EBC  21BF               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  2009  000EBE  0B80               	andlw	128
  2010  000EC0  A4D8               	btfss	status,2,c
  2011  000EC2  EF65  F007         	goto	u1061
  2012  000EC6  EF67  F007         	goto	u1060
  2013  000ECA                     u1061:
  2014  000ECA  EF69  F007         	goto	l1974
  2015  000ECE                     u1060:
  2016  000ECE                     
  2017                           ; BSR set to: 0
  2018                           ;main.c: 230: {;main.c: 231: countMine++;
  2019  000ECE  0100               	movlb	0	; force () banked
  2020  000ED0  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  2021  000ED2                     l1974:
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;main.c: 232: };main.c: 233: if((m_tabMines[ligne-1][colonne+1]==2)&&(ligne-1>=0)&&(colo
      +                          nne+1<20))
  2025  000ED2  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2026  000ED6  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2027  000EDA  0E00               	movlw	0
  2028  000EDC  0100               	movlb	0	; force () banked
  2029  000EDE  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2030  000EE0  0E15               	movlw	21
  2031  000EE2  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  2032  000EE4  ECBB  F00F         	call	___wmul	;wreg free
  2033  000EE8  0EEC               	movlw	236
  2034  000EEA  0100               	movlb	0	; force () banked
  2035  000EEC  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2036  000EEE  0EFF               	movlw	255
  2037  000EF0  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2038  000EF2  0E64               	movlw	low _m_tabMines
  2039  000EF4  6FC4               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2040  000EF6  0E00               	movlw	high _m_tabMines
  2041  000EF8  6FC5               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2042  000EFA  51C2               	movf	??_calculToucheCombien& (0+255),w,b
  2043  000EFC  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2044  000EFE  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2045  000F00  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2046  000F02  0100               	movlb	0	; force () banked
  2047  000F04  51B8               	movf	?___wmul& (0+255),w,b
  2048  000F06  0100               	movlb	0	; force () banked
  2049  000F08  27C4               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2050  000F0A  0100               	movlb	0	; force () banked
  2051  000F0C  51B9               	movf	(?___wmul+1)& (0+255),w,b
  2052  000F0E  0100               	movlb	0	; force () banked
  2053  000F10  23C5               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2054  000F12  0100               	movlb	0	; force () banked
  2055  000F14  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  2056  000F16  0100               	movlb	0	; force () banked
  2057  000F18  25C4               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2058  000F1A  6ED9               	movwf	fsr2l,c
  2059  000F1C  0100               	movlb	0	; force () banked
  2060  000F1E  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2061  000F20  0100               	movlb	0	; force () banked
  2062  000F22  21C5               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2063  000F24  6EDA               	movwf	fsr2h,c
  2064  000F26  0E02               	movlw	2
  2065  000F28  18DE               	xorwf	postinc2,w,c
  2066  000F2A  A4D8               	btfss	status,2,c
  2067  000F2C  EF9A  F007         	goto	u1071
  2068  000F30  EF9C  F007         	goto	u1070
  2069  000F34                     u1071:
  2070  000F34  EFC3  F007         	goto	l1982
  2071  000F38                     u1070:
  2072  000F38                     
  2073                           ; BSR set to: 0
  2074  000F38  0EFF               	movlw	255
  2075  000F3A  0100               	movlb	0	; force () banked
  2076  000F3C  25BE               	addwf	calculToucheCombien@ligne& (0+255),w,b
  2077  000F3E  0EFF               	movlw	255
  2078  000F40  21BF               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  2079  000F42  0B80               	andlw	128
  2080  000F44  A4D8               	btfss	status,2,c
  2081  000F46  EFA7  F007         	goto	u1081
  2082  000F4A  EFA9  F007         	goto	u1080
  2083  000F4E                     u1081:
  2084  000F4E  EFC3  F007         	goto	l1982
  2085  000F52                     u1080:
  2086  000F52                     
  2087                           ; BSR set to: 0
  2088  000F52  0E01               	movlw	1
  2089  000F54  0100               	movlb	0	; force () banked
  2090  000F56  25C0               	addwf	calculToucheCombien@colonne& (0+255),w,b
  2091  000F58  0100               	movlb	0	; force () banked
  2092  000F5A  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2093  000F5C  0E00               	movlw	0
  2094  000F5E  0100               	movlb	0	; force () banked
  2095  000F60  21C1               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  2096  000F62  0100               	movlb	0	; force () banked
  2097  000F64  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2098  000F66  BFC3               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  2099  000F68  EFC1  F007         	goto	u1090
  2100  000F6C  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2101  000F6E  E107               	bnz	u1091
  2102  000F70  0E14               	movlw	20
  2103  000F72  5DC2               	subwf	??_calculToucheCombien& (0+255),w,b
  2104  000F74  B0D8               	btfsc	status,0,c
  2105  000F76  EFBF  F007         	goto	u1091
  2106  000F7A  EFC1  F007         	goto	u1090
  2107  000F7E                     u1091:
  2108  000F7E  EFC3  F007         	goto	l1982
  2109  000F82                     u1090:
  2110  000F82                     
  2111                           ; BSR set to: 0
  2112                           ;main.c: 234: {;main.c: 235: countMine++;
  2113  000F82  0100               	movlb	0	; force () banked
  2114  000F84  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  2115  000F86                     l1982:
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;main.c: 236: };main.c: 237: if((m_tabMines[ligne][colonne+1]==2)&&(colonne+1<20))
  2119  000F86  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2120  000F8A  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2121  000F8E  0E00               	movlw	0
  2122  000F90  0100               	movlb	0	; force () banked
  2123  000F92  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2124  000F94  0E15               	movlw	21
  2125  000F96  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  2126  000F98  ECBB  F00F         	call	___wmul	;wreg free
  2127  000F9C  0E64               	movlw	low _m_tabMines
  2128  000F9E  0100               	movlb	0	; force () banked
  2129  000FA0  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2130  000FA2  0E00               	movlw	high _m_tabMines
  2131  000FA4  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2132  000FA6  0E01               	movlw	1
  2133  000FA8  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  2134  000FAA  0E00               	movlw	0
  2135  000FAC  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2136  000FAE  0100               	movlb	0	; force () banked
  2137  000FB0  51B8               	movf	?___wmul& (0+255),w,b
  2138  000FB2  0100               	movlb	0	; force () banked
  2139  000FB4  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  2140  000FB6  0100               	movlb	0	; force () banked
  2141  000FB8  51B9               	movf	(?___wmul+1)& (0+255),w,b
  2142  000FBA  0100               	movlb	0	; force () banked
  2143  000FBC  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2144  000FBE  0100               	movlb	0	; force () banked
  2145  000FC0  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  2146  000FC2  0100               	movlb	0	; force () banked
  2147  000FC4  25C2               	addwf	??_calculToucheCombien& (0+255),w,b
  2148  000FC6  6ED9               	movwf	fsr2l,c
  2149  000FC8  0100               	movlb	0	; force () banked
  2150  000FCA  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2151  000FCC  0100               	movlb	0	; force () banked
  2152  000FCE  21C3               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2153  000FD0  6EDA               	movwf	fsr2h,c
  2154  000FD2  0E02               	movlw	2
  2155  000FD4  18DE               	xorwf	postinc2,w,c
  2156  000FD6  A4D8               	btfss	status,2,c
  2157  000FD8  EFF0  F007         	goto	u1101
  2158  000FDC  EFF2  F007         	goto	u1100
  2159  000FE0                     u1101:
  2160  000FE0  EF0C  F008         	goto	l1988
  2161  000FE4                     u1100:
  2162  000FE4                     
  2163                           ; BSR set to: 0
  2164  000FE4  0E01               	movlw	1
  2165  000FE6  0100               	movlb	0	; force () banked
  2166  000FE8  25C0               	addwf	calculToucheCombien@colonne& (0+255),w,b
  2167  000FEA  0100               	movlb	0	; force () banked
  2168  000FEC  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2169  000FEE  0E00               	movlw	0
  2170  000FF0  0100               	movlb	0	; force () banked
  2171  000FF2  21C1               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  2172  000FF4  0100               	movlb	0	; force () banked
  2173  000FF6  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2174  000FF8  BFC3               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  2175  000FFA  EF0A  F008         	goto	u1110
  2176  000FFE  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2177  001000  E107               	bnz	u1111
  2178  001002  0E14               	movlw	20
  2179  001004  5DC2               	subwf	??_calculToucheCombien& (0+255),w,b
  2180  001006  B0D8               	btfsc	status,0,c
  2181  001008  EF08  F008         	goto	u1111
  2182  00100C  EF0A  F008         	goto	u1110
  2183  001010                     u1111:
  2184  001010  EF0C  F008         	goto	l1988
  2185  001014                     u1110:
  2186  001014                     
  2187                           ; BSR set to: 0
  2188                           ;main.c: 238: {;main.c: 239: countMine++;
  2189  001014  0100               	movlb	0	; force () banked
  2190  001016  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  2191  001018                     l1988:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;main.c: 240: };main.c: 241: if((m_tabMines[ligne+1][colonne+1]==2)&&(colonne+1<20)&&(li
      +                          gne+1<20))
  2195  001018  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2196  00101C  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2197  001020  0E00               	movlw	0
  2198  001022  0100               	movlb	0	; force () banked
  2199  001024  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2200  001026  0E15               	movlw	21
  2201  001028  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  2202  00102A  ECBB  F00F         	call	___wmul	;wreg free
  2203  00102E  0E64               	movlw	low _m_tabMines
  2204  001030  0100               	movlb	0	; force () banked
  2205  001032  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2206  001034  0E00               	movlw	high _m_tabMines
  2207  001036  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2208  001038  0E16               	movlw	22
  2209  00103A  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  2210  00103C  0E00               	movlw	0
  2211  00103E  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2212  001040  0100               	movlb	0	; force () banked
  2213  001042  51B8               	movf	?___wmul& (0+255),w,b
  2214  001044  0100               	movlb	0	; force () banked
  2215  001046  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  2216  001048  0100               	movlb	0	; force () banked
  2217  00104A  51B9               	movf	(?___wmul+1)& (0+255),w,b
  2218  00104C  0100               	movlb	0	; force () banked
  2219  00104E  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2220  001050  0100               	movlb	0	; force () banked
  2221  001052  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  2222  001054  0100               	movlb	0	; force () banked
  2223  001056  25C2               	addwf	??_calculToucheCombien& (0+255),w,b
  2224  001058  6ED9               	movwf	fsr2l,c
  2225  00105A  0100               	movlb	0	; force () banked
  2226  00105C  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2227  00105E  0100               	movlb	0	; force () banked
  2228  001060  21C3               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2229  001062  6EDA               	movwf	fsr2h,c
  2230  001064  0E02               	movlw	2
  2231  001066  18DE               	xorwf	postinc2,w,c
  2232  001068  A4D8               	btfss	status,2,c
  2233  00106A  EF39  F008         	goto	u1121
  2234  00106E  EF3B  F008         	goto	u1120
  2235  001072                     u1121:
  2236  001072  EF6D  F008         	goto	l1996
  2237  001076                     u1120:
  2238  001076                     
  2239                           ; BSR set to: 0
  2240  001076  0E01               	movlw	1
  2241  001078  0100               	movlb	0	; force () banked
  2242  00107A  25C0               	addwf	calculToucheCombien@colonne& (0+255),w,b
  2243  00107C  0100               	movlb	0	; force () banked
  2244  00107E  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2245  001080  0E00               	movlw	0
  2246  001082  0100               	movlb	0	; force () banked
  2247  001084  21C1               	addwfc	(calculToucheCombien@colonne+1)& (0+255),w,b
  2248  001086  0100               	movlb	0	; force () banked
  2249  001088  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2250  00108A  BFC3               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  2251  00108C  EF53  F008         	goto	u1130
  2252  001090  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2253  001092  E107               	bnz	u1131
  2254  001094  0E14               	movlw	20
  2255  001096  5DC2               	subwf	??_calculToucheCombien& (0+255),w,b
  2256  001098  B0D8               	btfsc	status,0,c
  2257  00109A  EF51  F008         	goto	u1131
  2258  00109E  EF53  F008         	goto	u1130
  2259  0010A2                     u1131:
  2260  0010A2  EF6D  F008         	goto	l1996
  2261  0010A6                     u1130:
  2262  0010A6                     
  2263                           ; BSR set to: 0
  2264  0010A6  0E01               	movlw	1
  2265  0010A8  0100               	movlb	0	; force () banked
  2266  0010AA  25BE               	addwf	calculToucheCombien@ligne& (0+255),w,b
  2267  0010AC  0100               	movlb	0	; force () banked
  2268  0010AE  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2269  0010B0  0E00               	movlw	0
  2270  0010B2  0100               	movlb	0	; force () banked
  2271  0010B4  21BF               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  2272  0010B6  0100               	movlb	0	; force () banked
  2273  0010B8  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2274  0010BA  BFC3               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  2275  0010BC  EF6B  F008         	goto	u1140
  2276  0010C0  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2277  0010C2  E107               	bnz	u1141
  2278  0010C4  0E14               	movlw	20
  2279  0010C6  5DC2               	subwf	??_calculToucheCombien& (0+255),w,b
  2280  0010C8  B0D8               	btfsc	status,0,c
  2281  0010CA  EF69  F008         	goto	u1141
  2282  0010CE  EF6B  F008         	goto	u1140
  2283  0010D2                     u1141:
  2284  0010D2  EF6D  F008         	goto	l1996
  2285  0010D6                     u1140:
  2286  0010D6                     
  2287                           ; BSR set to: 0
  2288                           ;main.c: 242: {;main.c: 243: countMine++;
  2289  0010D6  0100               	movlb	0	; force () banked
  2290  0010D8  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  2291  0010DA                     l1996:
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;main.c: 244: };main.c: 245: if((m_tabMines[ligne+1][colonne]==2)&&(ligne+1<20))
  2295  0010DA  C0BE  F0B8         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2296  0010DE  C0BF  F0B9         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2297  0010E2  0E00               	movlw	0
  2298  0010E4  0100               	movlb	0	; force () banked
  2299  0010E6  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2300  0010E8  0E15               	movlw	21
  2301  0010EA  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  2302  0010EC  ECBB  F00F         	call	___wmul	;wreg free
  2303  0010F0  0E64               	movlw	low _m_tabMines
  2304  0010F2  0100               	movlb	0	; force () banked
  2305  0010F4  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2306  0010F6  0E00               	movlw	high _m_tabMines
  2307  0010F8  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2308  0010FA  0E15               	movlw	21
  2309  0010FC  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  2310  0010FE  0E00               	movlw	0
  2311  001100  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2312  001102  0100               	movlb	0	; force () banked
  2313  001104  51B8               	movf	?___wmul& (0+255),w,b
  2314  001106  0100               	movlb	0	; force () banked
  2315  001108  27C2               	addwf	??_calculToucheCombien& (0+255),f,b
  2316  00110A  0100               	movlb	0	; force () banked
  2317  00110C  51B9               	movf	(?___wmul+1)& (0+255),w,b
  2318  00110E  0100               	movlb	0	; force () banked
  2319  001110  23C3               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2320  001112  0100               	movlb	0	; force () banked
  2321  001114  51C0               	movf	calculToucheCombien@colonne& (0+255),w,b
  2322  001116  0100               	movlb	0	; force () banked
  2323  001118  25C2               	addwf	??_calculToucheCombien& (0+255),w,b
  2324  00111A  6ED9               	movwf	fsr2l,c
  2325  00111C  0100               	movlb	0	; force () banked
  2326  00111E  51C1               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2327  001120  0100               	movlb	0	; force () banked
  2328  001122  21C3               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2329  001124  6EDA               	movwf	fsr2h,c
  2330  001126  0E02               	movlw	2
  2331  001128  18DE               	xorwf	postinc2,w,c
  2332  00112A  A4D8               	btfss	status,2,c
  2333  00112C  EF9A  F008         	goto	u1151
  2334  001130  EF9C  F008         	goto	u1150
  2335  001134                     u1151:
  2336  001134  EFB6  F008         	goto	l2002
  2337  001138                     u1150:
  2338  001138                     
  2339                           ; BSR set to: 0
  2340  001138  0E01               	movlw	1
  2341  00113A  0100               	movlb	0	; force () banked
  2342  00113C  25BE               	addwf	calculToucheCombien@ligne& (0+255),w,b
  2343  00113E  0100               	movlb	0	; force () banked
  2344  001140  6FC2               	movwf	??_calculToucheCombien& (0+255),b
  2345  001142  0E00               	movlw	0
  2346  001144  0100               	movlb	0	; force () banked
  2347  001146  21BF               	addwfc	(calculToucheCombien@ligne+1)& (0+255),w,b
  2348  001148  0100               	movlb	0	; force () banked
  2349  00114A  6FC3               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2350  00114C  BFC3               	btfsc	(??_calculToucheCombien+1)& (0+255),7,b
  2351  00114E  EFB4  F008         	goto	u1160
  2352  001152  51C3               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2353  001154  E107               	bnz	u1161
  2354  001156  0E14               	movlw	20
  2355  001158  5DC2               	subwf	??_calculToucheCombien& (0+255),w,b
  2356  00115A  B0D8               	btfsc	status,0,c
  2357  00115C  EFB2  F008         	goto	u1161
  2358  001160  EFB4  F008         	goto	u1160
  2359  001164                     u1161:
  2360  001164  EFB6  F008         	goto	l2002
  2361  001168                     u1160:
  2362  001168                     
  2363                           ; BSR set to: 0
  2364                           ;main.c: 246: {;main.c: 247: countMine++;
  2365  001168  0100               	movlb	0	; force () banked
  2366  00116A  2BC7               	incf	calculToucheCombien@countMine& (0+255),f,b
  2367  00116C                     l2002:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;main.c: 248: };main.c: 249: return countMine;
  2371  00116C  0100               	movlb	0	; force () banked
  2372  00116E  51C7               	movf	calculToucheCombien@countMine& (0+255),w,b
  2373  001170                     
  2374                           ; BSR set to: 0
  2375  001170  0012               	return		;funcret
  2376  001172                     __end_of_calculToucheCombien:
  2377                           	opt callstack 0
  2378                           
  2379 ;; *************** function _lcd_init *****************
  2380 ;; Defined at:
  2381 ;;		line 300 in file "Lcd4Lignes.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;		None
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2395 ;;      Params:         0       0       0       0       0       0       0
  2396 ;;      Locals:         0       0       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0
  2398 ;;      Totals:         0       0       0       0       0       0       0
  2399 ;;Total ram usage:        0 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    5
  2402 ;; This function calls:
  2403 ;;		_lcd_initCGRam
  2404 ;;		_lcd_resetSequence
  2405 ;;		_lcd_wrCom
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text8
  2412  001F4E                     __ptext8:
  2413                           	opt callstack 0
  2414  001F4E                     _lcd_init:
  2415                           	opt callstack 25
  2416  001F4E                     
  2417                           ;Lcd4Lignes.c: 303: lcd_resetSequence();
  2418  001F4E  ECE6  F00D         	call	_lcd_resetSequence	;wreg free
  2419                           
  2420                           ;Lcd4Lignes.c: 304: lcd_wrCom(0x28);
  2421  001F52  0E28               	movlw	40
  2422  001F54  ECB0  F00D         	call	_lcd_wrCom
  2423                           
  2424                           ;Lcd4Lignes.c: 305: lcd_wrCom(0x0F);
  2425  001F58  0E0F               	movlw	15
  2426  001F5A  ECB0  F00D         	call	_lcd_wrCom
  2427                           
  2428                           ;Lcd4Lignes.c: 306: lcd_wrCom(0x01);
  2429  001F5E  0E01               	movlw	1
  2430  001F60  ECB0  F00D         	call	_lcd_wrCom
  2431                           
  2432                           ;Lcd4Lignes.c: 307: lcd_wrCom(0x06);
  2433  001F64  0E06               	movlw	6
  2434  001F66  ECB0  F00D         	call	_lcd_wrCom
  2435                           
  2436                           ;Lcd4Lignes.c: 308: lcd_wrCom(0x80);
  2437  001F6A  0E80               	movlw	128
  2438  001F6C  ECB0  F00D         	call	_lcd_wrCom
  2439  001F70                     
  2440                           ;Lcd4Lignes.c: 309: lcd_initCGRam();
  2441  001F70  EC62  F00C         	call	_lcd_initCGRam	;wreg free
  2442  001F74  0012               	return		;funcret
  2443  001F76                     __end_of_lcd_init:
  2444                           	opt callstack 0
  2445                           
  2446 ;; *************** function _lcd_resetSequence *****************
  2447 ;; Defined at:
  2448 ;;		line 263 in file "Lcd4Lignes.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2462 ;;      Params:         0       0       0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0       0
  2464 ;;      Temps:          0       1       0       0       0       0       0
  2465 ;;      Totals:         0       1       0       0       0       0       0
  2466 ;;Total ram usage:        1 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    1
  2469 ;; This function calls:
  2470 ;;		_lcd_ecrireDonnees
  2471 ;;		_lcd_strobeEnableBit
  2472 ;; This function is called by:
  2473 ;;		_lcd_init
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text9
  2478  001BCC                     __ptext9:
  2479                           	opt callstack 0
  2480  001BCC                     _lcd_resetSequence:
  2481                           	opt callstack 28
  2482  001BCC                     
  2483                           ;Lcd4Lignes.c: 268: TRISD = 0b00000000;
  2484  001BCC  0E00               	movlw	0
  2485  001BCE  6E95               	movwf	149,c	;volatile
  2486  001BD0                     
  2487                           ;Lcd4Lignes.c: 270: _delay((unsigned long)((40)*(1000000/4000.0)));
  2488  001BD0  0E0D               	movlw	13
  2489  001BD2  0100               	movlb	0	; force () banked
  2490  001BD4  6FBA               	movwf	??_lcd_resetSequence& (0+255),b
  2491  001BD6  0EFB               	movlw	251
  2492  001BD8                     u1747:
  2493  001BD8  2EE8               	decfsz	wreg,f,c
  2494  001BDA  D7FE               	bra	u1747
  2495  001BDC  2FBA               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2496  001BDE  D7FC               	bra	u1747
  2497  001BE0  F000 F000          	nop2	
  2498  001BE4                     
  2499                           ;Lcd4Lignes.c: 271: PORTAbits.RA0 = 0;
  2500  001BE4  9080               	bcf	128,0,c	;volatile
  2501  001BE6                     
  2502                           ;Lcd4Lignes.c: 272: PORTAbits.RA1 = 0;
  2503  001BE6  9280               	bcf	128,1,c	;volatile
  2504  001BE8                     
  2505                           ;Lcd4Lignes.c: 274: lcd_ecrireDonnees(0x03);
  2506  001BE8  0E03               	movlw	3
  2507  001BEA  ECCF  F00F         	call	_lcd_ecrireDonnees
  2508  001BEE                     
  2509                           ;Lcd4Lignes.c: 275: lcd_strobeEnableBit();
  2510  001BEE  ECE9  F00F         	call	_lcd_strobeEnableBit	;wreg free
  2511  001BF2                     
  2512                           ;Lcd4Lignes.c: 276: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2513  001BF2  0E03               	movlw	3
  2514  001BF4                     u1757:
  2515  001BF4  2EE8               	decfsz	wreg,f,c
  2516  001BF6  D7FE               	bra	u1757
  2517  001BF8  F000               	nop	
  2518  001BFA                     
  2519                           ;Lcd4Lignes.c: 279: lcd_ecrireDonnees(0x03);
  2520  001BFA  0E03               	movlw	3
  2521  001BFC  ECCF  F00F         	call	_lcd_ecrireDonnees
  2522  001C00                     
  2523                           ;Lcd4Lignes.c: 280: lcd_strobeEnableBit();
  2524  001C00  ECE9  F00F         	call	_lcd_strobeEnableBit	;wreg free
  2525  001C04                     
  2526                           ;Lcd4Lignes.c: 281: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2527  001C04  0E03               	movlw	3
  2528  001C06                     u1767:
  2529  001C06  2EE8               	decfsz	wreg,f,c
  2530  001C08  D7FE               	bra	u1767
  2531  001C0A  F000               	nop	
  2532  001C0C                     
  2533                           ;Lcd4Lignes.c: 283: lcd_ecrireDonnees(0x03);
  2534  001C0C  0E03               	movlw	3
  2535  001C0E  ECCF  F00F         	call	_lcd_ecrireDonnees
  2536  001C12                     
  2537                           ;Lcd4Lignes.c: 284: lcd_strobeEnableBit();
  2538  001C12  ECE9  F00F         	call	_lcd_strobeEnableBit	;wreg free
  2539  001C16                     
  2540                           ;Lcd4Lignes.c: 285: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2541  001C16  0E03               	movlw	3
  2542  001C18                     u1777:
  2543  001C18  2EE8               	decfsz	wreg,f,c
  2544  001C1A  D7FE               	bra	u1777
  2545  001C1C  F000               	nop	
  2546  001C1E                     
  2547                           ;Lcd4Lignes.c: 287: lcd_ecrireDonnees(0x02);
  2548  001C1E  0E02               	movlw	2
  2549  001C20  ECCF  F00F         	call	_lcd_ecrireDonnees
  2550  001C24                     
  2551                           ;Lcd4Lignes.c: 288: lcd_strobeEnableBit();
  2552  001C24  ECE9  F00F         	call	_lcd_strobeEnableBit	;wreg free
  2553  001C28                     
  2554                           ;Lcd4Lignes.c: 289: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2555  001C28  0E03               	movlw	3
  2556  001C2A                     u1787:
  2557  001C2A  2EE8               	decfsz	wreg,f,c
  2558  001C2C  D7FE               	bra	u1787
  2559  001C2E  F000               	nop	
  2560  001C30                     
  2561                           ;Lcd4Lignes.c: 291: TRISD = 0b00001111;
  2562  001C30  0E0F               	movlw	15
  2563  001C32  6E95               	movwf	149,c	;volatile
  2564  001C34  0012               	return		;funcret
  2565  001C36                     __end_of_lcd_resetSequence:
  2566                           	opt callstack 0
  2567                           
  2568 ;; *************** function _lcd_initCGRam *****************
  2569 ;; Defined at:
  2570 ;;		line 459 in file "Lcd4Lignes.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  j               1    6[BANK0 ] unsigned char 
  2575 ;;  i               1    5[BANK0 ] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2585 ;;      Params:         0       0       0       0       0       0       0
  2586 ;;      Locals:         0       2       0       0       0       0       0
  2587 ;;      Temps:          0       2       0       0       0       0       0
  2588 ;;      Totals:         0       4       0       0       0       0       0
  2589 ;;Total ram usage:        4 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    4
  2592 ;; This function calls:
  2593 ;;		_lcd_curseurHome
  2594 ;;		_lcd_wrCom
  2595 ;;		_lcd_wrData
  2596 ;; This function is called by:
  2597 ;;		_lcd_init
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text10
  2602  0018C4                     __ptext10:
  2603                           	opt callstack 0
  2604  0018C4                     _lcd_initCGRam:
  2605                           	opt callstack 25
  2606  0018C4                     
  2607                           ;Lcd4Lignes.c: 461: char i,j;;Lcd4Lignes.c: 463: lcd_wrCom(0x40);
  2608  0018C4  0E40               	movlw	64
  2609  0018C6  ECB0  F00D         	call	_lcd_wrCom
  2610  0018CA                     
  2611                           ;Lcd4Lignes.c: 464: for(i=0;i<8;i++)
  2612  0018CA  0E00               	movlw	0
  2613  0018CC  0100               	movlb	0	; force () banked
  2614  0018CE  6FBD               	movwf	lcd_initCGRam@i& (0+255),b
  2615  0018D0                     
  2616                           ; BSR set to: 0
  2617  0018D0  0E07               	movlw	7
  2618  0018D2  0100               	movlb	0	; force () banked
  2619  0018D4  65BD               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2620  0018D6  EF6F  F00C         	goto	u1311
  2621  0018DA  EF71  F00C         	goto	u1310
  2622  0018DE                     u1311:
  2623  0018DE  EF73  F00C         	goto	l2094
  2624  0018E2                     u1310:
  2625  0018E2  EFB0  F00C         	goto	l2110
  2626  0018E6                     l2094:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;Lcd4Lignes.c: 465: {;Lcd4Lignes.c: 466: for(j=0;j<8;j++)
  2630  0018E6  0E00               	movlw	0
  2631  0018E8  0100               	movlb	0	; force () banked
  2632  0018EA  6FBE               	movwf	lcd_initCGRam@j& (0+255),b
  2633  0018EC                     
  2634                           ; BSR set to: 0
  2635  0018EC  0E07               	movlw	7
  2636  0018EE  0100               	movlb	0	; force () banked
  2637  0018F0  65BE               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2638  0018F2  EF7D  F00C         	goto	u1321
  2639  0018F6  EF7F  F00C         	goto	u1320
  2640  0018FA                     u1321:
  2641  0018FA  EF81  F00C         	goto	l2100
  2642  0018FE                     u1320:
  2643  0018FE  EFA5  F00C         	goto	l2106
  2644  001902                     l2100:
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;Lcd4Lignes.c: 467: lcd_wrData(matCGRAM[i][j]);
  2648  001902  0100               	movlb	0	; force () banked
  2649  001904  51BD               	movf	lcd_initCGRam@i& (0+255),w,b
  2650  001906  0D08               	mullw	8
  2651  001908  0E54               	movlw	low _matCGRAM
  2652  00190A  0100               	movlb	0	; force () banked
  2653  00190C  6FBB               	movwf	??_lcd_initCGRam& (0+255),b
  2654  00190E  0E01               	movlw	high _matCGRAM
  2655  001910  6FBC               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2656  001912  50F3               	movf	243,w,c
  2657  001914  27BB               	addwf	??_lcd_initCGRam& (0+255),f,b
  2658  001916  50F4               	movf	244,w,c
  2659  001918  23BC               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2660  00191A  0100               	movlb	0	; force () banked
  2661  00191C  51BE               	movf	lcd_initCGRam@j& (0+255),w,b
  2662  00191E  0100               	movlb	0	; force () banked
  2663  001920  25BB               	addwf	??_lcd_initCGRam& (0+255),w,b
  2664  001922  6ED9               	movwf	fsr2l,c
  2665  001924  0100               	movlb	0	; force () banked
  2666  001926  0E00               	movlw	0
  2667  001928  0100               	movlb	0	; force () banked
  2668  00192A  21BC               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2669  00192C  6EDA               	movwf	fsr2h,c
  2670  00192E  50DF               	movf	indf2,w,c
  2671  001930  EC77  F00F         	call	_lcd_wrData
  2672  001934  0100               	movlb	0	; force () banked
  2673  001936  2BBE               	incf	lcd_initCGRam@j& (0+255),f,b
  2674  001938                     
  2675                           ; BSR set to: 0
  2676  001938  0E07               	movlw	7
  2677  00193A  0100               	movlb	0	; force () banked
  2678  00193C  65BE               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2679  00193E  EFA3  F00C         	goto	u1331
  2680  001942  EFA5  F00C         	goto	u1330
  2681  001946                     u1331:
  2682  001946  EF81  F00C         	goto	l2100
  2683  00194A                     u1330:
  2684  00194A                     l2106:
  2685                           
  2686                           ; BSR set to: 0
  2687  00194A  0100               	movlb	0	; force () banked
  2688  00194C  2BBD               	incf	lcd_initCGRam@i& (0+255),f,b
  2689  00194E                     
  2690                           ; BSR set to: 0
  2691  00194E  0E07               	movlw	7
  2692  001950  0100               	movlb	0	; force () banked
  2693  001952  65BD               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2694  001954  EFAE  F00C         	goto	u1341
  2695  001958  EFB0  F00C         	goto	u1340
  2696  00195C                     u1341:
  2697  00195C  EF73  F00C         	goto	l2094
  2698  001960                     u1340:
  2699  001960                     l2110:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;Lcd4Lignes.c: 468: };Lcd4Lignes.c: 469: lcd_curseurHome();
  2703  001960  ECE5  F00F         	call	_lcd_curseurHome	;wreg free
  2704  001964  0012               	return		;funcret
  2705  001966                     __end_of_lcd_initCGRam:
  2706                           	opt callstack 0
  2707                           
  2708 ;; *************** function _lcd_curseurHome *****************
  2709 ;; Defined at:
  2710 ;;		line 330 in file "Lcd4Lignes.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2724 ;;      Params:         0       0       0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0
  2727 ;;      Totals:         0       0       0       0       0       0       0
  2728 ;;Total ram usage:        0 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    3
  2731 ;; This function calls:
  2732 ;;		_lcd_wrCom
  2733 ;; This function is called by:
  2734 ;;		_lcd_initCGRam
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text11
  2739  001FCA                     __ptext11:
  2740                           	opt callstack 0
  2741  001FCA                     _lcd_curseurHome:
  2742                           	opt callstack 25
  2743  001FCA                     
  2744                           ;Lcd4Lignes.c: 332: lcd_wrCom(0x02);
  2745  001FCA  0E02               	movlw	2
  2746  001FCC  ECB0  F00D         	call	_lcd_wrCom
  2747  001FD0  0012               	return		;funcret
  2748  001FD2                     __end_of_lcd_curseurHome:
  2749                           	opt callstack 0
  2750                           
  2751 ;; *************** function _initialisation *****************
  2752 ;; Defined at:
  2753 ;;		line 388 in file "main.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;		None
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;		None
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2767 ;;      Params:         0       0       0       0       0       0       0
  2768 ;;      Locals:         0       0       0       0       0       0       0
  2769 ;;      Temps:          0       0       0       0       0       0       0
  2770 ;;      Totals:         0       0       0       0       0       0       0
  2771 ;;Total ram usage:        0 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    1
  2774 ;; This function calls:
  2775 ;;		_srand
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text12
  2782  001DD8                     __ptext12:
  2783                           	opt callstack 0
  2784  001DD8                     _initialisation:
  2785                           	opt callstack 29
  2786  001DD8                     
  2787                           ;main.c: 390: TRISD = 0;
  2788  001DD8  0E00               	movlw	0
  2789  001DDA  6E95               	movwf	149,c	;volatile
  2790                           
  2791                           ;main.c: 392: ANSELH = 0;
  2792  001DDC  0E00               	movlw	0
  2793  001DDE  6E7F               	movwf	127,c	;volatile
  2794  001DE0                     
  2795                           ;main.c: 393: TRISB = 0xFF;
  2796  001DE0  6893               	setf	147,c	;volatile
  2797                           
  2798                           ;main.c: 395: ANSEL = 0;
  2799  001DE2  0E00               	movlw	0
  2800  001DE4  6E7E               	movwf	126,c	;volatile
  2801                           
  2802                           ;main.c: 396: TRISA = 0;
  2803  001DE6  0E00               	movlw	0
  2804  001DE8  6E92               	movwf	146,c	;volatile
  2805  001DEA                     
  2806                           ;main.c: 400: T1CONbits.TMR1ON = 1;
  2807  001DEA  80CD               	bsf	205,0,c	;volatile
  2808  001DEC                     
  2809                           ;main.c: 401: srand(TMR1);
  2810  001DEC  CFCE F0B8          	movff	4046,srand@x	;volatile
  2811  001DF0  CFCF F0B9          	movff	4047,srand@x+1	;volatile
  2812  001DF4  ECDD  F00F         	call	_srand	;wreg free
  2813  001DF8                     
  2814                           ;main.c: 404: ANSELbits.ANS7 = 1;
  2815  001DF8  8E7E               	bsf	126,7,c	;volatile
  2816  001DFA                     
  2817                           ;main.c: 406: ADCON0bits.ADON = 1;
  2818  001DFA  80C2               	bsf	194,0,c	;volatile
  2819  001DFC                     
  2820                           ;main.c: 407: ADCON1 = 0;
  2821  001DFC  0E00               	movlw	0
  2822  001DFE  6EC1               	movwf	193,c	;volatile
  2823  001E00                     
  2824                           ;main.c: 409: ADCON2bits.ADFM = 0;
  2825  001E00  9EC0               	bcf	192,7,c	;volatile
  2826  001E02                     
  2827                           ;main.c: 410: ADCON2bits.ACQT = 0;
  2828  001E02  0EC7               	movlw	-57
  2829  001E04  16C0               	andwf	192,f,c	;volatile
  2830  001E06                     
  2831                           ;main.c: 411: ADCON2bits.ADCS = 0;
  2832  001E06  0EF8               	movlw	-8
  2833  001E08  16C0               	andwf	192,f,c	;volatile
  2834  001E0A                     
  2835                           ;main.c: 415: T0CONbits.TMR0ON = 1;
  2836  001E0A  8ED5               	bsf	213,7,c	;volatile
  2837  001E0C                     
  2838                           ;main.c: 416: T0CONbits.T08BIT = 0;
  2839  001E0C  9CD5               	bcf	213,6,c	;volatile
  2840  001E0E                     
  2841                           ;main.c: 417: T0CONbits.T0CS = 0;
  2842  001E0E  9AD5               	bcf	213,5,c	;volatile
  2843  001E10                     
  2844                           ;main.c: 418: T0CONbits.PSA = 0;
  2845  001E10  96D5               	bcf	213,3,c	;volatile
  2846  001E12                     
  2847                           ;main.c: 419: T0CONbits.T0PS = 0b010;
  2848  001E12  50D5               	movf	213,w,c	;volatile
  2849  001E14  0BF8               	andlw	-8
  2850  001E16  0902               	iorlw	2
  2851  001E18  6ED5               	movwf	213,c	;volatile
  2852  001E1A                     
  2853                           ;main.c: 420: INTCONbits.TMR0IE = 1;
  2854  001E1A  8AF2               	bsf	242,5,c	;volatile
  2855  001E1C                     
  2856                           ;main.c: 421: INTCONbits.TMR0IF = 0;
  2857  001E1C  94F2               	bcf	242,2,c	;volatile
  2858  001E1E                     
  2859                           ;main.c: 422: INTCONbits.PEIE = 1;
  2860  001E1E  8CF2               	bsf	242,6,c	;volatile
  2861  001E20                     
  2862                           ;main.c: 423: INTCONbits.GIE = 1;
  2863  001E20  8EF2               	bsf	242,7,c	;volatile
  2864  001E22  0012               	return		;funcret
  2865  001E24                     __end_of_initialisation:
  2866                           	opt callstack 0
  2867                           
  2868 ;; *************** function _srand *****************
  2869 ;; Defined at:
  2870 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  x               2    0[BANK0 ] unsigned int 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		status,2
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2884 ;;      Params:         0       2       0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0
  2887 ;;      Totals:         0       2       0       0       0       0       0
  2888 ;;Total ram usage:        2 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_initialisation
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text13
  2898  001FBA                     __ptext13:
  2899                           	opt callstack 0
  2900  001FBA                     _srand:
  2901                           	opt callstack 29
  2902  001FBA  C0B8  F060         	movff	srand@x,_randx
  2903  001FBE  C0B9  F061         	movff	srand@x+1,_randx+1
  2904  001FC2  0100               	movlb	0	; () banked
  2905  001FC4  6B62               	clrf	(_randx+2)& (0+255),b
  2906  001FC6  6B63               	clrf	(_randx+3)& (0+255),b
  2907  001FC8                     
  2908                           ; BSR set to: 0
  2909  001FC8  0012               	return		;funcret
  2910  001FCA                     __end_of_srand:
  2911                           	opt callstack 0
  2912                           
  2913 ;; *************** function _initTabVue *****************
  2914 ;; Defined at:
  2915 ;;		line 114 in file "main.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  j               2    8[BANK0 ] int 
  2920 ;;  i               2   10[BANK0 ] int 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2930 ;;      Params:         0       0       0       0       0       0       0
  2931 ;;      Locals:         0       4       0       0       0       0       0
  2932 ;;      Temps:          0       2       0       0       0       0       0
  2933 ;;      Totals:         0       6       0       0       0       0       0
  2934 ;;Total ram usage:        6 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    1
  2937 ;; This function calls:
  2938 ;;		___wmul
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text14
  2945  001574                     __ptext14:
  2946                           	opt callstack 0
  2947  001574                     _initTabVue:
  2948                           	opt callstack 29
  2949  001574                     
  2950                           ;main.c: 116: for(int i=0;i<4;i++)
  2951  001574  0E00               	movlw	0
  2952  001576  0100               	movlb	0	; force () banked
  2953  001578  6FC3               	movwf	(initTabVue@i+1)& (0+255),b
  2954  00157A  0E00               	movlw	0
  2955  00157C  6FC2               	movwf	initTabVue@i& (0+255),b
  2956  00157E                     
  2957                           ; BSR set to: 0
  2958  00157E  0100               	movlb	0	; force () banked
  2959  001580  BFC3               	btfsc	(initTabVue@i+1)& (0+255),7,b
  2960  001582  EFCC  F00A         	goto	u1411
  2961  001586  51C3               	movf	(initTabVue@i+1)& (0+255),w,b
  2962  001588  E109               	bnz	u1410
  2963  00158A  0E04               	movlw	4
  2964  00158C  5DC2               	subwf	initTabVue@i& (0+255),w,b
  2965  00158E  A0D8               	btfss	status,0,c
  2966  001590  EFCC  F00A         	goto	u1411
  2967  001594  EFCE  F00A         	goto	u1410
  2968  001598                     u1411:
  2969  001598  EFD0  F00A         	goto	l2196
  2970  00159C                     u1410:
  2971  00159C  EF42  F00B         	goto	l93
  2972  0015A0                     l2196:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;main.c: 117: {;main.c: 118: for(int j=0;j<20;j++)
  2976  0015A0  0E00               	movlw	0
  2977  0015A2  0100               	movlb	0	; force () banked
  2978  0015A4  6FC1               	movwf	(initTabVue@j+1)& (0+255),b
  2979  0015A6  0E00               	movlw	0
  2980  0015A8  6FC0               	movwf	initTabVue@j& (0+255),b
  2981  0015AA                     
  2982                           ; BSR set to: 0
  2983  0015AA  0100               	movlb	0	; force () banked
  2984  0015AC  BFC1               	btfsc	(initTabVue@j+1)& (0+255),7,b
  2985  0015AE  EFE2  F00A         	goto	u1421
  2986  0015B2  51C1               	movf	(initTabVue@j+1)& (0+255),w,b
  2987  0015B4  E109               	bnz	u1420
  2988  0015B6  0E14               	movlw	20
  2989  0015B8  5DC0               	subwf	initTabVue@j& (0+255),w,b
  2990  0015BA  A0D8               	btfss	status,0,c
  2991  0015BC  EFE2  F00A         	goto	u1421
  2992  0015C0  EFE4  F00A         	goto	u1420
  2993  0015C4                     u1421:
  2994  0015C4  EFE6  F00A         	goto	l2202
  2995  0015C8                     u1420:
  2996  0015C8  EF1C  F00B         	goto	l2208
  2997  0015CC                     l2202:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;main.c: 119: {;main.c: 120: m_tabVue[i][j] = 1;
  3001  0015CC  C0C2  F0B8         	movff	initTabVue@i,___wmul@multiplier
  3002  0015D0  C0C3  F0B9         	movff	initTabVue@i+1,___wmul@multiplier+1
  3003  0015D4  0E00               	movlw	0
  3004  0015D6  0100               	movlb	0	; force () banked
  3005  0015D8  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3006  0015DA  0E15               	movlw	21
  3007  0015DC  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  3008  0015DE  ECBB  F00F         	call	___wmul	;wreg free
  3009  0015E2  0E00               	movlw	low _m_tabVue
  3010  0015E4  0100               	movlb	0	; force () banked
  3011  0015E6  6FBE               	movwf	??_initTabVue& (0+255),b
  3012  0015E8  0E01               	movlw	high _m_tabVue
  3013  0015EA  6FBF               	movwf	(??_initTabVue+1)& (0+255),b
  3014  0015EC  0100               	movlb	0	; force () banked
  3015  0015EE  51B8               	movf	?___wmul& (0+255),w,b
  3016  0015F0  0100               	movlb	0	; force () banked
  3017  0015F2  27BE               	addwf	??_initTabVue& (0+255),f,b
  3018  0015F4  0100               	movlb	0	; force () banked
  3019  0015F6  51B9               	movf	(?___wmul+1)& (0+255),w,b
  3020  0015F8  0100               	movlb	0	; force () banked
  3021  0015FA  23BF               	addwfc	(??_initTabVue+1)& (0+255),f,b
  3022  0015FC  0100               	movlb	0	; force () banked
  3023  0015FE  51C0               	movf	initTabVue@j& (0+255),w,b
  3024  001600  0100               	movlb	0	; force () banked
  3025  001602  25BE               	addwf	??_initTabVue& (0+255),w,b
  3026  001604  6ED9               	movwf	fsr2l,c
  3027  001606  0100               	movlb	0	; force () banked
  3028  001608  51C1               	movf	(initTabVue@j+1)& (0+255),w,b
  3029  00160A  0100               	movlb	0	; force () banked
  3030  00160C  21BF               	addwfc	(??_initTabVue+1)& (0+255),w,b
  3031  00160E  6EDA               	movwf	fsr2h,c
  3032  001610  0E01               	movlw	1
  3033  001612  6EDF               	movwf	indf2,c
  3034  001614                     
  3035                           ; BSR set to: 0
  3036  001614  0100               	movlb	0	; force () banked
  3037  001616  4BC0               	infsnz	initTabVue@j& (0+255),f,b
  3038  001618  2BC1               	incf	(initTabVue@j+1)& (0+255),f,b
  3039  00161A                     
  3040                           ; BSR set to: 0
  3041  00161A  0100               	movlb	0	; force () banked
  3042  00161C  BFC1               	btfsc	(initTabVue@j+1)& (0+255),7,b
  3043  00161E  EF1A  F00B         	goto	u1431
  3044  001622  51C1               	movf	(initTabVue@j+1)& (0+255),w,b
  3045  001624  E109               	bnz	u1430
  3046  001626  0E14               	movlw	20
  3047  001628  5DC0               	subwf	initTabVue@j& (0+255),w,b
  3048  00162A  A0D8               	btfss	status,0,c
  3049  00162C  EF1A  F00B         	goto	u1431
  3050  001630  EF1C  F00B         	goto	u1430
  3051  001634                     u1431:
  3052  001634  EFE6  F00A         	goto	l2202
  3053  001638                     u1430:
  3054  001638                     l2208:
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;main.c: 121: };main.c: 122: m_tabVue[i][20]=0;
  3058  001638  C0C2  F0B8         	movff	initTabVue@i,___wmul@multiplier
  3059  00163C  C0C3  F0B9         	movff	initTabVue@i+1,___wmul@multiplier+1
  3060  001640  0E00               	movlw	0
  3061  001642  0100               	movlb	0	; force () banked
  3062  001644  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3063  001646  0E15               	movlw	21
  3064  001648  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  3065  00164A  ECBB  F00F         	call	___wmul	;wreg free
  3066  00164E  0E14               	movlw	low (_m_tabVue+20)
  3067  001650  0100               	movlb	0	; force () banked
  3068  001652  25B8               	addwf	?___wmul& (0+255),w,b
  3069  001654  6ED9               	movwf	fsr2l,c
  3070  001656  0E01               	movlw	high (_m_tabVue+20)
  3071  001658  21B9               	addwfc	(?___wmul+1)& (0+255),w,b
  3072  00165A  6EDA               	movwf	fsr2h,c
  3073  00165C  0E00               	movlw	0
  3074  00165E  6EDF               	movwf	indf2,c
  3075  001660                     
  3076                           ; BSR set to: 0
  3077  001660  0100               	movlb	0	; force () banked
  3078  001662  4BC2               	infsnz	initTabVue@i& (0+255),f,b
  3079  001664  2BC3               	incf	(initTabVue@i+1)& (0+255),f,b
  3080  001666                     
  3081                           ; BSR set to: 0
  3082  001666  0100               	movlb	0	; force () banked
  3083  001668  BFC3               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3084  00166A  EF40  F00B         	goto	u1441
  3085  00166E  51C3               	movf	(initTabVue@i+1)& (0+255),w,b
  3086  001670  E109               	bnz	u1440
  3087  001672  0E04               	movlw	4
  3088  001674  5DC2               	subwf	initTabVue@i& (0+255),w,b
  3089  001676  A0D8               	btfss	status,0,c
  3090  001678  EF40  F00B         	goto	u1441
  3091  00167C  EF42  F00B         	goto	u1440
  3092  001680                     u1441:
  3093  001680  EFD0  F00A         	goto	l2196
  3094  001684                     u1440:
  3095  001684                     l93:
  3096                           
  3097                           ; BSR set to: 0
  3098  001684  0012               	return		;funcret
  3099  001686                     __end_of_initTabVue:
  3100                           	opt callstack 0
  3101                           
  3102 ;; *************** function _deplace *****************
  3103 ;; Defined at:
  3104 ;;		line 258 in file "main.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  x               2    5[BANK0 ] PTR unsigned char 
  3107 ;;		 -> main@posX(1), 
  3108 ;;  y               2    7[BANK0 ] PTR unsigned char 
  3109 ;;		 -> main@posY(1), 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3121 ;;      Params:         0       4       0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0
  3123 ;;      Temps:          0       1       0       0       0       0       0
  3124 ;;      Totals:         0       5       0       0       0       0       0
  3125 ;;Total ram usage:        5 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    4
  3128 ;; This function calls:
  3129 ;;		_getAnalog
  3130 ;;		_lcd_gotoXY
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text15
  3137  001436                     __ptext15:
  3138                           	opt callstack 0
  3139  001436                     _deplace:
  3140                           	opt callstack 26
  3141  001436                     
  3142                           ;main.c: 260: if(getAnalog(7)>150)
  3143  001436  0E07               	movlw	7
  3144  001438  EC91  F00F         	call	_getAnalog
  3145  00143C  0100               	movlb	0	; force () banked
  3146  00143E  6FC1               	movwf	??_deplace& (0+255),b
  3147  001440  0E96               	movlw	150
  3148  001442  65C1               	cpfsgt	??_deplace& (0+255),b
  3149  001444  EF26  F00A         	goto	u1571
  3150  001448  EF28  F00A         	goto	u1570
  3151  00144C                     u1571:
  3152  00144C  EF2D  F00A         	goto	l2284
  3153  001450                     u1570:
  3154  001450                     
  3155                           ; BSR set to: 0
  3156                           ;main.c: 261: {;main.c: 262: (*x)++;
  3157  001450  C0BD  FFD9         	movff	deplace@x,fsr2l
  3158  001454  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3159  001458  2ADF               	incf	indf2,f,c
  3160  00145A                     l2284:
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;main.c: 263: };main.c: 264: if(getAnalog(7)<100)
  3164  00145A  0E07               	movlw	7
  3165  00145C  EC91  F00F         	call	_getAnalog
  3166  001460  0100               	movlb	0	; force () banked
  3167  001462  6FC1               	movwf	??_deplace& (0+255),b
  3168  001464  0E64               	movlw	100
  3169  001466  61C1               	cpfslt	??_deplace& (0+255),b
  3170  001468  EF38  F00A         	goto	u1581
  3171  00146C  EF3A  F00A         	goto	u1580
  3172  001470                     u1581:
  3173  001470  EF3F  F00A         	goto	l2288
  3174  001474                     u1580:
  3175  001474                     
  3176                           ; BSR set to: 0
  3177                           ;main.c: 265: {;main.c: 266: (*x)--;
  3178  001474  C0BD  FFD9         	movff	deplace@x,fsr2l
  3179  001478  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3180  00147C  06DF               	decf	indf2,f,c
  3181  00147E                     l2288:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;main.c: 267: };main.c: 268: if(getAnalog(6)>150)
  3185  00147E  0E06               	movlw	6
  3186  001480  EC91  F00F         	call	_getAnalog
  3187  001484  0100               	movlb	0	; force () banked
  3188  001486  6FC1               	movwf	??_deplace& (0+255),b
  3189  001488  0E96               	movlw	150
  3190  00148A  65C1               	cpfsgt	??_deplace& (0+255),b
  3191  00148C  EF4A  F00A         	goto	u1591
  3192  001490  EF4C  F00A         	goto	u1590
  3193  001494                     u1591:
  3194  001494  EF51  F00A         	goto	l2292
  3195  001498                     u1590:
  3196  001498                     
  3197                           ; BSR set to: 0
  3198                           ;main.c: 269: {;main.c: 270: (*y)--;
  3199  001498  C0BF  FFD9         	movff	deplace@y,fsr2l
  3200  00149C  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3201  0014A0  06DF               	decf	indf2,f,c
  3202  0014A2                     l2292:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;main.c: 271: };main.c: 272: if(getAnalog(6)<100)
  3206  0014A2  0E06               	movlw	6
  3207  0014A4  EC91  F00F         	call	_getAnalog
  3208  0014A8  0100               	movlb	0	; force () banked
  3209  0014AA  6FC1               	movwf	??_deplace& (0+255),b
  3210  0014AC  0E64               	movlw	100
  3211  0014AE  61C1               	cpfslt	??_deplace& (0+255),b
  3212  0014B0  EF5C  F00A         	goto	u1601
  3213  0014B4  EF5E  F00A         	goto	u1600
  3214  0014B8                     u1601:
  3215  0014B8  EF63  F00A         	goto	l2296
  3216  0014BC                     u1600:
  3217  0014BC                     
  3218                           ; BSR set to: 0
  3219                           ;main.c: 273: {;main.c: 274: (*y)++;
  3220  0014BC  C0BF  FFD9         	movff	deplace@y,fsr2l
  3221  0014C0  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3222  0014C4  2ADF               	incf	indf2,f,c
  3223  0014C6                     l2296:
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;main.c: 275: };main.c: 276: if(*x<=0)
  3227  0014C6  C0BD  FFD9         	movff	deplace@x,fsr2l
  3228  0014CA  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3229  0014CE  50DF               	movf	indf2,w,c
  3230  0014D0  A4D8               	btfss	status,2,c
  3231  0014D2  EF6D  F00A         	goto	u1611
  3232  0014D6  EF6F  F00A         	goto	u1610
  3233  0014DA                     u1611:
  3234  0014DA  EF75  F00A         	goto	l2300
  3235  0014DE                     u1610:
  3236  0014DE                     
  3237                           ; BSR set to: 0
  3238                           ;main.c: 277: {;main.c: 278: *x=20;
  3239  0014DE  C0BD  FFD9         	movff	deplace@x,fsr2l
  3240  0014E2  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3241  0014E6  0E14               	movlw	20
  3242  0014E8  6EDF               	movwf	indf2,c
  3243  0014EA                     l2300:
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;main.c: 279: };main.c: 280: if(*x>20)
  3247  0014EA  C0BD  FFD9         	movff	deplace@x,fsr2l
  3248  0014EE  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3249  0014F2  0E14               	movlw	20
  3250  0014F4  64DF               	cpfsgt	indf2,c
  3251  0014F6  EF7F  F00A         	goto	u1621
  3252  0014FA  EF81  F00A         	goto	u1620
  3253  0014FE                     u1621:
  3254  0014FE  EF87  F00A         	goto	l2304
  3255  001502                     u1620:
  3256  001502                     
  3257                           ; BSR set to: 0
  3258                           ;main.c: 281: {;main.c: 282: *x=1;
  3259  001502  C0BD  FFD9         	movff	deplace@x,fsr2l
  3260  001506  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3261  00150A  0E01               	movlw	1
  3262  00150C  6EDF               	movwf	indf2,c
  3263  00150E                     l2304:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;main.c: 283: };main.c: 284: if(*y<=0)
  3267  00150E  C0BF  FFD9         	movff	deplace@y,fsr2l
  3268  001512  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3269  001516  50DF               	movf	indf2,w,c
  3270  001518  A4D8               	btfss	status,2,c
  3271  00151A  EF91  F00A         	goto	u1631
  3272  00151E  EF93  F00A         	goto	u1630
  3273  001522                     u1631:
  3274  001522  EF99  F00A         	goto	l2308
  3275  001526                     u1630:
  3276  001526                     
  3277                           ; BSR set to: 0
  3278                           ;main.c: 285: {;main.c: 286: *y=4;
  3279  001526  C0BF  FFD9         	movff	deplace@y,fsr2l
  3280  00152A  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3281  00152E  0E04               	movlw	4
  3282  001530  6EDF               	movwf	indf2,c
  3283  001532                     l2308:
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;main.c: 287: };main.c: 288: if(*y>4)
  3287  001532  C0BF  FFD9         	movff	deplace@y,fsr2l
  3288  001536  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3289  00153A  0E04               	movlw	4
  3290  00153C  64DF               	cpfsgt	indf2,c
  3291  00153E  EFA3  F00A         	goto	u1641
  3292  001542  EFA5  F00A         	goto	u1640
  3293  001546                     u1641:
  3294  001546  EFAB  F00A         	goto	l2312
  3295  00154A                     u1640:
  3296  00154A                     
  3297                           ; BSR set to: 0
  3298                           ;main.c: 289: {;main.c: 290: *y=1;
  3299  00154A  C0BF  FFD9         	movff	deplace@y,fsr2l
  3300  00154E  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3301  001552  0E01               	movlw	1
  3302  001554  6EDF               	movwf	indf2,c
  3303  001556                     l2312:
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;main.c: 291: };main.c: 292: lcd_gotoXY(*x,*y);
  3307  001556  C0BF  FFD9         	movff	deplace@y,fsr2l
  3308  00155A  C0C0  FFDA         	movff	deplace@y+1,fsr2h
  3309  00155E  50DF               	movf	indf2,w,c
  3310  001560  0100               	movlb	0	; force () banked
  3311  001562  6FBB               	movwf	lcd_gotoXY@y& (0+255),b
  3312  001564  C0BD  FFD9         	movff	deplace@x,fsr2l
  3313  001568  C0BE  FFDA         	movff	deplace@x+1,fsr2h
  3314  00156C  50DF               	movf	indf2,w,c
  3315  00156E  EC41  F00D         	call	_lcd_gotoXY
  3316  001572  0012               	return		;funcret
  3317  001574                     __end_of_deplace:
  3318                           	opt callstack 0
  3319                           
  3320 ;; *************** function _getAnalog *****************
  3321 ;; Defined at:
  3322 ;;		line 373 in file "main.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  canal           1    wreg     unsigned char 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  canal           1    1[BANK0 ] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      unsigned char 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3336 ;;      Params:         0       0       0       0       0       0       0
  3337 ;;      Locals:         0       1       0       0       0       0       0
  3338 ;;      Temps:          0       1       0       0       0       0       0
  3339 ;;      Totals:         0       2       0       0       0       0       0
  3340 ;;Total ram usage:        2 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_deplace
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text16
  3350  001F22                     __ptext16:
  3351                           	opt callstack 0
  3352  001F22                     _getAnalog:
  3353                           	opt callstack 29
  3354                           
  3355                           ;incstack = 0
  3356                           ;getAnalog@canal stored from wreg
  3357  001F22  0100               	movlb	0	; force () banked
  3358  001F24  6FB9               	movwf	getAnalog@canal& (0+255),b
  3359  001F26                     
  3360                           ;main.c: 375: ADCON0bits.CHS = canal;
  3361  001F26  C0B9  F0B8         	movff	getAnalog@canal,??_getAnalog
  3362  001F2A  0100               	movlb	0	; force () banked
  3363  001F2C  47B8               	rlncf	??_getAnalog& (0+255),f,b
  3364  001F2E  47B8               	rlncf	??_getAnalog& (0+255),f,b
  3365  001F30  50C2               	movf	194,w,c	;volatile
  3366  001F32  19B8               	xorwf	??_getAnalog& (0+255),w,b
  3367  001F34  0BC3               	andlw	-61
  3368  001F36  19B8               	xorwf	??_getAnalog& (0+255),w,b
  3369  001F38  6EC2               	movwf	194,c	;volatile
  3370  001F3A                     
  3371                           ;main.c: 377: ADCON0bits.GO_DONE = 1;
  3372  001F3A  82C2               	bsf	194,1,c	;volatile
  3373  001F3C                     l165:
  3374  001F3C  B2C2               	btfsc	194,1,c	;volatile
  3375  001F3E  EFA3  F00F         	goto	u281
  3376  001F42  EFA5  F00F         	goto	u280
  3377  001F46                     u281:
  3378  001F46  EF9E  F00F         	goto	l165
  3379  001F4A                     u280:
  3380  001F4A                     
  3381                           ;main.c: 380: return ADRESH;
  3382  001F4A  50C4               	movf	196,w,c	;volatile
  3383  001F4C  0012               	return		;funcret
  3384  001F4E                     __end_of_getAnalog:
  3385                           	opt callstack 0
  3386                           
  3387 ;; *************** function _demine *****************
  3388 ;; Defined at:
  3389 ;;		line 303 in file "main.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  x               1    wreg     unsigned char 
  3392 ;;  y               1   10[BANK0 ] unsigned char 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  x               1   15[BANK0 ] unsigned char 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      unsigned char 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3404 ;;      Params:         0       1       0       0       0       0       0
  3405 ;;      Locals:         0       1       0       0       0       0       0
  3406 ;;      Temps:          0       4       0       0       0       0       0
  3407 ;;      Totals:         0       6       0       0       0       0       0
  3408 ;;Total ram usage:        6 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    1
  3411 ;; This function calls:
  3412 ;;		_enleveTuilesAutour
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text17
  3419  00175E                     __ptext17:
  3420                           	opt callstack 0
  3421  00175E                     _demine:
  3422                           	opt callstack 29
  3423                           
  3424                           ;incstack = 0
  3425                           ;demine@x stored from wreg
  3426  00175E  0100               	movlb	0	; force () banked
  3427  001760  6FC7               	movwf	demine@x& (0+255),b
  3428  001762                     
  3429                           ;main.c: 305: m_tabVue[y][x] = m_tabMines[y][x];
  3430  001762  0100               	movlb	0	; force () banked
  3431  001764  51C2               	movf	demine@y& (0+255),w,b
  3432  001766  0D15               	mullw	21
  3433  001768  0E64               	movlw	low _m_tabMines
  3434  00176A  0100               	movlb	0	; force () banked
  3435  00176C  6FC3               	movwf	??_demine& (0+255),b
  3436  00176E  0E00               	movlw	high _m_tabMines
  3437  001770  6FC4               	movwf	(??_demine+1)& (0+255),b
  3438  001772  50F3               	movf	243,w,c
  3439  001774  27C3               	addwf	??_demine& (0+255),f,b
  3440  001776  50F4               	movf	244,w,c
  3441  001778  23C4               	addwfc	(??_demine+1)& (0+255),f,b
  3442  00177A  0100               	movlb	0	; force () banked
  3443  00177C  51C7               	movf	demine@x& (0+255),w,b
  3444  00177E  0100               	movlb	0	; force () banked
  3445  001780  25C3               	addwf	??_demine& (0+255),w,b
  3446  001782  6ED9               	movwf	fsr2l,c
  3447  001784  0100               	movlb	0	; force () banked
  3448  001786  0E00               	movlw	0
  3449  001788  0100               	movlb	0	; force () banked
  3450  00178A  21C4               	addwfc	(??_demine+1)& (0+255),w,b
  3451  00178C  6EDA               	movwf	fsr2h,c
  3452  00178E  0100               	movlb	0	; force () banked
  3453  001790  51C2               	movf	demine@y& (0+255),w,b
  3454  001792  0D15               	mullw	21
  3455  001794  0E00               	movlw	low _m_tabVue
  3456  001796  0100               	movlb	0	; force () banked
  3457  001798  6FC5               	movwf	(??_demine+2)& (0+255),b
  3458  00179A  0E01               	movlw	high _m_tabVue
  3459  00179C  6FC6               	movwf	(??_demine+3)& (0+255),b
  3460  00179E  50F3               	movf	243,w,c
  3461  0017A0  27C5               	addwf	(??_demine+2)& (0+255),f,b
  3462  0017A2  50F4               	movf	244,w,c
  3463  0017A4  23C6               	addwfc	(??_demine+3)& (0+255),f,b
  3464  0017A6  0100               	movlb	0	; force () banked
  3465  0017A8  51C7               	movf	demine@x& (0+255),w,b
  3466  0017AA  0100               	movlb	0	; force () banked
  3467  0017AC  25C5               	addwf	(??_demine+2)& (0+255),w,b
  3468  0017AE  6EE1               	movwf	fsr1l,c
  3469  0017B0  0100               	movlb	0	; force () banked
  3470  0017B2  0E00               	movlw	0
  3471  0017B4  0100               	movlb	0	; force () banked
  3472  0017B6  21C6               	addwfc	(??_demine+3)& (0+255),w,b
  3473  0017B8  6EE2               	movwf	fsr1h,c
  3474  0017BA  CFDF FFE7          	movff	indf2,indf1
  3475  0017BE                     
  3476                           ; BSR set to: 0
  3477                           ;main.c: 306: if(m_tabVue[y][x]== 2)
  3478  0017BE  0100               	movlb	0	; force () banked
  3479  0017C0  51C2               	movf	demine@y& (0+255),w,b
  3480  0017C2  0D15               	mullw	21
  3481  0017C4  0E00               	movlw	low _m_tabVue
  3482  0017C6  0100               	movlb	0	; force () banked
  3483  0017C8  6FC3               	movwf	??_demine& (0+255),b
  3484  0017CA  0E01               	movlw	high _m_tabVue
  3485  0017CC  6FC4               	movwf	(??_demine+1)& (0+255),b
  3486  0017CE  50F3               	movf	243,w,c
  3487  0017D0  27C3               	addwf	??_demine& (0+255),f,b
  3488  0017D2  50F4               	movf	244,w,c
  3489  0017D4  23C4               	addwfc	(??_demine+1)& (0+255),f,b
  3490  0017D6  0100               	movlb	0	; force () banked
  3491  0017D8  51C7               	movf	demine@x& (0+255),w,b
  3492  0017DA  0100               	movlb	0	; force () banked
  3493  0017DC  25C3               	addwf	??_demine& (0+255),w,b
  3494  0017DE  6ED9               	movwf	fsr2l,c
  3495  0017E0  0100               	movlb	0	; force () banked
  3496  0017E2  0E00               	movlw	0
  3497  0017E4  0100               	movlb	0	; force () banked
  3498  0017E6  21C4               	addwfc	(??_demine+1)& (0+255),w,b
  3499  0017E8  6EDA               	movwf	fsr2h,c
  3500  0017EA  0E02               	movlw	2
  3501  0017EC  18DE               	xorwf	postinc2,w,c
  3502  0017EE  A4D8               	btfss	status,2,c
  3503  0017F0  EFFC  F00B         	goto	u1651
  3504  0017F4  EFFE  F00B         	goto	u1650
  3505  0017F8                     u1651:
  3506  0017F8  EF01  F00C         	goto	l2322
  3507  0017FC                     u1650:
  3508  0017FC                     
  3509                           ; BSR set to: 0
  3510                           ;main.c: 307: {;main.c: 308: return 0;
  3511  0017FC  0E00               	movlw	0
  3512  0017FE  EF08  F00C         	goto	l148
  3513  001802                     l2322:
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;main.c: 309: };main.c: 310: enleveTuilesAutour(x,y);
  3517  001802  C0C2  F0B8         	movff	demine@y,enleveTuilesAutour@y
  3518  001806  0100               	movlb	0	; force () banked
  3519  001808  51C7               	movf	demine@x& (0+255),w,b
  3520  00180A  EC0C  F003         	call	_enleveTuilesAutour
  3521  00180E                     
  3522                           ;main.c: 311: return 1;
  3523  00180E  0E01               	movlw	1
  3524  001810                     l148:
  3525  001810  0012               	return		;funcret
  3526  001812                     __end_of_demine:
  3527                           	opt callstack 0
  3528                           
  3529 ;; *************** function _enleveTuilesAutour *****************
  3530 ;; Defined at:
  3531 ;;		line 320 in file "main.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  x               1    wreg     unsigned char 
  3534 ;;  y               1    0[BANK0 ] unsigned char 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  x               1    9[BANK0 ] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3546 ;;      Params:         0       1       0       0       0       0       0
  3547 ;;      Locals:         0       1       0       0       0       0       0
  3548 ;;      Temps:          0       8       0       0       0       0       0
  3549 ;;      Totals:         0      10       0       0       0       0       0
  3550 ;;Total ram usage:       10 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_demine
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text18
  3560  000618                     __ptext18:
  3561                           	opt callstack 0
  3562  000618                     _enleveTuilesAutour:
  3563                           	opt callstack 29
  3564                           
  3565                           ;incstack = 0
  3566                           ;enleveTuilesAutour@x stored from wreg
  3567  000618  0100               	movlb	0	; force () banked
  3568  00061A  6FC1               	movwf	enleveTuilesAutour@x& (0+255),b
  3569  00061C                     
  3570                           ;main.c: 322: if((m_tabMines[x-1][y-1]!=2)&&(x>=0)&&(y>=0))
  3571  00061C  0100               	movlb	0	; force () banked
  3572  00061E  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3573  000620  0D15               	mullw	21
  3574  000622  0EEA               	movlw	234
  3575  000624  0100               	movlb	0	; force () banked
  3576  000626  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  3577  000628  0EFF               	movlw	255
  3578  00062A  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3579  00062C  0E64               	movlw	low _m_tabMines
  3580  00062E  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3581  000630  0E00               	movlw	high _m_tabMines
  3582  000632  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3583  000634  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  3584  000636  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3585  000638  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  3586  00063A  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3587  00063C  50F3               	movf	243,w,c
  3588  00063E  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3589  000640  50F4               	movf	244,w,c
  3590  000642  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3591  000644  0100               	movlb	0	; force () banked
  3592  000646  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3593  000648  0100               	movlb	0	; force () banked
  3594  00064A  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3595  00064C  6ED9               	movwf	fsr2l,c
  3596  00064E  0100               	movlb	0	; force () banked
  3597  000650  0E00               	movlw	0
  3598  000652  0100               	movlb	0	; force () banked
  3599  000654  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3600  000656  6EDA               	movwf	fsr2h,c
  3601  000658  0E02               	movlw	2
  3602  00065A  18DE               	xorwf	postinc2,w,c
  3603  00065C  B4D8               	btfsc	status,2,c
  3604  00065E  EF33  F003         	goto	u1171
  3605  000662  EF35  F003         	goto	u1170
  3606  000666                     u1171:
  3607  000666  EF73  F003         	goto	l2010
  3608  00066A                     u1170:
  3609  00066A                     
  3610                           ; BSR set to: 0
  3611                           ;main.c: 323: {;main.c: 324: m_tabVue[y-1][x-1] = m_tabMines[y-1][x-1];
  3612  00066A  0100               	movlb	0	; force () banked
  3613  00066C  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3614  00066E  0D15               	mullw	21
  3615  000670  0EEA               	movlw	234
  3616  000672  0100               	movlb	0	; force () banked
  3617  000674  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  3618  000676  0EFF               	movlw	255
  3619  000678  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3620  00067A  0E64               	movlw	low _m_tabMines
  3621  00067C  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3622  00067E  0E00               	movlw	high _m_tabMines
  3623  000680  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3624  000682  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  3625  000684  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3626  000686  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  3627  000688  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3628  00068A  50F3               	movf	243,w,c
  3629  00068C  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3630  00068E  50F4               	movf	244,w,c
  3631  000690  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3632  000692  0100               	movlb	0	; force () banked
  3633  000694  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3634  000696  0100               	movlb	0	; force () banked
  3635  000698  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3636  00069A  6ED9               	movwf	fsr2l,c
  3637  00069C  0100               	movlb	0	; force () banked
  3638  00069E  0E00               	movlw	0
  3639  0006A0  0100               	movlb	0	; force () banked
  3640  0006A2  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3641  0006A4  6EDA               	movwf	fsr2h,c
  3642  0006A6  0100               	movlb	0	; force () banked
  3643  0006A8  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3644  0006AA  0D15               	mullw	21
  3645  0006AC  0EEA               	movlw	234
  3646  0006AE  0100               	movlb	0	; force () banked
  3647  0006B0  6FBD               	movwf	(??_enleveTuilesAutour+4)& (0+255),b
  3648  0006B2  0EFF               	movlw	255
  3649  0006B4  6FBE               	movwf	(??_enleveTuilesAutour+5)& (0+255),b
  3650  0006B6  0E00               	movlw	low _m_tabVue
  3651  0006B8  6FBF               	movwf	(??_enleveTuilesAutour+6)& (0+255),b
  3652  0006BA  0E01               	movlw	high _m_tabVue
  3653  0006BC  6FC0               	movwf	(??_enleveTuilesAutour+7)& (0+255),b
  3654  0006BE  51BD               	movf	(??_enleveTuilesAutour+4)& (0+255),w,b
  3655  0006C0  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  3656  0006C2  51BE               	movf	(??_enleveTuilesAutour+5)& (0+255),w,b
  3657  0006C4  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  3658  0006C6  50F3               	movf	243,w,c
  3659  0006C8  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  3660  0006CA  50F4               	movf	244,w,c
  3661  0006CC  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  3662  0006CE  0100               	movlb	0	; force () banked
  3663  0006D0  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3664  0006D2  0100               	movlb	0	; force () banked
  3665  0006D4  25BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),w,b
  3666  0006D6  6EE1               	movwf	fsr1l,c
  3667  0006D8  0100               	movlb	0	; force () banked
  3668  0006DA  0E00               	movlw	0
  3669  0006DC  0100               	movlb	0	; force () banked
  3670  0006DE  21C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),w,b
  3671  0006E0  6EE2               	movwf	fsr1h,c
  3672  0006E2  CFDF FFE7          	movff	indf2,indf1
  3673  0006E6                     l2010:
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;main.c: 325: };main.c: 326: if((m_tabMines[x][y-1]!=2)&&(y>=0))
  3677  0006E6  0100               	movlb	0	; force () banked
  3678  0006E8  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3679  0006EA  0D15               	mullw	21
  3680  0006EC  0EFF               	movlw	255
  3681  0006EE  0100               	movlb	0	; force () banked
  3682  0006F0  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  3683  0006F2  0EFF               	movlw	255
  3684  0006F4  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3685  0006F6  0E64               	movlw	low _m_tabMines
  3686  0006F8  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3687  0006FA  0E00               	movlw	high _m_tabMines
  3688  0006FC  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3689  0006FE  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  3690  000700  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3691  000702  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  3692  000704  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3693  000706  50F3               	movf	243,w,c
  3694  000708  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3695  00070A  50F4               	movf	244,w,c
  3696  00070C  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3697  00070E  0100               	movlb	0	; force () banked
  3698  000710  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3699  000712  0100               	movlb	0	; force () banked
  3700  000714  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3701  000716  6ED9               	movwf	fsr2l,c
  3702  000718  0100               	movlb	0	; force () banked
  3703  00071A  0E00               	movlw	0
  3704  00071C  0100               	movlb	0	; force () banked
  3705  00071E  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3706  000720  6EDA               	movwf	fsr2h,c
  3707  000722  0E02               	movlw	2
  3708  000724  18DE               	xorwf	postinc2,w,c
  3709  000726  B4D8               	btfsc	status,2,c
  3710  000728  EF98  F003         	goto	u1181
  3711  00072C  EF9A  F003         	goto	u1180
  3712  000730                     u1181:
  3713  000730  EFD8  F003         	goto	l2014
  3714  000734                     u1180:
  3715  000734                     
  3716                           ; BSR set to: 0
  3717                           ;main.c: 327: {;main.c: 328: m_tabVue[y-1][x] = m_tabMines[y-1][x];
  3718  000734  0100               	movlb	0	; force () banked
  3719  000736  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3720  000738  0D15               	mullw	21
  3721  00073A  0EEB               	movlw	235
  3722  00073C  0100               	movlb	0	; force () banked
  3723  00073E  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  3724  000740  0EFF               	movlw	255
  3725  000742  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3726  000744  0E64               	movlw	low _m_tabMines
  3727  000746  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3728  000748  0E00               	movlw	high _m_tabMines
  3729  00074A  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3730  00074C  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  3731  00074E  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3732  000750  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  3733  000752  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3734  000754  50F3               	movf	243,w,c
  3735  000756  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3736  000758  50F4               	movf	244,w,c
  3737  00075A  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3738  00075C  0100               	movlb	0	; force () banked
  3739  00075E  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3740  000760  0100               	movlb	0	; force () banked
  3741  000762  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3742  000764  6ED9               	movwf	fsr2l,c
  3743  000766  0100               	movlb	0	; force () banked
  3744  000768  0E00               	movlw	0
  3745  00076A  0100               	movlb	0	; force () banked
  3746  00076C  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3747  00076E  6EDA               	movwf	fsr2h,c
  3748  000770  0100               	movlb	0	; force () banked
  3749  000772  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3750  000774  0D15               	mullw	21
  3751  000776  0EEB               	movlw	235
  3752  000778  0100               	movlb	0	; force () banked
  3753  00077A  6FBD               	movwf	(??_enleveTuilesAutour+4)& (0+255),b
  3754  00077C  0EFF               	movlw	255
  3755  00077E  6FBE               	movwf	(??_enleveTuilesAutour+5)& (0+255),b
  3756  000780  0E00               	movlw	low _m_tabVue
  3757  000782  6FBF               	movwf	(??_enleveTuilesAutour+6)& (0+255),b
  3758  000784  0E01               	movlw	high _m_tabVue
  3759  000786  6FC0               	movwf	(??_enleveTuilesAutour+7)& (0+255),b
  3760  000788  51BD               	movf	(??_enleveTuilesAutour+4)& (0+255),w,b
  3761  00078A  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  3762  00078C  51BE               	movf	(??_enleveTuilesAutour+5)& (0+255),w,b
  3763  00078E  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  3764  000790  50F3               	movf	243,w,c
  3765  000792  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  3766  000794  50F4               	movf	244,w,c
  3767  000796  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  3768  000798  0100               	movlb	0	; force () banked
  3769  00079A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3770  00079C  0100               	movlb	0	; force () banked
  3771  00079E  25BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),w,b
  3772  0007A0  6EE1               	movwf	fsr1l,c
  3773  0007A2  0100               	movlb	0	; force () banked
  3774  0007A4  0E00               	movlw	0
  3775  0007A6  0100               	movlb	0	; force () banked
  3776  0007A8  21C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),w,b
  3777  0007AA  6EE2               	movwf	fsr1h,c
  3778  0007AC  CFDF FFE7          	movff	indf2,indf1
  3779  0007B0                     l2014:
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;main.c: 329: };main.c: 330: if((m_tabMines[x+1][y-1]!=2)&&(y>=0)&&(x<20))
  3783  0007B0  0100               	movlb	0	; force () banked
  3784  0007B2  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3785  0007B4  0D15               	mullw	21
  3786  0007B6  0E64               	movlw	low _m_tabMines
  3787  0007B8  0100               	movlb	0	; force () banked
  3788  0007BA  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  3789  0007BC  0E00               	movlw	high _m_tabMines
  3790  0007BE  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3791  0007C0  0E14               	movlw	20
  3792  0007C2  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3793  0007C4  0E00               	movlw	0
  3794  0007C6  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3795  0007C8  50F3               	movf	243,w,c
  3796  0007CA  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3797  0007CC  50F4               	movf	244,w,c
  3798  0007CE  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3799  0007D0  0100               	movlb	0	; force () banked
  3800  0007D2  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3801  0007D4  0100               	movlb	0	; force () banked
  3802  0007D6  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3803  0007D8  6ED9               	movwf	fsr2l,c
  3804  0007DA  0100               	movlb	0	; force () banked
  3805  0007DC  0E00               	movlw	0
  3806  0007DE  0100               	movlb	0	; force () banked
  3807  0007E0  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3808  0007E2  6EDA               	movwf	fsr2h,c
  3809  0007E4  0E02               	movlw	2
  3810  0007E6  18DE               	xorwf	postinc2,w,c
  3811  0007E8  B4D8               	btfsc	status,2,c
  3812  0007EA  EFF9  F003         	goto	u1191
  3813  0007EE  EFFB  F003         	goto	u1190
  3814  0007F2                     u1191:
  3815  0007F2  EF42  F004         	goto	l2020
  3816  0007F6                     u1190:
  3817  0007F6                     
  3818                           ; BSR set to: 0
  3819  0007F6  0E14               	movlw	20
  3820  0007F8  0100               	movlb	0	; force () banked
  3821  0007FA  61C1               	cpfslt	enleveTuilesAutour@x& (0+255),b
  3822  0007FC  EF02  F004         	goto	u1201
  3823  000800  EF04  F004         	goto	u1200
  3824  000804                     u1201:
  3825  000804  EF42  F004         	goto	l2020
  3826  000808                     u1200:
  3827  000808                     
  3828                           ; BSR set to: 0
  3829                           ;main.c: 331: {;main.c: 332: m_tabVue[y-1][x+1] = m_tabMines[y-1][x+1];
  3830  000808  0100               	movlb	0	; force () banked
  3831  00080A  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3832  00080C  0D15               	mullw	21
  3833  00080E  0EEC               	movlw	236
  3834  000810  0100               	movlb	0	; force () banked
  3835  000812  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  3836  000814  0EFF               	movlw	255
  3837  000816  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3838  000818  0E64               	movlw	low _m_tabMines
  3839  00081A  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3840  00081C  0E00               	movlw	high _m_tabMines
  3841  00081E  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3842  000820  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  3843  000822  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3844  000824  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  3845  000826  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3846  000828  50F3               	movf	243,w,c
  3847  00082A  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3848  00082C  50F4               	movf	244,w,c
  3849  00082E  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3850  000830  0100               	movlb	0	; force () banked
  3851  000832  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3852  000834  0100               	movlb	0	; force () banked
  3853  000836  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3854  000838  6ED9               	movwf	fsr2l,c
  3855  00083A  0100               	movlb	0	; force () banked
  3856  00083C  0E00               	movlw	0
  3857  00083E  0100               	movlb	0	; force () banked
  3858  000840  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3859  000842  6EDA               	movwf	fsr2h,c
  3860  000844  0100               	movlb	0	; force () banked
  3861  000846  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3862  000848  0D15               	mullw	21
  3863  00084A  0EEC               	movlw	236
  3864  00084C  0100               	movlb	0	; force () banked
  3865  00084E  6FBD               	movwf	(??_enleveTuilesAutour+4)& (0+255),b
  3866  000850  0EFF               	movlw	255
  3867  000852  6FBE               	movwf	(??_enleveTuilesAutour+5)& (0+255),b
  3868  000854  0E00               	movlw	low _m_tabVue
  3869  000856  6FBF               	movwf	(??_enleveTuilesAutour+6)& (0+255),b
  3870  000858  0E01               	movlw	high _m_tabVue
  3871  00085A  6FC0               	movwf	(??_enleveTuilesAutour+7)& (0+255),b
  3872  00085C  51BD               	movf	(??_enleveTuilesAutour+4)& (0+255),w,b
  3873  00085E  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  3874  000860  51BE               	movf	(??_enleveTuilesAutour+5)& (0+255),w,b
  3875  000862  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  3876  000864  50F3               	movf	243,w,c
  3877  000866  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  3878  000868  50F4               	movf	244,w,c
  3879  00086A  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  3880  00086C  0100               	movlb	0	; force () banked
  3881  00086E  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3882  000870  0100               	movlb	0	; force () banked
  3883  000872  25BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),w,b
  3884  000874  6EE1               	movwf	fsr1l,c
  3885  000876  0100               	movlb	0	; force () banked
  3886  000878  0E00               	movlw	0
  3887  00087A  0100               	movlb	0	; force () banked
  3888  00087C  21C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),w,b
  3889  00087E  6EE2               	movwf	fsr1h,c
  3890  000880  CFDF FFE7          	movff	indf2,indf1
  3891  000884                     l2020:
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;main.c: 333: };main.c: 334: if((m_tabMines[x-1][y+1]!=2)&&(x>=0)&&(y<4))
  3895  000884  0100               	movlb	0	; force () banked
  3896  000886  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3897  000888  0D15               	mullw	21
  3898  00088A  0EEC               	movlw	236
  3899  00088C  0100               	movlb	0	; force () banked
  3900  00088E  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  3901  000890  0EFF               	movlw	255
  3902  000892  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3903  000894  0E64               	movlw	low _m_tabMines
  3904  000896  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3905  000898  0E00               	movlw	high _m_tabMines
  3906  00089A  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3907  00089C  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  3908  00089E  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3909  0008A0  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  3910  0008A2  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3911  0008A4  50F3               	movf	243,w,c
  3912  0008A6  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3913  0008A8  50F4               	movf	244,w,c
  3914  0008AA  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3915  0008AC  0100               	movlb	0	; force () banked
  3916  0008AE  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3917  0008B0  0100               	movlb	0	; force () banked
  3918  0008B2  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3919  0008B4  6ED9               	movwf	fsr2l,c
  3920  0008B6  0100               	movlb	0	; force () banked
  3921  0008B8  0E00               	movlw	0
  3922  0008BA  0100               	movlb	0	; force () banked
  3923  0008BC  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3924  0008BE  6EDA               	movwf	fsr2h,c
  3925  0008C0  0E02               	movlw	2
  3926  0008C2  18DE               	xorwf	postinc2,w,c
  3927  0008C4  B4D8               	btfsc	status,2,c
  3928  0008C6  EF67  F004         	goto	u1211
  3929  0008CA  EF69  F004         	goto	u1210
  3930  0008CE                     u1211:
  3931  0008CE  EFA8  F004         	goto	l2026
  3932  0008D2                     u1210:
  3933  0008D2                     
  3934                           ; BSR set to: 0
  3935  0008D2  0E04               	movlw	4
  3936  0008D4  0100               	movlb	0	; force () banked
  3937  0008D6  61B8               	cpfslt	enleveTuilesAutour@y& (0+255),b
  3938  0008D8  EF70  F004         	goto	u1221
  3939  0008DC  EF72  F004         	goto	u1220
  3940  0008E0                     u1221:
  3941  0008E0  EFA8  F004         	goto	l2026
  3942  0008E4                     u1220:
  3943  0008E4                     
  3944                           ; BSR set to: 0
  3945                           ;main.c: 335: {;main.c: 336: m_tabVue[y+1][x-1] = m_tabMines[y+1][x-1];
  3946  0008E4  0100               	movlb	0	; force () banked
  3947  0008E6  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3948  0008E8  0D15               	mullw	21
  3949  0008EA  0E64               	movlw	low _m_tabMines
  3950  0008EC  0100               	movlb	0	; force () banked
  3951  0008EE  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  3952  0008F0  0E00               	movlw	high _m_tabMines
  3953  0008F2  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3954  0008F4  0E14               	movlw	20
  3955  0008F6  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3956  0008F8  0E00               	movlw	0
  3957  0008FA  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3958  0008FC  50F3               	movf	243,w,c
  3959  0008FE  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3960  000900  50F4               	movf	244,w,c
  3961  000902  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3962  000904  0100               	movlb	0	; force () banked
  3963  000906  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3964  000908  0100               	movlb	0	; force () banked
  3965  00090A  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3966  00090C  6ED9               	movwf	fsr2l,c
  3967  00090E  0100               	movlb	0	; force () banked
  3968  000910  0E00               	movlw	0
  3969  000912  0100               	movlb	0	; force () banked
  3970  000914  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3971  000916  6EDA               	movwf	fsr2h,c
  3972  000918  0100               	movlb	0	; force () banked
  3973  00091A  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  3974  00091C  0D15               	mullw	21
  3975  00091E  0E00               	movlw	low _m_tabVue
  3976  000920  0100               	movlb	0	; force () banked
  3977  000922  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3978  000924  0E01               	movlw	high _m_tabVue
  3979  000926  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  3980  000928  0E14               	movlw	20
  3981  00092A  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3982  00092C  0E00               	movlw	0
  3983  00092E  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3984  000930  50F3               	movf	243,w,c
  3985  000932  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  3986  000934  50F4               	movf	244,w,c
  3987  000936  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  3988  000938  0100               	movlb	0	; force () banked
  3989  00093A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  3990  00093C  0100               	movlb	0	; force () banked
  3991  00093E  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3992  000940  6EE1               	movwf	fsr1l,c
  3993  000942  0100               	movlb	0	; force () banked
  3994  000944  0E00               	movlw	0
  3995  000946  0100               	movlb	0	; force () banked
  3996  000948  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  3997  00094A  6EE2               	movwf	fsr1h,c
  3998  00094C  CFDF FFE7          	movff	indf2,indf1
  3999  000950                     l2026:
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;main.c: 337: };main.c: 338: if((m_tabMines[x-1][y]!=2)&&(x>=0))
  4003  000950  0100               	movlb	0	; force () banked
  4004  000952  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4005  000954  0D15               	mullw	21
  4006  000956  0EEB               	movlw	235
  4007  000958  0100               	movlb	0	; force () banked
  4008  00095A  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4009  00095C  0EFF               	movlw	255
  4010  00095E  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4011  000960  0E64               	movlw	low _m_tabMines
  4012  000962  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4013  000964  0E00               	movlw	high _m_tabMines
  4014  000966  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4015  000968  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  4016  00096A  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4017  00096C  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  4018  00096E  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4019  000970  50F3               	movf	243,w,c
  4020  000972  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4021  000974  50F4               	movf	244,w,c
  4022  000976  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4023  000978  0100               	movlb	0	; force () banked
  4024  00097A  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4025  00097C  0100               	movlb	0	; force () banked
  4026  00097E  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4027  000980  6ED9               	movwf	fsr2l,c
  4028  000982  0100               	movlb	0	; force () banked
  4029  000984  0E00               	movlw	0
  4030  000986  0100               	movlb	0	; force () banked
  4031  000988  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4032  00098A  6EDA               	movwf	fsr2h,c
  4033  00098C  0E02               	movlw	2
  4034  00098E  18DE               	xorwf	postinc2,w,c
  4035  000990  B4D8               	btfsc	status,2,c
  4036  000992  EFCD  F004         	goto	u1231
  4037  000996  EFCF  F004         	goto	u1230
  4038  00099A                     u1231:
  4039  00099A  EF0D  F005         	goto	l2030
  4040  00099E                     u1230:
  4041  00099E                     
  4042                           ; BSR set to: 0
  4043                           ;main.c: 339: {;main.c: 340: m_tabVue[y][x-1] = m_tabMines[y][x-1];
  4044  00099E  0100               	movlb	0	; force () banked
  4045  0009A0  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4046  0009A2  0D15               	mullw	21
  4047  0009A4  0EFF               	movlw	255
  4048  0009A6  0100               	movlb	0	; force () banked
  4049  0009A8  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4050  0009AA  0EFF               	movlw	255
  4051  0009AC  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4052  0009AE  0E64               	movlw	low _m_tabMines
  4053  0009B0  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4054  0009B2  0E00               	movlw	high _m_tabMines
  4055  0009B4  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4056  0009B6  51B9               	movf	??_enleveTuilesAutour& (0+255),w,b
  4057  0009B8  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4058  0009BA  51BA               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  4059  0009BC  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4060  0009BE  50F3               	movf	243,w,c
  4061  0009C0  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4062  0009C2  50F4               	movf	244,w,c
  4063  0009C4  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4064  0009C6  0100               	movlb	0	; force () banked
  4065  0009C8  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4066  0009CA  0100               	movlb	0	; force () banked
  4067  0009CC  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4068  0009CE  6ED9               	movwf	fsr2l,c
  4069  0009D0  0100               	movlb	0	; force () banked
  4070  0009D2  0E00               	movlw	0
  4071  0009D4  0100               	movlb	0	; force () banked
  4072  0009D6  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4073  0009D8  6EDA               	movwf	fsr2h,c
  4074  0009DA  0100               	movlb	0	; force () banked
  4075  0009DC  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4076  0009DE  0D15               	mullw	21
  4077  0009E0  0EFF               	movlw	255
  4078  0009E2  0100               	movlb	0	; force () banked
  4079  0009E4  6FBD               	movwf	(??_enleveTuilesAutour+4)& (0+255),b
  4080  0009E6  0EFF               	movlw	255
  4081  0009E8  6FBE               	movwf	(??_enleveTuilesAutour+5)& (0+255),b
  4082  0009EA  0E00               	movlw	low _m_tabVue
  4083  0009EC  6FBF               	movwf	(??_enleveTuilesAutour+6)& (0+255),b
  4084  0009EE  0E01               	movlw	high _m_tabVue
  4085  0009F0  6FC0               	movwf	(??_enleveTuilesAutour+7)& (0+255),b
  4086  0009F2  51BD               	movf	(??_enleveTuilesAutour+4)& (0+255),w,b
  4087  0009F4  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  4088  0009F6  51BE               	movf	(??_enleveTuilesAutour+5)& (0+255),w,b
  4089  0009F8  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  4090  0009FA  50F3               	movf	243,w,c
  4091  0009FC  27BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),f,b
  4092  0009FE  50F4               	movf	244,w,c
  4093  000A00  23C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),f,b
  4094  000A02  0100               	movlb	0	; force () banked
  4095  000A04  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4096  000A06  0100               	movlb	0	; force () banked
  4097  000A08  25BF               	addwf	(??_enleveTuilesAutour+6)& (0+255),w,b
  4098  000A0A  6EE1               	movwf	fsr1l,c
  4099  000A0C  0100               	movlb	0	; force () banked
  4100  000A0E  0E00               	movlw	0
  4101  000A10  0100               	movlb	0	; force () banked
  4102  000A12  21C0               	addwfc	(??_enleveTuilesAutour+7)& (0+255),w,b
  4103  000A14  6EE2               	movwf	fsr1h,c
  4104  000A16  CFDF FFE7          	movff	indf2,indf1
  4105  000A1A                     l2030:
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;main.c: 341: };main.c: 342: if((m_tabMines[x][y+1]!=2)&&(y<4))
  4109  000A1A  0100               	movlb	0	; force () banked
  4110  000A1C  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4111  000A1E  0D15               	mullw	21
  4112  000A20  0E64               	movlw	low _m_tabMines
  4113  000A22  0100               	movlb	0	; force () banked
  4114  000A24  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4115  000A26  0E00               	movlw	high _m_tabMines
  4116  000A28  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4117  000A2A  0E01               	movlw	1
  4118  000A2C  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4119  000A2E  0E00               	movlw	0
  4120  000A30  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4121  000A32  50F3               	movf	243,w,c
  4122  000A34  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4123  000A36  50F4               	movf	244,w,c
  4124  000A38  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4125  000A3A  0100               	movlb	0	; force () banked
  4126  000A3C  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4127  000A3E  0100               	movlb	0	; force () banked
  4128  000A40  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4129  000A42  6ED9               	movwf	fsr2l,c
  4130  000A44  0100               	movlb	0	; force () banked
  4131  000A46  0E00               	movlw	0
  4132  000A48  0100               	movlb	0	; force () banked
  4133  000A4A  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4134  000A4C  6EDA               	movwf	fsr2h,c
  4135  000A4E  0E02               	movlw	2
  4136  000A50  18DE               	xorwf	postinc2,w,c
  4137  000A52  B4D8               	btfsc	status,2,c
  4138  000A54  EF2E  F005         	goto	u1241
  4139  000A58  EF30  F005         	goto	u1240
  4140  000A5C                     u1241:
  4141  000A5C  EF6F  F005         	goto	l2036
  4142  000A60                     u1240:
  4143  000A60                     
  4144                           ; BSR set to: 0
  4145  000A60  0E04               	movlw	4
  4146  000A62  0100               	movlb	0	; force () banked
  4147  000A64  61B8               	cpfslt	enleveTuilesAutour@y& (0+255),b
  4148  000A66  EF37  F005         	goto	u1251
  4149  000A6A  EF39  F005         	goto	u1250
  4150  000A6E                     u1251:
  4151  000A6E  EF6F  F005         	goto	l2036
  4152  000A72                     u1250:
  4153  000A72                     
  4154                           ; BSR set to: 0
  4155                           ;main.c: 343: {;main.c: 344: m_tabVue[y+1][x] = m_tabMines[y+1][x];
  4156  000A72  0100               	movlb	0	; force () banked
  4157  000A74  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4158  000A76  0D15               	mullw	21
  4159  000A78  0E64               	movlw	low _m_tabMines
  4160  000A7A  0100               	movlb	0	; force () banked
  4161  000A7C  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4162  000A7E  0E00               	movlw	high _m_tabMines
  4163  000A80  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4164  000A82  0E15               	movlw	21
  4165  000A84  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4166  000A86  0E00               	movlw	0
  4167  000A88  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4168  000A8A  50F3               	movf	243,w,c
  4169  000A8C  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4170  000A8E  50F4               	movf	244,w,c
  4171  000A90  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4172  000A92  0100               	movlb	0	; force () banked
  4173  000A94  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4174  000A96  0100               	movlb	0	; force () banked
  4175  000A98  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4176  000A9A  6ED9               	movwf	fsr2l,c
  4177  000A9C  0100               	movlb	0	; force () banked
  4178  000A9E  0E00               	movlw	0
  4179  000AA0  0100               	movlb	0	; force () banked
  4180  000AA2  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4181  000AA4  6EDA               	movwf	fsr2h,c
  4182  000AA6  0100               	movlb	0	; force () banked
  4183  000AA8  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4184  000AAA  0D15               	mullw	21
  4185  000AAC  0E00               	movlw	low _m_tabVue
  4186  000AAE  0100               	movlb	0	; force () banked
  4187  000AB0  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4188  000AB2  0E01               	movlw	high _m_tabVue
  4189  000AB4  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4190  000AB6  0E15               	movlw	21
  4191  000AB8  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4192  000ABA  0E00               	movlw	0
  4193  000ABC  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4194  000ABE  50F3               	movf	243,w,c
  4195  000AC0  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4196  000AC2  50F4               	movf	244,w,c
  4197  000AC4  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4198  000AC6  0100               	movlb	0	; force () banked
  4199  000AC8  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4200  000ACA  0100               	movlb	0	; force () banked
  4201  000ACC  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4202  000ACE  6EE1               	movwf	fsr1l,c
  4203  000AD0  0100               	movlb	0	; force () banked
  4204  000AD2  0E00               	movlw	0
  4205  000AD4  0100               	movlb	0	; force () banked
  4206  000AD6  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4207  000AD8  6EE2               	movwf	fsr1h,c
  4208  000ADA  CFDF FFE7          	movff	indf2,indf1
  4209  000ADE                     l2036:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;main.c: 345: };main.c: 346: if((m_tabMines[x+1][y+1]!=2)&&(y<20)&&(x<4))
  4213  000ADE  0100               	movlb	0	; force () banked
  4214  000AE0  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4215  000AE2  0D15               	mullw	21
  4216  000AE4  0E64               	movlw	low _m_tabMines
  4217  000AE6  0100               	movlb	0	; force () banked
  4218  000AE8  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4219  000AEA  0E00               	movlw	high _m_tabMines
  4220  000AEC  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4221  000AEE  0E16               	movlw	22
  4222  000AF0  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4223  000AF2  0E00               	movlw	0
  4224  000AF4  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4225  000AF6  50F3               	movf	243,w,c
  4226  000AF8  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4227  000AFA  50F4               	movf	244,w,c
  4228  000AFC  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4229  000AFE  0100               	movlb	0	; force () banked
  4230  000B00  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4231  000B02  0100               	movlb	0	; force () banked
  4232  000B04  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4233  000B06  6ED9               	movwf	fsr2l,c
  4234  000B08  0100               	movlb	0	; force () banked
  4235  000B0A  0E00               	movlw	0
  4236  000B0C  0100               	movlb	0	; force () banked
  4237  000B0E  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4238  000B10  6EDA               	movwf	fsr2h,c
  4239  000B12  0E02               	movlw	2
  4240  000B14  18DE               	xorwf	postinc2,w,c
  4241  000B16  B4D8               	btfsc	status,2,c
  4242  000B18  EF90  F005         	goto	u1261
  4243  000B1C  EF92  F005         	goto	u1260
  4244  000B20                     u1261:
  4245  000B20  EFDA  F005         	goto	l2044
  4246  000B24                     u1260:
  4247  000B24                     
  4248                           ; BSR set to: 0
  4249  000B24  0E14               	movlw	20
  4250  000B26  0100               	movlb	0	; force () banked
  4251  000B28  61B8               	cpfslt	enleveTuilesAutour@y& (0+255),b
  4252  000B2A  EF99  F005         	goto	u1271
  4253  000B2E  EF9B  F005         	goto	u1270
  4254  000B32                     u1271:
  4255  000B32  EFDA  F005         	goto	l2044
  4256  000B36                     u1270:
  4257  000B36                     
  4258                           ; BSR set to: 0
  4259  000B36  0E04               	movlw	4
  4260  000B38  0100               	movlb	0	; force () banked
  4261  000B3A  61C1               	cpfslt	enleveTuilesAutour@x& (0+255),b
  4262  000B3C  EFA2  F005         	goto	u1281
  4263  000B40  EFA4  F005         	goto	u1280
  4264  000B44                     u1281:
  4265  000B44  EFDA  F005         	goto	l2044
  4266  000B48                     u1280:
  4267  000B48                     
  4268                           ; BSR set to: 0
  4269                           ;main.c: 347: {;main.c: 348: m_tabVue[y+1][x+1] = m_tabMines[y+1][x+1];
  4270  000B48  0100               	movlb	0	; force () banked
  4271  000B4A  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4272  000B4C  0D15               	mullw	21
  4273  000B4E  0E64               	movlw	low _m_tabMines
  4274  000B50  0100               	movlb	0	; force () banked
  4275  000B52  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4276  000B54  0E00               	movlw	high _m_tabMines
  4277  000B56  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4278  000B58  0E16               	movlw	22
  4279  000B5A  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4280  000B5C  0E00               	movlw	0
  4281  000B5E  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4282  000B60  50F3               	movf	243,w,c
  4283  000B62  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4284  000B64  50F4               	movf	244,w,c
  4285  000B66  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4286  000B68  0100               	movlb	0	; force () banked
  4287  000B6A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4288  000B6C  0100               	movlb	0	; force () banked
  4289  000B6E  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4290  000B70  6ED9               	movwf	fsr2l,c
  4291  000B72  0100               	movlb	0	; force () banked
  4292  000B74  0E00               	movlw	0
  4293  000B76  0100               	movlb	0	; force () banked
  4294  000B78  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4295  000B7A  6EDA               	movwf	fsr2h,c
  4296  000B7C  0100               	movlb	0	; force () banked
  4297  000B7E  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4298  000B80  0D15               	mullw	21
  4299  000B82  0E00               	movlw	low _m_tabVue
  4300  000B84  0100               	movlb	0	; force () banked
  4301  000B86  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4302  000B88  0E01               	movlw	high _m_tabVue
  4303  000B8A  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4304  000B8C  0E16               	movlw	22
  4305  000B8E  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4306  000B90  0E00               	movlw	0
  4307  000B92  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4308  000B94  50F3               	movf	243,w,c
  4309  000B96  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4310  000B98  50F4               	movf	244,w,c
  4311  000B9A  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4312  000B9C  0100               	movlb	0	; force () banked
  4313  000B9E  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4314  000BA0  0100               	movlb	0	; force () banked
  4315  000BA2  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4316  000BA4  6EE1               	movwf	fsr1l,c
  4317  000BA6  0100               	movlb	0	; force () banked
  4318  000BA8  0E00               	movlw	0
  4319  000BAA  0100               	movlb	0	; force () banked
  4320  000BAC  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4321  000BAE  6EE2               	movwf	fsr1h,c
  4322  000BB0  CFDF FFE7          	movff	indf2,indf1
  4323  000BB4                     l2044:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;main.c: 349: };main.c: 350: if((m_tabMines[x+1][y]!=2)&&(x<20))
  4327  000BB4  0100               	movlb	0	; force () banked
  4328  000BB6  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4329  000BB8  0D15               	mullw	21
  4330  000BBA  0E64               	movlw	low _m_tabMines
  4331  000BBC  0100               	movlb	0	; force () banked
  4332  000BBE  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4333  000BC0  0E00               	movlw	high _m_tabMines
  4334  000BC2  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4335  000BC4  0E15               	movlw	21
  4336  000BC6  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4337  000BC8  0E00               	movlw	0
  4338  000BCA  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4339  000BCC  50F3               	movf	243,w,c
  4340  000BCE  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4341  000BD0  50F4               	movf	244,w,c
  4342  000BD2  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4343  000BD4  0100               	movlb	0	; force () banked
  4344  000BD6  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4345  000BD8  0100               	movlb	0	; force () banked
  4346  000BDA  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4347  000BDC  6ED9               	movwf	fsr2l,c
  4348  000BDE  0100               	movlb	0	; force () banked
  4349  000BE0  0E00               	movlw	0
  4350  000BE2  0100               	movlb	0	; force () banked
  4351  000BE4  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4352  000BE6  6EDA               	movwf	fsr2h,c
  4353  000BE8  0E02               	movlw	2
  4354  000BEA  18DE               	xorwf	postinc2,w,c
  4355  000BEC  B4D8               	btfsc	status,2,c
  4356  000BEE  EFFB  F005         	goto	u1291
  4357  000BF2  EFFD  F005         	goto	u1290
  4358  000BF6                     u1291:
  4359  000BF6  EF3C  F006         	goto	l159
  4360  000BFA                     u1290:
  4361  000BFA                     
  4362                           ; BSR set to: 0
  4363  000BFA  0E14               	movlw	20
  4364  000BFC  0100               	movlb	0	; force () banked
  4365  000BFE  61C1               	cpfslt	enleveTuilesAutour@x& (0+255),b
  4366  000C00  EF04  F006         	goto	u1301
  4367  000C04  EF06  F006         	goto	u1300
  4368  000C08                     u1301:
  4369  000C08  EF3C  F006         	goto	l159
  4370  000C0C                     u1300:
  4371  000C0C                     
  4372                           ; BSR set to: 0
  4373                           ;main.c: 351: {;main.c: 352: m_tabVue[y][x+1] = m_tabMines[y][x+1];
  4374  000C0C  0100               	movlb	0	; force () banked
  4375  000C0E  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4376  000C10  0D15               	mullw	21
  4377  000C12  0E64               	movlw	low _m_tabMines
  4378  000C14  0100               	movlb	0	; force () banked
  4379  000C16  6FB9               	movwf	??_enleveTuilesAutour& (0+255),b
  4380  000C18  0E00               	movlw	high _m_tabMines
  4381  000C1A  6FBA               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  4382  000C1C  0E01               	movlw	1
  4383  000C1E  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4384  000C20  0E00               	movlw	0
  4385  000C22  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4386  000C24  50F3               	movf	243,w,c
  4387  000C26  27B9               	addwf	??_enleveTuilesAutour& (0+255),f,b
  4388  000C28  50F4               	movf	244,w,c
  4389  000C2A  23BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  4390  000C2C  0100               	movlb	0	; force () banked
  4391  000C2E  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4392  000C30  0100               	movlb	0	; force () banked
  4393  000C32  25B9               	addwf	??_enleveTuilesAutour& (0+255),w,b
  4394  000C34  6ED9               	movwf	fsr2l,c
  4395  000C36  0100               	movlb	0	; force () banked
  4396  000C38  0E00               	movlw	0
  4397  000C3A  0100               	movlb	0	; force () banked
  4398  000C3C  21BA               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  4399  000C3E  6EDA               	movwf	fsr2h,c
  4400  000C40  0100               	movlb	0	; force () banked
  4401  000C42  51B8               	movf	enleveTuilesAutour@y& (0+255),w,b
  4402  000C44  0D15               	mullw	21
  4403  000C46  0E00               	movlw	low _m_tabVue
  4404  000C48  0100               	movlb	0	; force () banked
  4405  000C4A  6FBB               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4406  000C4C  0E01               	movlw	high _m_tabVue
  4407  000C4E  6FBC               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4408  000C50  0E01               	movlw	1
  4409  000C52  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4410  000C54  0E00               	movlw	0
  4411  000C56  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4412  000C58  50F3               	movf	243,w,c
  4413  000C5A  27BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  4414  000C5C  50F4               	movf	244,w,c
  4415  000C5E  23BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  4416  000C60  0100               	movlb	0	; force () banked
  4417  000C62  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  4418  000C64  0100               	movlb	0	; force () banked
  4419  000C66  25BB               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4420  000C68  6EE1               	movwf	fsr1l,c
  4421  000C6A  0100               	movlb	0	; force () banked
  4422  000C6C  0E00               	movlw	0
  4423  000C6E  0100               	movlb	0	; force () banked
  4424  000C70  21BC               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  4425  000C72  6EE2               	movwf	fsr1h,c
  4426  000C74  CFDF FFE7          	movff	indf2,indf1
  4427  000C78                     l159:
  4428                           
  4429                           ; BSR set to: 0
  4430  000C78  0012               	return		;funcret
  4431  000C7A                     __end_of_enleveTuilesAutour:
  4432                           	opt callstack 0
  4433                           
  4434 ;; *************** function _afficheTabVue *****************
  4435 ;; Defined at:
  4436 ;;		line 131 in file "main.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;		None
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  i               2    9[BANK0 ] int 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4450 ;;      Params:         0       0       0       0       0       0       0
  4451 ;;      Locals:         0       2       0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0
  4453 ;;      Totals:         0       2       0       0       0       0       0
  4454 ;;Total ram usage:        2 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    5
  4457 ;; This function calls:
  4458 ;;		___wmul
  4459 ;;		_lcd_gotoXY
  4460 ;;		_lcd_putMessage
  4461 ;; This function is called by:
  4462 ;;		_main
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text19
  4467  001966                     __ptext19:
  4468                           	opt callstack 0
  4469  001966                     _afficheTabVue:
  4470                           	opt callstack 25
  4471  001966                     
  4472                           ;main.c: 133: for(int i=0;i<4;i++)
  4473  001966  0E00               	movlw	0
  4474  001968  0100               	movlb	0	; force () banked
  4475  00196A  6FC2               	movwf	(afficheTabVue@i+1)& (0+255),b
  4476  00196C  0E00               	movlw	0
  4477  00196E  6FC1               	movwf	afficheTabVue@i& (0+255),b
  4478  001970                     
  4479                           ; BSR set to: 0
  4480  001970  0100               	movlb	0	; force () banked
  4481  001972  BFC2               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  4482  001974  EFC5  F00C         	goto	u1451
  4483  001978  51C2               	movf	(afficheTabVue@i+1)& (0+255),w,b
  4484  00197A  E109               	bnz	u1450
  4485  00197C  0E04               	movlw	4
  4486  00197E  5DC1               	subwf	afficheTabVue@i& (0+255),w,b
  4487  001980  A0D8               	btfss	status,0,c
  4488  001982  EFC5  F00C         	goto	u1451
  4489  001986  EFC7  F00C         	goto	u1450
  4490  00198A                     u1451:
  4491  00198A  EFC9  F00C         	goto	l2220
  4492  00198E                     u1450:
  4493  00198E  EFF9  F00C         	goto	l98
  4494  001992                     l2220:
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;main.c: 134: {;main.c: 135: lcd_gotoXY(1,i+1);
  4498  001992  0100               	movlb	0	; force () banked
  4499  001994  29C1               	incf	afficheTabVue@i& (0+255),w,b
  4500  001996  0100               	movlb	0	; force () banked
  4501  001998  6FBB               	movwf	lcd_gotoXY@y& (0+255),b
  4502  00199A  0E01               	movlw	1
  4503  00199C  EC41  F00D         	call	_lcd_gotoXY
  4504  0019A0                     
  4505                           ;main.c: 136: lcd_putMessage(m_tabVue[i]);
  4506  0019A0  C0C1  F0B8         	movff	afficheTabVue@i,___wmul@multiplier
  4507  0019A4  C0C2  F0B9         	movff	afficheTabVue@i+1,___wmul@multiplier+1
  4508  0019A8  0E00               	movlw	0
  4509  0019AA  0100               	movlb	0	; force () banked
  4510  0019AC  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4511  0019AE  0E15               	movlw	21
  4512  0019B0  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  4513  0019B2  ECBB  F00F         	call	___wmul	;wreg free
  4514  0019B6  0E00               	movlw	low _m_tabVue
  4515  0019B8  0100               	movlb	0	; force () banked
  4516  0019BA  25B8               	addwf	?___wmul& (0+255),w,b
  4517  0019BC  0100               	movlb	0	; force () banked
  4518  0019BE  6FBE               	movwf	lcd_putMessage@chaine& (0+255),b
  4519  0019C0  0E01               	movlw	high _m_tabVue
  4520  0019C2  0100               	movlb	0	; force () banked
  4521  0019C4  21B9               	addwfc	(?___wmul+1)& (0+255),w,b
  4522  0019C6  0100               	movlb	0	; force () banked
  4523  0019C8  6FBF               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4524  0019CA  ECC5  F00E         	call	_lcd_putMessage	;wreg free
  4525  0019CE  0100               	movlb	0	; force () banked
  4526  0019D0  4BC1               	infsnz	afficheTabVue@i& (0+255),f,b
  4527  0019D2  2BC2               	incf	(afficheTabVue@i+1)& (0+255),f,b
  4528  0019D4                     
  4529                           ; BSR set to: 0
  4530  0019D4  0100               	movlb	0	; force () banked
  4531  0019D6  BFC2               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  4532  0019D8  EFF7  F00C         	goto	u1461
  4533  0019DC  51C2               	movf	(afficheTabVue@i+1)& (0+255),w,b
  4534  0019DE  E109               	bnz	u1460
  4535  0019E0  0E04               	movlw	4
  4536  0019E2  5DC1               	subwf	afficheTabVue@i& (0+255),w,b
  4537  0019E4  A0D8               	btfss	status,0,c
  4538  0019E6  EFF7  F00C         	goto	u1461
  4539  0019EA  EFF9  F00C         	goto	u1460
  4540  0019EE                     u1461:
  4541  0019EE  EFC9  F00C         	goto	l2220
  4542  0019F2                     u1460:
  4543  0019F2                     l98:
  4544                           
  4545                           ; BSR set to: 0
  4546  0019F2  0012               	return		;funcret
  4547  0019F4                     __end_of_afficheTabVue:
  4548                           	opt callstack 0
  4549                           
  4550 ;; *************** function _afficheTabMines *****************
  4551 ;; Defined at:
  4552 ;;		line 145 in file "main.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;		None
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  i               2    9[BANK0 ] int 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4566 ;;      Params:         0       0       0       0       0       0       0
  4567 ;;      Locals:         0       2       0       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0
  4569 ;;      Totals:         0       2       0       0       0       0       0
  4570 ;;Total ram usage:        2 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    5
  4573 ;; This function calls:
  4574 ;;		___wmul
  4575 ;;		_lcd_gotoXY
  4576 ;;		_lcd_putMessage
  4577 ;; This function is called by:
  4578 ;;		_main
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text20
  4583  0019F4                     __ptext20:
  4584                           	opt callstack 0
  4585  0019F4                     _afficheTabMines:
  4586                           	opt callstack 25
  4587  0019F4                     
  4588                           ;main.c: 147: for(int i=0;i<4;i++)
  4589  0019F4  0E00               	movlw	0
  4590  0019F6  0100               	movlb	0	; force () banked
  4591  0019F8  6FC2               	movwf	(afficheTabMines@i+1)& (0+255),b
  4592  0019FA  0E00               	movlw	0
  4593  0019FC  6FC1               	movwf	afficheTabMines@i& (0+255),b
  4594  0019FE                     
  4595                           ; BSR set to: 0
  4596  0019FE  0100               	movlb	0	; force () banked
  4597  001A00  BFC2               	btfsc	(afficheTabMines@i+1)& (0+255),7,b
  4598  001A02  EF0C  F00D         	goto	u1661
  4599  001A06  51C2               	movf	(afficheTabMines@i+1)& (0+255),w,b
  4600  001A08  E109               	bnz	u1660
  4601  001A0A  0E04               	movlw	4
  4602  001A0C  5DC1               	subwf	afficheTabMines@i& (0+255),w,b
  4603  001A0E  A0D8               	btfss	status,0,c
  4604  001A10  EF0C  F00D         	goto	u1661
  4605  001A14  EF0E  F00D         	goto	u1660
  4606  001A18                     u1661:
  4607  001A18  EF10  F00D         	goto	l2334
  4608  001A1C                     u1660:
  4609  001A1C  EF40  F00D         	goto	l103
  4610  001A20                     l2334:
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;main.c: 148: {;main.c: 149: lcd_gotoXY(1,i+1);
  4614  001A20  0100               	movlb	0	; force () banked
  4615  001A22  29C1               	incf	afficheTabMines@i& (0+255),w,b
  4616  001A24  0100               	movlb	0	; force () banked
  4617  001A26  6FBB               	movwf	lcd_gotoXY@y& (0+255),b
  4618  001A28  0E01               	movlw	1
  4619  001A2A  EC41  F00D         	call	_lcd_gotoXY
  4620  001A2E                     
  4621                           ;main.c: 150: lcd_putMessage(m_tabMines[i]);
  4622  001A2E  C0C1  F0B8         	movff	afficheTabMines@i,___wmul@multiplier
  4623  001A32  C0C2  F0B9         	movff	afficheTabMines@i+1,___wmul@multiplier+1
  4624  001A36  0E00               	movlw	0
  4625  001A38  0100               	movlb	0	; force () banked
  4626  001A3A  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4627  001A3C  0E15               	movlw	21
  4628  001A3E  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  4629  001A40  ECBB  F00F         	call	___wmul	;wreg free
  4630  001A44  0E64               	movlw	low _m_tabMines
  4631  001A46  0100               	movlb	0	; force () banked
  4632  001A48  25B8               	addwf	?___wmul& (0+255),w,b
  4633  001A4A  0100               	movlb	0	; force () banked
  4634  001A4C  6FBE               	movwf	lcd_putMessage@chaine& (0+255),b
  4635  001A4E  0E00               	movlw	high _m_tabMines
  4636  001A50  0100               	movlb	0	; force () banked
  4637  001A52  21B9               	addwfc	(?___wmul+1)& (0+255),w,b
  4638  001A54  0100               	movlb	0	; force () banked
  4639  001A56  6FBF               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4640  001A58  ECC5  F00E         	call	_lcd_putMessage	;wreg free
  4641  001A5C  0100               	movlb	0	; force () banked
  4642  001A5E  4BC1               	infsnz	afficheTabMines@i& (0+255),f,b
  4643  001A60  2BC2               	incf	(afficheTabMines@i+1)& (0+255),f,b
  4644  001A62                     
  4645                           ; BSR set to: 0
  4646  001A62  0100               	movlb	0	; force () banked
  4647  001A64  BFC2               	btfsc	(afficheTabMines@i+1)& (0+255),7,b
  4648  001A66  EF3E  F00D         	goto	u1671
  4649  001A6A  51C2               	movf	(afficheTabMines@i+1)& (0+255),w,b
  4650  001A6C  E109               	bnz	u1670
  4651  001A6E  0E04               	movlw	4
  4652  001A70  5DC1               	subwf	afficheTabMines@i& (0+255),w,b
  4653  001A72  A0D8               	btfss	status,0,c
  4654  001A74  EF3E  F00D         	goto	u1671
  4655  001A78  EF40  F00D         	goto	u1670
  4656  001A7C                     u1671:
  4657  001A7C  EF10  F00D         	goto	l2334
  4658  001A80                     u1670:
  4659  001A80                     l103:
  4660                           
  4661                           ; BSR set to: 0
  4662  001A80  0012               	return		;funcret
  4663  001A82                     __end_of_afficheTabMines:
  4664                           	opt callstack 0
  4665                           
  4666 ;; *************** function _lcd_putMessage *****************
  4667 ;; Defined at:
  4668 ;;		line 429 in file "Lcd4Lignes.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  chaine          2    6[BANK0 ] PTR const unsigned char 
  4671 ;;		 -> m_tabMines(84), m_tabVue(84), 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  j               1    8[BANK0 ] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4683 ;;      Params:         0       2       0       0       0       0       0
  4684 ;;      Locals:         0       1       0       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0
  4686 ;;      Totals:         0       3       0       0       0       0       0
  4687 ;;Total ram usage:        3 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    4
  4690 ;; This function calls:
  4691 ;;		_lcd_ecritChar
  4692 ;; This function is called by:
  4693 ;;		_afficheTabVue
  4694 ;;		_afficheTabMines
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           	psect	text21
  4699  001D8A                     __ptext21:
  4700                           	opt callstack 0
  4701  001D8A                     _lcd_putMessage:
  4702                           	opt callstack 25
  4703  001D8A                     
  4704                           ;Lcd4Lignes.c: 431: unsigned char j;;Lcd4Lignes.c: 433: for(j = 0; chaine[j] != 0; j++)
  4705  001D8A  0E00               	movlw	0
  4706  001D8C  0100               	movlb	0	; force () banked
  4707  001D8E  6FC0               	movwf	lcd_putMessage@j& (0+255),b
  4708  001D90  EFD9  F00E         	goto	l1924
  4709  001D94                     l1920:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;Lcd4Lignes.c: 434: lcd_ecritChar(chaine[j]);
  4713  001D94  0100               	movlb	0	; force () banked
  4714  001D96  51C0               	movf	lcd_putMessage@j& (0+255),w,b
  4715  001D98  0100               	movlb	0	; force () banked
  4716  001D9A  25BE               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4717  001D9C  6ED9               	movwf	fsr2l,c
  4718  001D9E  0100               	movlb	0	; force () banked
  4719  001DA0  0E00               	movlw	0
  4720  001DA2  0100               	movlb	0	; force () banked
  4721  001DA4  21BF               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4722  001DA6  6EDA               	movwf	fsr2h,c
  4723  001DA8  50DF               	movf	indf2,w,c
  4724  001DAA  EC72  F00E         	call	_lcd_ecritChar
  4725  001DAE  0100               	movlb	0	; force () banked
  4726  001DB0  2BC0               	incf	lcd_putMessage@j& (0+255),f,b
  4727  001DB2                     l1924:
  4728                           
  4729                           ; BSR set to: 0
  4730  001DB2  0100               	movlb	0	; force () banked
  4731  001DB4  51C0               	movf	lcd_putMessage@j& (0+255),w,b
  4732  001DB6  0100               	movlb	0	; force () banked
  4733  001DB8  25BE               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4734  001DBA  6ED9               	movwf	fsr2l,c
  4735  001DBC  0100               	movlb	0	; force () banked
  4736  001DBE  0E00               	movlw	0
  4737  001DC0  0100               	movlb	0	; force () banked
  4738  001DC2  21BF               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4739  001DC4  6EDA               	movwf	fsr2h,c
  4740  001DC6  50DF               	movf	indf2,w,c
  4741  001DC8  A4D8               	btfss	status,2,c
  4742  001DCA  EFE9  F00E         	goto	u951
  4743  001DCE  EFEB  F00E         	goto	u950
  4744  001DD2                     u951:
  4745  001DD2  EFCA  F00E         	goto	l1920
  4746  001DD6                     u950:
  4747  001DD6                     
  4748                           ; BSR set to: 0
  4749  001DD6  0012               	return		;funcret
  4750  001DD8                     __end_of_lcd_putMessage:
  4751                           	opt callstack 0
  4752                           
  4753 ;; *************** function _lcd_ecritChar *****************
  4754 ;; Defined at:
  4755 ;;		line 401 in file "Lcd4Lignes.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  car             1    wreg     unsigned char 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  car             1    3[BANK0 ] unsigned char 
  4760 ;;  posRam          1    4[BANK0 ] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, status,2, status,0, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4770 ;;      Params:         0       0       0       0       0       0       0
  4771 ;;      Locals:         0       2       0       0       0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0
  4773 ;;      Totals:         0       2       0       0       0       0       0
  4774 ;;Total ram usage:        2 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    3
  4777 ;; This function calls:
  4778 ;;		_lcd_wrCom
  4779 ;;		_lcd_wrData
  4780 ;; This function is called by:
  4781 ;;		_lcd_putMessage
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text22
  4786  001CE4                     __ptext22:
  4787                           	opt callstack 0
  4788  001CE4                     _lcd_ecritChar:
  4789                           	opt callstack 25
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;incstack = 0
  4793                           ;lcd_ecritChar@car stored from wreg
  4794  001CE4  0100               	movlb	0	; force () banked
  4795  001CE6  6FBB               	movwf	lcd_ecritChar@car& (0+255),b
  4796  001CE8                     
  4797                           ;Lcd4Lignes.c: 403: unsigned char posRam;;Lcd4Lignes.c: 405: posRam = lcd_wrData(car);
  4798  001CE8  0100               	movlb	0	; force () banked
  4799  001CEA  51BB               	movf	lcd_ecritChar@car& (0+255),w,b
  4800  001CEC  EC77  F00F         	call	_lcd_wrData
  4801  001CF0  0100               	movlb	0	; force () banked
  4802  001CF2  6FBC               	movwf	lcd_ecritChar@posRam& (0+255),b
  4803                           
  4804                           ;Lcd4Lignes.c: 406: switch(posRam)
  4805  001CF4  EF8B  F00E         	goto	l1886
  4806  001CF8                     l1878:
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;Lcd4Lignes.c: 409: lcd_wrCom(0xC0|0x80);
  4810  001CF8  0EC0               	movlw	192
  4811  001CFA  ECB0  F00D         	call	_lcd_wrCom
  4812                           
  4813                           ;Lcd4Lignes.c: 410: break;
  4814  001CFE  EF9B  F00E         	goto	l245
  4815  001D02                     l1880:
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;Lcd4Lignes.c: 412: lcd_wrCom(0x94|0x80);
  4819  001D02  0E94               	movlw	148
  4820  001D04  ECB0  F00D         	call	_lcd_wrCom
  4821                           
  4822                           ;Lcd4Lignes.c: 413: break;
  4823  001D08  EF9B  F00E         	goto	l245
  4824  001D0C                     l1882:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;Lcd4Lignes.c: 415: lcd_wrCom(0xD4|0x80);
  4828  001D0C  0ED4               	movlw	212
  4829  001D0E  ECB0  F00D         	call	_lcd_wrCom
  4830                           
  4831                           ;Lcd4Lignes.c: 416: break;
  4832  001D12  EF9B  F00E         	goto	l245
  4833  001D16                     l1886:
  4834                           
  4835                           ; BSR set to: 0
  4836  001D16  0100               	movlb	0	; force () banked
  4837  001D18  51BC               	movf	lcd_ecritChar@posRam& (0+255),w,b
  4838                           
  4839                           ; Switch size 1, requested type "simple"
  4840                           ; Number of cases is 3, Range of values is 148 to 212
  4841                           ; switch strategies available:
  4842                           ; Name         Instructions Cycles
  4843                           ; simple_byte           10     6 (average)
  4844                           ;	Chosen strategy is simple_byte
  4845  001D1A  0A94               	xorlw	148	; case 148
  4846  001D1C  B4D8               	btfsc	status,2,c
  4847  001D1E  EF7C  F00E         	goto	l1878
  4848  001D22  0A54               	xorlw	84	; case 192
  4849  001D24  B4D8               	btfsc	status,2,c
  4850  001D26  EF86  F00E         	goto	l1882
  4851  001D2A  0A14               	xorlw	20	; case 212
  4852  001D2C  B4D8               	btfsc	status,2,c
  4853  001D2E  EF81  F00E         	goto	l1880
  4854  001D32  EF9B  F00E         	goto	l245
  4855  001D36                     l245:
  4856  001D36  0012               	return		;funcret
  4857  001D38                     __end_of_lcd_ecritChar:
  4858                           	opt callstack 0
  4859                           
  4860 ;; *************** function _lcd_wrData *****************
  4861 ;; Defined at:
  4862 ;;		line 230 in file "Lcd4Lignes.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  caractere       1    wreg     unsigned char 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  caractere       1    2[BANK0 ] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      unsigned char 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, status,0, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4876 ;;      Params:         0       0       0       0       0       0       0
  4877 ;;      Locals:         0       1       0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0
  4879 ;;      Totals:         0       1       0       0       0       0       0
  4880 ;;Total ram usage:        1 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:    2
  4883 ;; This function calls:
  4884 ;;		_lcd_busy
  4885 ;;		_lcd_ecrireDonnees
  4886 ;;		_lcd_strobeEnableBit
  4887 ;; This function is called by:
  4888 ;;		_lcd_ecritChar
  4889 ;;		_lcd_initCGRam
  4890 ;;		_lcd_effaceChar
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text23
  4895  001EEE                     __ptext23:
  4896                           	opt callstack 0
  4897  001EEE                     _lcd_wrData:
  4898                           	opt callstack 26
  4899                           
  4900                           ;incstack = 0
  4901                           ;lcd_wrData@caractere stored from wreg
  4902  001EEE  0100               	movlb	0	; force () banked
  4903  001EF0  6FBA               	movwf	lcd_wrData@caractere& (0+255),b
  4904  001EF2                     
  4905                           ;Lcd4Lignes.c: 232: lcd_busy();
  4906  001EF2  EC36  F00F         	call	_lcd_busy	;wreg free
  4907  001EF6                     
  4908                           ;Lcd4Lignes.c: 233: TRISD = 0b00000000;
  4909  001EF6  0E00               	movlw	0
  4910  001EF8  6E95               	movwf	149,c	;volatile
  4911  001EFA                     
  4912                           ;Lcd4Lignes.c: 236: PORTAbits.RA0 = 1;
  4913  001EFA  8080               	bsf	128,0,c	;volatile
  4914  001EFC                     
  4915                           ;Lcd4Lignes.c: 237: PORTAbits.RA1 = 0;
  4916  001EFC  9280               	bcf	128,1,c	;volatile
  4917  001EFE                     
  4918                           ;Lcd4Lignes.c: 239: lcd_ecrireDonnees(caractere >> 4);
  4919  001EFE  0100               	movlb	0	; force () banked
  4920  001F00  39BA               	swapf	lcd_wrData@caractere& (0+255),w,b
  4921  001F02  0B0F               	andlw	15
  4922  001F04  ECCF  F00F         	call	_lcd_ecrireDonnees
  4923  001F08                     
  4924                           ;Lcd4Lignes.c: 240: lcd_strobeEnableBit();
  4925  001F08  ECE9  F00F         	call	_lcd_strobeEnableBit	;wreg free
  4926  001F0C                     
  4927                           ;Lcd4Lignes.c: 243: lcd_ecrireDonnees(caractere);
  4928  001F0C  0100               	movlb	0	; force () banked
  4929  001F0E  51BA               	movf	lcd_wrData@caractere& (0+255),w,b
  4930  001F10  ECCF  F00F         	call	_lcd_ecrireDonnees
  4931  001F14                     
  4932                           ;Lcd4Lignes.c: 244: lcd_strobeEnableBit();
  4933  001F14  ECE9  F00F         	call	_lcd_strobeEnableBit	;wreg free
  4934  001F18                     
  4935                           ;Lcd4Lignes.c: 247: TRISD = 0b00001111;
  4936  001F18  0E0F               	movlw	15
  4937  001F1A  6E95               	movwf	149,c	;volatile
  4938  001F1C                     
  4939                           ;Lcd4Lignes.c: 248: _delay((unsigned long)((2)*(1000000/4000000.0)));
  4940                           ;Lcd4Lignes.c: 249: return(lcd_busy());
  4941  001F1C  EC36  F00F         	call	_lcd_busy	;wreg free
  4942  001F20  0012               	return		;funcret
  4943  001F22                     __end_of_lcd_wrData:
  4944                           	opt callstack 0
  4945                           
  4946 ;; *************** function _lcd_gotoXY *****************
  4947 ;; Defined at:
  4948 ;;		line 356 in file "Lcd4Lignes.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  x               1    wreg     unsigned char 
  4951 ;;  y               1    3[BANK0 ] unsigned char 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  x               1    4[BANK0 ] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2, status,0, cstack
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4963 ;;      Params:         0       1       0       0       0       0       0
  4964 ;;      Locals:         0       1       0       0       0       0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0
  4966 ;;      Totals:         0       2       0       0       0       0       0
  4967 ;;Total ram usage:        2 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    3
  4970 ;; This function calls:
  4971 ;;		_lcd_wrCom
  4972 ;; This function is called by:
  4973 ;;		_afficheTabVue
  4974 ;;		_afficheTabMines
  4975 ;;		_deplace
  4976 ;;		_lcd_effaceLigne
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text24
  4981  001A82                     __ptext24:
  4982                           	opt callstack 0
  4983  001A82                     _lcd_gotoXY:
  4984                           	opt callstack 26
  4985                           
  4986                           ;incstack = 0
  4987                           ;lcd_gotoXY@x stored from wreg
  4988  001A82  0100               	movlb	0	; force () banked
  4989  001A84  6FBC               	movwf	lcd_gotoXY@x& (0+255),b
  4990  001A86                     
  4991                           ;Lcd4Lignes.c: 358: switch(y)
  4992  001A86  EF65  F00D         	goto	l1916
  4993  001A8A                     l1906:
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;Lcd4Lignes.c: 361: lcd_wrCom((x-1+0x80)|0x80);
  4997  001A8A  0100               	movlb	0	; force () banked
  4998  001A8C  51BC               	movf	lcd_gotoXY@x& (0+255),w,b
  4999  001A8E  0F7F               	addlw	127
  5000  001A90  0980               	iorlw	128
  5001  001A92  ECB0  F00D         	call	_lcd_wrCom
  5002                           
  5003                           ;Lcd4Lignes.c: 362: break;
  5004  001A96  EF79  F00D         	goto	l234
  5005  001A9A                     l1908:
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;Lcd4Lignes.c: 364: lcd_wrCom((x-1+0xC0)|0x80);
  5009  001A9A  0100               	movlb	0	; force () banked
  5010  001A9C  51BC               	movf	lcd_gotoXY@x& (0+255),w,b
  5011  001A9E  0FBF               	addlw	191
  5012  001AA0  0980               	iorlw	128
  5013  001AA2  ECB0  F00D         	call	_lcd_wrCom
  5014                           
  5015                           ;Lcd4Lignes.c: 365: break;
  5016  001AA6  EF79  F00D         	goto	l234
  5017  001AAA                     l1910:
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;Lcd4Lignes.c: 367: lcd_wrCom((x-1+0x94)|0x80);
  5021  001AAA  0100               	movlb	0	; force () banked
  5022  001AAC  51BC               	movf	lcd_gotoXY@x& (0+255),w,b
  5023  001AAE  0F93               	addlw	147
  5024  001AB0  0980               	iorlw	128
  5025  001AB2  ECB0  F00D         	call	_lcd_wrCom
  5026                           
  5027                           ;Lcd4Lignes.c: 368: break;
  5028  001AB6  EF79  F00D         	goto	l234
  5029  001ABA                     l1912:
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;Lcd4Lignes.c: 370: lcd_wrCom((x-1+0xD4)|0x80);
  5033  001ABA  0100               	movlb	0	; force () banked
  5034  001ABC  51BC               	movf	lcd_gotoXY@x& (0+255),w,b
  5035  001ABE  0FD3               	addlw	211
  5036  001AC0  0980               	iorlw	128
  5037  001AC2  ECB0  F00D         	call	_lcd_wrCom
  5038                           
  5039                           ;Lcd4Lignes.c: 371: break;
  5040  001AC6  EF79  F00D         	goto	l234
  5041  001ACA                     l1916:
  5042  001ACA  0100               	movlb	0	; force () banked
  5043  001ACC  51BB               	movf	lcd_gotoXY@y& (0+255),w,b
  5044                           
  5045                           ; Switch size 1, requested type "simple"
  5046                           ; Number of cases is 4, Range of values is 1 to 4
  5047                           ; switch strategies available:
  5048                           ; Name         Instructions Cycles
  5049                           ; simple_byte           13     7 (average)
  5050                           ;	Chosen strategy is simple_byte
  5051  001ACE  0A01               	xorlw	1	; case 1
  5052  001AD0  B4D8               	btfsc	status,2,c
  5053  001AD2  EF45  F00D         	goto	l1906
  5054  001AD6  0A03               	xorlw	3	; case 2
  5055  001AD8  B4D8               	btfsc	status,2,c
  5056  001ADA  EF4D  F00D         	goto	l1908
  5057  001ADE  0A01               	xorlw	1	; case 3
  5058  001AE0  B4D8               	btfsc	status,2,c
  5059  001AE2  EF55  F00D         	goto	l1910
  5060  001AE6  0A07               	xorlw	7	; case 4
  5061  001AE8  B4D8               	btfsc	status,2,c
  5062  001AEA  EF5D  F00D         	goto	l1912
  5063  001AEE  EF79  F00D         	goto	l234
  5064  001AF2                     l234:
  5065  001AF2  0012               	return		;funcret
  5066  001AF4                     __end_of_lcd_gotoXY:
  5067                           	opt callstack 0
  5068                           
  5069 ;; *************** function _lcd_wrCom *****************
  5070 ;; Defined at:
  5071 ;;		line 198 in file "Lcd4Lignes.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  commande        1    wreg     unsigned char 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  commande        1    2[BANK0 ] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      unsigned char 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5085 ;;      Params:         0       0       0       0       0       0       0
  5086 ;;      Locals:         0       1       0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0
  5088 ;;      Totals:         0       1       0       0       0       0       0
  5089 ;;Total ram usage:        1 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    2
  5092 ;; This function calls:
  5093 ;;		_lcd_busy
  5094 ;;		_lcd_ecrireDonnees
  5095 ;;		_lcd_strobeEnableBit
  5096 ;; This function is called by:
  5097 ;;		_lcd_init
  5098 ;;		_lcd_curseurHome
  5099 ;;		_lcd_gotoXY
  5100 ;;		_lcd_ecritChar
  5101 ;;		_lcd_initCGRam
  5102 ;;		_lcd_effaceAffichage
  5103 ;;		_lcd_cacheCurseur
  5104 ;;		_lcd_montreCurseur
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text25
  5109  001B60                     __ptext25:
  5110                           	opt callstack 0
  5111  001B60                     _lcd_wrCom:
  5112                           	opt callstack 27
  5113                           
  5114                           ;incstack = 0
  5115                           ;lcd_wrCom@commande stored from wreg
  5116  001B60  0100               	movlb	0	; force () banked
  5117  001B62  6FBA               	movwf	lcd_wrCom@commande& (0+255),b
  5118  001B64                     
  5119                           ;Lcd4Lignes.c: 200: lcd_busy();
  5120  001B64  EC36  F00F         	call	_lcd_busy	;wreg free
  5121  001B68                     
  5122                           ;Lcd4Lignes.c: 202: TRISD = 0b00000000;
  5123  001B68  0E00               	movlw	0
  5124  001B6A  6E95               	movwf	149,c	;volatile
  5125  001B6C                     
  5126                           ;Lcd4Lignes.c: 205: PORTAbits.RA0 = 0;
  5127  001B6C  9080               	bcf	128,0,c	;volatile
  5128  001B6E                     
  5129                           ;Lcd4Lignes.c: 206: PORTAbits.RA1 = 0;
  5130  001B6E  9280               	bcf	128,1,c	;volatile
  5131  001B70                     
  5132                           ;Lcd4Lignes.c: 208: lcd_ecrireDonnees(commande >> 4);
  5133  001B70  0100               	movlb	0	; force () banked
  5134  001B72  39BA               	swapf	lcd_wrCom@commande& (0+255),w,b
  5135  001B74  0B0F               	andlw	15
  5136  001B76  ECCF  F00F         	call	_lcd_ecrireDonnees
  5137  001B7A                     
  5138                           ;Lcd4Lignes.c: 209: lcd_strobeEnableBit();
  5139  001B7A  ECE9  F00F         	call	_lcd_strobeEnableBit	;wreg free
  5140  001B7E                     
  5141                           ;Lcd4Lignes.c: 212: lcd_ecrireDonnees(commande);
  5142  001B7E  0100               	movlb	0	; force () banked
  5143  001B80  51BA               	movf	lcd_wrCom@commande& (0+255),w,b
  5144  001B82  ECCF  F00F         	call	_lcd_ecrireDonnees
  5145  001B86                     
  5146                           ;Lcd4Lignes.c: 213: lcd_strobeEnableBit();
  5147  001B86  ECE9  F00F         	call	_lcd_strobeEnableBit	;wreg free
  5148  001B8A                     
  5149                           ;Lcd4Lignes.c: 214: _delay((unsigned long)((40)*(1000000/4000000.0)));
  5150  001B8A  0E03               	movlw	3
  5151  001B8C                     u1797:
  5152  001B8C  2EE8               	decfsz	wreg,f,c
  5153  001B8E  D7FE               	bra	u1797
  5154  001B90  F000               	nop	
  5155  001B92                     
  5156                           ;Lcd4Lignes.c: 216: if ((commande == 0x01) || commande == 0x02)
  5157  001B92  0100               	movlb	0	; force () banked
  5158  001B94  05BA               	decf	lcd_wrCom@commande& (0+255),w,b
  5159  001B96  B4D8               	btfsc	status,2,c
  5160  001B98  EFD0  F00D         	goto	u911
  5161  001B9C  EFD2  F00D         	goto	u910
  5162  001BA0                     u911:
  5163  001BA0  EFDC  F00D         	goto	l1836
  5164  001BA4                     u910:
  5165  001BA4                     
  5166                           ; BSR set to: 0
  5167  001BA4  0E02               	movlw	2
  5168  001BA6  0100               	movlb	0	; force () banked
  5169  001BA8  19BA               	xorwf	lcd_wrCom@commande& (0+255),w,b
  5170  001BAA  A4D8               	btfss	status,2,c
  5171  001BAC  EFDA  F00D         	goto	u921
  5172  001BB0  EFDC  F00D         	goto	u920
  5173  001BB4                     u921:
  5174  001BB4  EFE1  F00D         	goto	l1838
  5175  001BB8                     u920:
  5176  001BB8                     l1836:
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;Lcd4Lignes.c: 217: _delay((unsigned long)((2)*(1000000/4000.0)));
  5180  001BB8  0EA6               	movlw	166
  5181  001BBA                     u1807:
  5182  001BBA  2EE8               	decfsz	wreg,f,c
  5183  001BBC  D7FE               	bra	u1807
  5184  001BBE  F000 F000          	nop2	
  5185  001BC2                     l1838:
  5186                           
  5187                           ;Lcd4Lignes.c: 219: TRISD = 0b00001111;
  5188  001BC2  0E0F               	movlw	15
  5189  001BC4  6E95               	movwf	149,c	;volatile
  5190  001BC6                     
  5191                           ;Lcd4Lignes.c: 221: return(lcd_busy());
  5192  001BC6  EC36  F00F         	call	_lcd_busy	;wreg free
  5193  001BCA  0012               	return		;funcret
  5194  001BCC                     __end_of_lcd_wrCom:
  5195                           	opt callstack 0
  5196                           
  5197 ;; *************** function _lcd_strobeEnableBit *****************
  5198 ;; Defined at:
  5199 ;;		line 473 in file "Lcd4Lignes.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		None
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5213 ;;      Params:         0       0       0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0
  5216 ;;      Totals:         0       0       0       0       0       0       0
  5217 ;;Total ram usage:        0 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_lcd_wrCom
  5223 ;;		_lcd_wrData
  5224 ;;		_lcd_resetSequence
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text26
  5229  001FD2                     __ptext26:
  5230                           	opt callstack 0
  5231  001FD2                     _lcd_strobeEnableBit:
  5232                           	opt callstack 28
  5233  001FD2                     
  5234                           ;Lcd4Lignes.c: 475: PORTAbits.RA2 = 1;
  5235  001FD2  8480               	bsf	128,2,c	;volatile
  5236                           
  5237                           ;Lcd4Lignes.c: 476: __nop();
  5238  001FD4  F000               	nop	
  5239                           
  5240                           ;Lcd4Lignes.c: 477: PORTAbits.RA2 = 0;
  5241  001FD6  9480               	bcf	128,2,c	;volatile
  5242  001FD8  0012               	return		;funcret
  5243  001FDA                     __end_of_lcd_strobeEnableBit:
  5244                           	opt callstack 0
  5245                           
  5246 ;; *************** function _lcd_ecrireDonnees *****************
  5247 ;; Defined at:
  5248 ;;		line 149 in file "Lcd4Lignes.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  donnee          1    wreg     unsigned char 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  donnee          1    1[BANK0 ] unsigned char 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1    wreg      void 
  5255 ;; Registers used:
  5256 ;;		wreg, status,2, status,0
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5262 ;;      Params:         0       0       0       0       0       0       0
  5263 ;;      Locals:         0       1       0       0       0       0       0
  5264 ;;      Temps:          0       1       0       0       0       0       0
  5265 ;;      Totals:         0       2       0       0       0       0       0
  5266 ;;Total ram usage:        2 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_lcd_wrCom
  5272 ;;		_lcd_wrData
  5273 ;;		_lcd_resetSequence
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text27
  5278  001F9E                     __ptext27:
  5279                           	opt callstack 0
  5280  001F9E                     _lcd_ecrireDonnees:
  5281                           	opt callstack 28
  5282                           
  5283                           ;incstack = 0
  5284                           ;lcd_ecrireDonnees@donnee stored from wreg
  5285  001F9E  0100               	movlb	0	; force () banked
  5286  001FA0  6FB9               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  5287  001FA2                     
  5288                           ;Lcd4Lignes.c: 152: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  5289  001FA2  CF83 F0B8          	movff	3971,??_lcd_ecrireDonnees	;volatile
  5290  001FA6  0EF0               	movlw	240
  5291  001FA8  0100               	movlb	0	; force () banked
  5292  001FAA  17B8               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  5293  001FAC  0100               	movlb	0	; force () banked
  5294  001FAE  51B9               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  5295  001FB0  0B0F               	andlw	15
  5296  001FB2  0100               	movlb	0	; force () banked
  5297  001FB4  11B8               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  5298  001FB6  6E83               	movwf	131,c	;volatile
  5299  001FB8                     
  5300                           ; BSR set to: 0
  5301  001FB8  0012               	return		;funcret
  5302  001FBA                     __end_of_lcd_ecrireDonnees:
  5303                           	opt callstack 0
  5304                           
  5305 ;; *************** function _lcd_busy *****************
  5306 ;; Defined at:
  5307 ;;		line 166 in file "Lcd4Lignes.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;		None
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  adresse         1    1[BANK0 ] unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      unsigned char 
  5314 ;; Registers used:
  5315 ;;		wreg, status,2, status,0, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5321 ;;      Params:         0       0       0       0       0       0       0
  5322 ;;      Locals:         0       1       0       0       0       0       0
  5323 ;;      Temps:          0       1       0       0       0       0       0
  5324 ;;      Totals:         0       2       0       0       0       0       0
  5325 ;;Total ram usage:        2 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:    1
  5328 ;; This function calls:
  5329 ;;		_lcd_lireDonnees
  5330 ;; This function is called by:
  5331 ;;		_lcd_wrCom
  5332 ;;		_lcd_wrData
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text28
  5337  001E6C                     __ptext28:
  5338                           	opt callstack 0
  5339  001E6C                     _lcd_busy:
  5340                           	opt callstack 27
  5341  001E6C                     
  5342                           ;Lcd4Lignes.c: 168: unsigned char adresse;;Lcd4Lignes.c: 170: PORTAbits.RA0 = 0;
  5343  001E6C  9080               	bcf	128,0,c	;volatile
  5344                           
  5345                           ;Lcd4Lignes.c: 171: PORTAbits.RA1 = 1;
  5346  001E6E  8280               	bsf	128,1,c	;volatile
  5347  001E70                     l196:
  5348                           
  5349                           ;Lcd4Lignes.c: 174: {;Lcd4Lignes.c: 175: PORTAbits.RA2 = 1;
  5350  001E70  8480               	bsf	128,2,c	;volatile
  5351                           
  5352                           ;Lcd4Lignes.c: 176: __nop();
  5353  001E72  F000               	nop	
  5354  001E74                     
  5355                           ;Lcd4Lignes.c: 177: adresse = lcd_lireDonnees() << 4;
  5356  001E74  ECED  F00F         	call	_lcd_lireDonnees	;wreg free
  5357  001E78  0100               	movlb	0	; force () banked
  5358  001E7A  6FB8               	movwf	??_lcd_busy& (0+255),b
  5359  001E7C  39B8               	swapf	??_lcd_busy& (0+255),w,b
  5360  001E7E  0BF0               	andlw	240
  5361  001E80  0100               	movlb	0	; force () banked
  5362  001E82  6FB9               	movwf	lcd_busy@adresse& (0+255),b
  5363  001E84                     
  5364                           ; BSR set to: 0
  5365                           ;Lcd4Lignes.c: 178: PORTAbits.RA2 = 0;
  5366  001E84  9480               	bcf	128,2,c	;volatile
  5367  001E86                     
  5368                           ;Lcd4Lignes.c: 180: PORTAbits.RA2 = 1;
  5369  001E86  8480               	bsf	128,2,c	;volatile
  5370  001E88                     
  5371                           ;Lcd4Lignes.c: 181: __nop();
  5372  001E88  F000               	nop	
  5373                           
  5374                           ;Lcd4Lignes.c: 182: adresse |= lcd_lireDonnees();
  5375  001E8A  ECED  F00F         	call	_lcd_lireDonnees	;wreg free
  5376  001E8E  0100               	movlb	0	; force () banked
  5377  001E90  13B9               	iorwf	lcd_busy@adresse& (0+255),f,b
  5378  001E92                     
  5379                           ; BSR set to: 0
  5380                           ;Lcd4Lignes.c: 183: PORTAbits.RA2 = 0;
  5381  001E92  9480               	bcf	128,2,c	;volatile
  5382  001E94                     
  5383                           ;Lcd4Lignes.c: 185: };Lcd4Lignes.c: 186: while(adresse&0x80);
  5384  001E94  0100               	movlb	0	; force () banked
  5385  001E96  BFB9               	btfsc	lcd_busy@adresse& (0+255),7,b
  5386  001E98  EF50  F00F         	goto	u901
  5387  001E9C  EF52  F00F         	goto	u900
  5388  001EA0                     u901:
  5389  001EA0  EF38  F00F         	goto	l196
  5390  001EA4                     u900:
  5391  001EA4                     
  5392                           ; BSR set to: 0
  5393                           ;Lcd4Lignes.c: 188: PORTAbits.RA1 = 0;
  5394  001EA4  9280               	bcf	128,1,c	;volatile
  5395  001EA6                     
  5396                           ; BSR set to: 0
  5397                           ;Lcd4Lignes.c: 189: return(adresse&0x7f);
  5398  001EA6  0100               	movlb	0	; force () banked
  5399  001EA8  51B9               	movf	lcd_busy@adresse& (0+255),w,b
  5400  001EAA  0B7F               	andlw	127
  5401  001EAC                     
  5402                           ; BSR set to: 0
  5403  001EAC  0012               	return		;funcret
  5404  001EAE                     __end_of_lcd_busy:
  5405                           	opt callstack 0
  5406                           
  5407 ;; *************** function _lcd_lireDonnees *****************
  5408 ;; Defined at:
  5409 ;;		line 135 in file "Lcd4Lignes.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;		None
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;		None
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      unsigned char 
  5416 ;; Registers used:
  5417 ;;		wreg, status,2, status,0
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5423 ;;      Params:         0       0       0       0       0       0       0
  5424 ;;      Locals:         0       0       0       0       0       0       0
  5425 ;;      Temps:          0       0       0       0       0       0       0
  5426 ;;      Totals:         0       0       0       0       0       0       0
  5427 ;;Total ram usage:        0 bytes
  5428 ;; Hardware stack levels used:    1
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_lcd_busy
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text29
  5437  001FDA                     __ptext29:
  5438                           	opt callstack 0
  5439  001FDA                     _lcd_lireDonnees:
  5440                           	opt callstack 27
  5441  001FDA                     
  5442                           ;Lcd4Lignes.c: 138: return (PORTD & 0x0f);
  5443  001FDA  5083               	movf	131,w,c	;volatile
  5444  001FDC  0B0F               	andlw	15
  5445  001FDE  0012               	return		;funcret
  5446  001FE0                     __end_of_lcd_lireDonnees:
  5447                           	opt callstack 0
  5448                           
  5449 ;; *************** function ___wmul *****************
  5450 ;; Defined at:
  5451 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5454 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  product         2    4[BANK0 ] unsigned int 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  2    0[BANK0 ] unsigned int 
  5459 ;; Registers used:
  5460 ;;		wreg, status,2, status,0, prodl, prodh
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5466 ;;      Params:         0       4       0       0       0       0       0
  5467 ;;      Locals:         0       2       0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0
  5469 ;;      Totals:         0       6       0       0       0       0       0
  5470 ;;Total ram usage:        6 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; This function calls:
  5473 ;;		Nothing
  5474 ;; This function is called by:
  5475 ;;		_initTabVue
  5476 ;;		_afficheTabVue
  5477 ;;		_afficheTabMines
  5478 ;;		_rempliMines
  5479 ;;		_calculToucheCombien
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           	psect	text30
  5484  001F76                     __ptext30:
  5485                           	opt callstack 0
  5486  001F76                     ___wmul:
  5487                           	opt callstack 29
  5488  001F76  0100               	movlb	0	; () banked
  5489  001F78  51B8               	movf	___wmul@multiplier& (0+255),w,b
  5490  001F7A  03BA               	mulwf	___wmul@multiplicand& (0+255),b
  5491  001F7C  CFF3 F0BC          	movff	prodl,___wmul@product
  5492  001F80  CFF4 F0BD          	movff	prodh,___wmul@product+1
  5493  001F84  51B8               	movf	___wmul@multiplier& (0+255),w,b
  5494  001F86  03BB               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5495  001F88  50F3               	movf	243,w,c
  5496  001F8A  27BD               	addwf	(___wmul@product+1)& (0+255),f,b
  5497  001F8C  51B9               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5498  001F8E  03BA               	mulwf	___wmul@multiplicand& (0+255),b
  5499  001F90  50F3               	movf	243,w,c
  5500  001F92  27BD               	addwf	(___wmul@product+1)& (0+255),f,b
  5501  001F94                     
  5502                           ; BSR set to: 0
  5503  001F94  C0BC  F0B8         	movff	___wmul@product,?___wmul
  5504  001F98  C0BD  F0B9         	movff	___wmul@product+1,?___wmul+1
  5505  001F9C                     
  5506                           ; BSR set to: 0
  5507  001F9C  0012               	return		;funcret
  5508  001F9E                     __end_of___wmul:
  5509                           	opt callstack 0
  5510                           
  5511                           	psect	param0
  5512  0000                     tosu	equ	0xFFF
  5513                           tosh	equ	0xFFE
  5514                           tosl	equ	0xFFD
  5515                           stkptr	equ	0xFFC
  5516                           pclatu	equ	0xFFB
  5517                           pclath	equ	0xFFA
  5518                           pcl	equ	0xFF9
  5519                           tblptru	equ	0xFF8
  5520                           tblptrh	equ	0xFF7
  5521                           tblptrl	equ	0xFF6
  5522                           tablat	equ	0xFF5
  5523                           prodh	equ	0xFF4
  5524                           prodl	equ	0xFF3
  5525                           indf0	equ	0xFEF
  5526                           postinc0	equ	0xFEE
  5527                           postdec0	equ	0xFED
  5528                           preinc0	equ	0xFEC
  5529                           plusw0	equ	0xFEB
  5530                           fsr0h	equ	0xFEA
  5531                           fsr0l	equ	0xFE9
  5532                           wreg	equ	0xFE8
  5533                           indf1	equ	0xFE7
  5534                           postinc1	equ	0xFE6
  5535                           postdec1	equ	0xFE5
  5536                           preinc1	equ	0xFE4
  5537                           plusw1	equ	0xFE3
  5538                           fsr1h	equ	0xFE2
  5539                           fsr1l	equ	0xFE1
  5540                           bsr	equ	0xFE0
  5541                           indf2	equ	0xFDF
  5542                           postinc2	equ	0xFDE
  5543                           postdec2	equ	0xFDD
  5544                           preinc2	equ	0xFDC
  5545                           plusw2	equ	0xFDB
  5546                           fsr2h	equ	0xFDA
  5547                           fsr2l	equ	0xFD9
  5548                           status	equ	0xFD8


Data Sizes:
    Strings     21
    Constant    0
    Data        152
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     34     122
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), 

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), m_tabVue(BANK1[84]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 1
		 -> main@posY(BANK0[1]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 1
		 -> main@posX(BANK0[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK0[84]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _strcpy->___wmul
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _initTabVue->___wmul
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _afficheTabVue->_lcd_putMessage
    _afficheTabMines->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   28552
                                             30 BANK0      4     4      0
                    _afficheTabMines
                      _afficheTabVue
                             _demine
                            _deplace
                         _initTabVue
                     _initialisation
                           _lcd_init
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         10     8      2    5352
                                             20 BANK0     10     8      2
                            ___awmod
                             ___wmul
                               _rand
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     243
                                              6 BANK0      6     2      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     5     5      0    5046
                                             16 BANK0      5     5      0
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 10     6      4    4734
                                              6 BANK0     10     6      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           6     6      0    4093
                                              6 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _deplace                                              5     1      4    1121
                                              5 BANK0      5     1      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               6     5      1    1516
                                             10 BANK0      6     5      1
                 _enleveTuilesAutour
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  10     9      1    1264
                                              0 BANK0     10     9      1
 ---------------------------------------------------------------------------------
 (1) _afficheTabVue                                        2     2      0    5226
                                              9 BANK0      2     2      0
                             ___wmul
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _afficheTabMines                                      2     2      0    5226
                                              9 BANK0      2     2      0
                             ___wmul
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_putMessage                                       3     1      2     555
                                              6 BANK0      3     1      2
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (3) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3935
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabMines
     ___wmul
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _afficheTabVue
     ___wmul
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _enleveTuilesAutour
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _initTabVue
     ___wmul
   _initialisation
     _srand
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _metToucheCombien
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul
     _strcpy
       ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     22      7A       4       76.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10E      14        0.0%
DATA                 0      0     10E      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 05 00:02:32 2019

 __end_of_calculToucheCombien 1172                            l81 1718                            l93 1684  
                          l77 16E0                            l98 19F2          ??_enleveTuilesAutour 00B9  
         ___wmul@multiplicand 00BA                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008  
                         l103 1A80                           l113 12D6                           l210 1C34  
                         l122 1434                           l204 1BCA                           l213 1F74  
                         l133 1170                           l207 1F20                           l144 1572  
                         l234 1AF2                           l251 1DD6                           l171 1E22  
                         l219 1FD0                           l148 1810                           l317 1F9C  
                         l245 1D36                           l165 1F3C                           l190 1FDE  
                         l159 0C78                           l168 1F4C                           l264 1964  
                         l328 1B4E                           l193 1FB8                           l329 1B5E  
                         l267 1FD8                           l196 1E70                           l197 1EA4  
                         l198 1EAC                           l561 18C2                           l981 1FC8  
                         l990 1E6A                           l984 1CE2                  __CFG_CPB$OFF 000000  
                         u280 1F4A                           u281 1F46                  __CFG_CPD$OFF 000000  
                         u900 1EA4                           u901 1EA0                           u910 1BA4  
                         u911 1BA0                           u920 1BB8                           u921 1BB4  
                         u930 1B14                           u931 1B10                           u940 1B4E  
                         u941 1B4A                           u950 1DD6                           u951 1DD2  
                         u960 1E62                           u961 1E5E                           u970 0CE6  
                         u971 0CE2                           u980 0D00                           u981 0CFC  
                         u990 0D1A                           u991 0D16                  __CFG_BORV$18 000000  
                ___awmod@sign 00CB                   lcd_gotoXY@x 00BC                           wreg 000FE8  
                 lcd_gotoXY@y 00BB                  __CFG_LVP$OFF 000000                          l2000 1168  
                        l2010 06E6                          l2002 116C                          l2020 0884  
                        l2012 0734                          l2100 1902                          l2030 0A1A  
                        l2022 08D2                          l2014 07B0                          l2006 061C  
                        l2102 1934                          l2110 1960                          l2040 0B36  
                        l2032 0A60                          l2024 08E4                          l2016 07F6  
                        l2008 066A                          l2104 1938                          l2120 1832  
                        l2112 1812                          l2042 0B48                          l2034 0A72  
                        l2026 0950                          l2018 0808                          l2210 1660  
                        l2202 15CC                          l2050 1FBA                          l2106 194A  
                        l2130 186A                          l2122 1840                          l2114 1818  
                        l2220 1992                          l2044 0BB4                          l2036 0ADE  
                        l2028 099E                          l2300 14EA                          l2212 1666  
                        l2204 1614                          l2108 194E                          l2060 1BE8  
                        l2052 1BCC                          l2132 1878                          l2140 18A2  
                        l2124 1848                          l2116 1826                          l2222 19A0  
                        l2214 1966                          l2046 0BFA                          l2038 0B24  
                        l1342 1F26                          l2310 154A                          l2302 1502  
                        l2206 161A                          l2150 1DE0                          l2070 1C04  
                        l2062 1BEE                          l2054 1BD0                          l2142 18B2  
                        l2134 188E                          l2126 185A                          l2118 182E  
                        l2230 117C                          l2224 19CE                          l2216 1970  
                        l2048 0C0C                          l1344 1F3A                          l2312 1556  
                        l2304 150E                          l2208 1638                          l2160 1DFC  
                        l2152 1DEA                          l2080 1C24                          l2072 1C0C  
                        l2064 1BF2                          l2056 1BE4                          l2144 18BA  
                        l2136 1896                          l2128 1862                          l2240 11FA  
                        l2330 19FE                          l2226 19D4                          l2322 1802  
                        l2314 1762                          l1346 1F3A                          l2306 1526  
                        l2170 1E0C                          l2162 1E00                          l2154 1DEC  
                        l2090 18D0                          l2082 1C28                          l2074 1C12  
                        l2066 1BFA                          l2058 1BE6                          l2138 189C  
                        l2242 1204                          l2250 12A6                          l2234 119E  
                        l2340 1A62                          l2324 180E                          l2316 17BE  
                        l1348 1F4A                          l2308 1532                          l2180 1E1C  
                        l2172 1E0E                          l2164 1E02                          l2156 1DF8  
                        l2148 1DD8                          l2084 1C30                          l2076 1C16  
                        l2068 1C00                          l2260 12FA                          l2252 12D8  
                        l2244 1234                          l2236 11D6                          l2228 1172  
                        l2334 1A20                          l2318 17FC                          l2190 1574  
                        l2182 1E1E                          l2174 1E10                          l2166 1E06  
                        l2158 1DFA                          l2094 18E6                          l2086 18C4  
                        l2078 1C1E                          l2270 13D8                          l2254 12DE  
                        l2246 1272                          l2238 11DC                          l2350 1686  
                        l1800 1E94                          l2336 1A2E                          l2328 19F4  
                        l2280 1436                          l2192 157E                          l2184 1E20  
                        l2176 1E12                          l2168 1E0A                          l2096 18EC  
                        l2088 18CA                          l2272 1408                          l2264 1310  
                        l2248 12A2                          l2360 16A8                          l2352 1698  
                        l1802 1E94                          l1810 1B64                          l2338 1A5C  
                        l2290 1498                          l2282 1450                          l2178 1E1A  
                        l2186 1F4E                          l2274 140C                          l2266 134E  
                        l2258 12F4                          l2370 16EE                          l2362 16B6  
                        l2354 169C                          l1804 1EA6                          l1820 1B70  
                        l1812 1B68                          l2292 14A2                          l2284 145A  
                        l2196 15A0                          l2188 1F70                          l2268 139A  
                        l2276 141E                          l1900 1B24                          l2380 173C  
                        l2372 1702                          l2364 16BA                          l2356 16A0  
                        l1830 1B8A                          l1822 1B7A                          l1814 1B6C  
                        l1910 1AAA                          l2294 14BC                          l2286 1474  
                        l2198 15AA                          l2278 1422                          l1902 1B2E  
                        l2374 1714                          l2382 1740                          l2366 16D2  
                        l2358 16A4                          l1808 1FD2                          l1840 1BC6  
                        l1832 1B92                          l1824 1B7E                          l1816 1B6C  
                        l1912 1ABA                          l1904 1A86                          l1920 1D94  
                        l2296 14C6                          l2288 147E                          l2376 1726  
                        l2384 1744                          l1842 1BC6                          l1834 1BA4  
                        l1826 1B7E                          l1818 1B6E                          l1906 1A8A  
                        l1850 1EFA                          l1922 1DAE                          l2298 14DE  
                        l1930 1E3A                          l2378 172E                          l1780 1FDA  
                        l1836 1BB8                          l1828 1B86                          l1908 1A9A  
                        l1916 1ACA                          l1860 1F0C                          l1852 1EFA  
                        l1924 1DB2                          l1940 1CD6                          l1932 1E62  
                        l1790 1E84                          l1838 1BC2                          l1870 1F1C  
                        l1862 1F0C                          l1854 1EFC                          l1846 1EF2  
                        l1918 1D8A                          l1950 0D00                          l1926 1E24  
                        l1792 1E86                          l1784 1FA2                          l1864 1F14  
                        l1856 1EFE                          l1848 1EF6                          l1880 1D02  
                        l1960 0DA2                          l1952 0D1A                          l1944 0C7A  
                        l1936 1C8E                          l1928 1E30                          l1890 1F94  
                        l1794 1E86                          l1786 1E6C                          l1866 1F18  
                        l1858 1F08                          l1882 1D0C                          l1874 1FCA  
                        l1970 0EB4                          l1962 0E00                          l1954 0D1E  
                        l1946 0C80                          l1938 1CC4                          l1796 1E88  
                        l1788 1E74                          l1868 1F18                          l1876 1CE8  
                        l1980 0F82                          l1972 0ECE                          l1964 0E1A  
                        l1956 0D84                          l1948 0CE6                          l1798 1E92  
                        l1878 1CF8                          l1886 1D16                          l1990 1076  
                        l1982 0F86                          l1974 0ED2                          l1966 0E4A  
                        l1958 0D9E                          l1894 1AF4                          l1888 1F76  
                        l1992 10A6                          l1984 0FE4                          l1976 0F38  
                        l1968 0E4E                          l1896 1B06                          l1994 10D6  
                        l1986 1014                          l1978 0F52                          l1898 1B14  
                        l1996 10DA                          l1988 1018                          l1998 1138  
                        STR_1 0601                          u1000 0D84                          u1001 0D80  
                        u1010 0D9E                          u1011 0D9A                          u1100 0FE4  
                        u1020 0E00                          u1101 0FE0                          u1021 0DFC  
                        u1110 1014                          u1030 0E1A                          u1111 1010  
                        u1031 0E16                          u1200 0808                          u1120 1076  
                        u1040 0E4A                          u1201 0804                          u1121 1072  
                        u1041 0E46                          u1210 08D2                          u1130 10A6  
                        u1050 0EB4                          u1211 08CE                          u1131 10A2  
                        u1051 0EB0                          u1300 0C0C                          u1220 08E4  
                        u1140 10D6                          u1060 0ECE                          u1301 0C08  
                        u1221 08E0                          u1141 10D2                          u1061 0ECA  
                        u1230 099E                          u1310 18E2                          u1150 1138  
                        u1070 0F38                          u1231 099A                          u1311 18DE  
                        u1151 1134                          u1071 0F34                          u1240 0A60  
                        u1320 18FE                          u1160 1168                          u1080 0F52  
                        u1400 18B2                          u1241 0A5C                          u1321 18FA  
                        u1161 1164                          u1081 0F4E                          u1401 18AE  
                        u1250 0A72                          u1170 066A                          u1410 159C  
                        u1330 194A                          u1090 0F82                          u1251 0A6E  
                        u1171 0666                          u1411 1598                          u1331 1946  
                        u1091 0F7E                          u1260 0B24                          u1180 0734  
                        u1420 15C8                          u1340 1960                          u1500 12D6  
                        u1261 0B20                          u1181 0730                          u1421 15C4  
                        u1341 195C                          u1501 12D2                          u1270 0B36  
                        u1190 07F6                          u1430 1638                          u1510 12F0  
                        u1350 1826                          u1271 0B32                          u1191 07F2  
                        u1431 1634                          u1511 12EC                          u1351 1822  
                        u1280 0B48                          u1600 14BC                          u1440 1684  
                        u1520 130C                          u1360 1840                          u1281 0B44  
                        u1601 14B8                          u1441 1680                          u1521 1308  
                        u1361 183C                          u1450 198E                          u1290 0BFA  
                        u1610 14DE                          u1530 134E                          u1370 185A  
                        u1451 198A                          u1291 0BF6                          u1611 14DA  
                        u1531 134A                          u1371 1856                          u1460 19F2  
                        u1620 1502                          u1540 13D8                          u1380 1878  
                        u1700 16EE                          u1461 19EE                          u1621 14FE  
                        u1541 13D4                          u1381 1874                          u1701 16EA  
                        u1630 1526                          u1550 141E                          u1390 188E  
                        u1470 119A                          u1710 1714                          u1631 1522  
                        u1551 141A                          u1391 188A                          u1471 1196  
                        u1711 1710                          u1640 154A                          u1560 1434  
                        u1480 11FA                          u1720 1726                          u1641 1546  
                        u1561 1430                          u1481 11F6                          u1721 1722  
                        u1650 17FC                          u1570 1450                          u1490 1272  
                        u1651 17F8                          u1571 144C                          u1491 126E  
                        u1660 1A1C                          u1580 1474                          u1661 1A18  
                        u1581 1470                          u1670 1A80                          u1590 1498  
                        u1807 1BBA                          u1671 1A7C                          u1591 1494  
                        u1737 174C                          u1690 16E0                          u1747 1BD8  
                        u1691 16DC                          u1757 1BF4                          u1767 1C06  
                        u1777 1C18                          u1787 1C2A                          u1797 1B8C  
                        _RCIF 007CF5                          _TMR1 000FCE              ??_initialisation 00BA  
                        _main 1686                          _rand 1C8E                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          prodh 000FF4                          prodl 000FF3  
                        start 0000               ?_lcd_putMessage 00BE                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               ??_lcd_ecritChar 00BB  
                       ?_main 00B8                         ?_rand 00C4               __end_of___awmod 18C4  
                       _ANSEL 000F7E                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
             __end_of_deplace 1574           ___lmul@multiplicand 00BC                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_lcd_initCGRam 00BB                         _randx 0060                         _srand 1FBA  
                       tablat 000FF5                         status 000FD8                __CFG_HFOFST$ON 000000  
           ??_afficheTabMines 00C1                __CFG_PBADEN$ON 000000              _metToucheCombien 12D8  
             __initialization 1D38                  __end_of_main 175E                  __end_of_rand 1CE4  
         enleveTuilesAutour@x 00C1           enleveTuilesAutour@y 00B8          lcd_putMessage@chaine 00BE  
  calculToucheCombien@colonne 00C0                        ??_main 00D6                        ??_rand 00C6  
               __activetblptr 000003                        _ADCON1 000FC1                        _ADRESH 000FC4  
                      ?_srand 00B8                        _ANSELH 000F7F                   initTabVue@i 00C2  
                 initTabVue@j 00C0                __CFG_WDTEN$OFF 000000                  ?_rempliMines 00CC  
                      _SPBRGH 000FB0                __CFG_XINST$OFF 000000                lcd_initCGRam@i 00BD  
              lcd_initCGRam@j 00BE                getAnalog@canal 00B9              __end_of_lcd_busy 1EAE  
            __end_of_lcd_init 1F76                        ___lmul 1AF4                        ___wmul 1F76  
              __CFG_STVREN$ON 000000                     ??___awmod 00CA                        _demine 175E  
                      clear_0 1D7E               ___awmod@divisor 00C8                     ??_deplace 00C1  
             ___awmod@counter 00CA                        _strcpy 1E24                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 00B8        __size_of_afficheTabVue 008E             _lcd_resetSequence 1BCC  
                  __accesstop 0060       __end_of__initialization 1D84           _lcd_strobeEnableBit 1FD2  
          ?_lcd_resetSequence 00B8                 ___rparam_used 000000                  __pidataBANK0 1C36  
                __pidataBANK1 1EAE           ??_lcd_resetSequence 00BA                 __end_of_srand 1FCA  
        ?_lcd_strobeEnableBit 00B8            __size_of_getAnalog 002C            __size_of_lcd_wrCom 006C  
   __end_of_lcd_resetSequence 1C36                       ??_srand 00BA      __size_of_lcd_lireDonnees 0006  
           _lcd_ecrireDonnees 1F9E                    __pbssBANK1 0100              ??_lcd_putMessage 00C0  
          ?_lcd_ecrireDonnees 00B8      __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00B8  
                     ?___lmul 00B8                       ?___wmul 00B8                       ?_demine 00C2  
               _afficheTabVue 1966                ___lmul@product 00C0   __size_of_enleveTuilesAutour 0662  
       ??_lcd_strobeEnableBit 00B8                       ?_strcpy 00BE  __size_of_calculToucheCombien 04F8  
    __end_of_metToucheCombien 1436                    _lcd_gotoXY 1A82                    _lcd_wrData 1EEE  
             _afficheTabMines 19F4     __end_of_lcd_ecrireDonnees 1FBA                     ?_lcd_busy 00B8  
                   ?_lcd_init 00B8       lcd_ecrireDonnees@donnee 00B9                    _m_tabMines 0064  
           __end_of_getAnalog 1F4E          __size_of_rempliMines 0166                       __Hparam 0000  
                     __Lparam 0000                    _initTabVue 1574             __end_of_lcd_wrCom 1BCC  
              ?_afficheTabVue 00B8               __size_of___lmul 006C                       ___awmod 1812  
             __size_of___wmul 0028               __size_of_demine 00B4                  __psmallconst 0600  
                     __pcinit 1D38                     _ANSELbits 000F7E                       __ramtop 0600  
                     _deplace 1436                       __ptext0 1686                       __ptext1 1172  
                     __ptext2 1E24                       __ptext3 1C8E                       __ptext4 1AF4  
                     __ptext5 1812                       __ptext6 12D8                       __ptext7 0C7A  
                     __ptext8 1F4E                       __ptext9 1BCC         __end_of_lcd_ecritChar 1D38  
                   _T0CONbits 000FD5               lcd_busy@adresse 00B9               __size_of_strcpy 0048  
                   _T1CONbits 000FCD              ___awmod@dividend 00C6                       demine@x 00C7  
                     demine@y 00C2              lcd_ecritChar@car 00BB                    ??_lcd_busy 00B8  
                  ??_lcd_init 00BF    __size_of_lcd_resetSequence 006A          end_of_initialization 1D84  
       __end_of_lcd_initCGRam 1966             ??_lcd_lireDonnees 00B8                     _RCSTAbits 000FAB  
                     postdec1 000FE5                       postinc0 000FEE                       postinc2 000FDE  
     __size_of_initialisation 004C             ??_lcd_curseurHome 00BB           lcd_ecritChar@posRam 00BC  
                   _PORTAbits 000F80                     _PORTBbits 000F81       __end_of_afficheTabMines 1A82  
                 ?_lcd_gotoXY 00BB                     _TRISCbits 000F94                   ?_lcd_wrData 00B8  
  __size_of_lcd_ecrireDonnees 001C                     _TXSTAbits 000FAC               ??_afficheTabVue 00C1  
                 ?_initTabVue 00B8                __end_of___lmul 1B60                __end_of___wmul 1F9E  
                 _BAUDCONbits 000FB8                __end_of_demine 1812                __end_of_strcpy 1E6C  
         start_initialization 1D38           _calculToucheCombien 0C7A           __size_of_lcd_gotoXY 0072  
calculToucheCombien@countMine 00C7                      ??___lmul 00C0                      ??___wmul 00BC  
               rempliMines@nb 00CC           __size_of_lcd_wrData 0034                      ??_demine 00C3  
                 __pdataBANK0 0060                   __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000  
                    ??_strcpy 00C2          ?_calculToucheCombien 00BE              ?_afficheTabMines 00B8  
               __pcstackBANK0 00B8             ?_metToucheCombien 00B8              afficheTabMines@i 00C1  
         __size_of_initTabVue 0112            ??_metToucheCombien 00C8             __size_of_lcd_busy 0042  
           __size_of_lcd_init 0028             __CFG_CCP2MX$PORTC 000000                     _getAnalog 1F22  
 __end_of_lcd_strobeEnableBit 1FDA                _initialisation 1DD8    __end_of_enleveTuilesAutour 0C7A  
                    ?___awmod 00C6                      ?_deplace 00BD                     _lcd_wrCom 1B60  
       ??_calculToucheCombien 00C2                   __smallconst 0600               _lcd_lireDonnees 1FDA  
         lcd_wrData@caractere 00BA                __size_of_srand 0010                 ??_rempliMines 00CE  
             _lcd_curseurHome 1FCA                ___wmul@product 00BC        __end_of_initialisation 1E24  
                  ?_getAnalog 00B8              __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 004E  
                  ?_lcd_wrCom 00B8                    _ADCON0bits 000FC2                    _ADCON2bits 000FC0  
           ___wmul@multiplier 00B8                  ??_lcd_gotoXY 00BC                  ??_lcd_wrData 00BA  
           lcd_wrCom@commande 00BA             ___lmul@multiplier 00B8                     copy_data0 1D4C  
                   copy_data1 1D6C                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 00B8           __end_of_rempliMines 12D8  
                ??_initTabVue 00BE            __CFG_BOREN$SBORDIS 000000                  rempliMines@i 00D4  
                rempliMines@x 00D2                  rempliMines@y 00D3            __end_of_lcd_gotoXY 1AF4  
          __end_of_lcd_wrData 1F22              __size_of___awmod 00B2        __size_of_lcd_initCGRam 00A2  
             lcd_putMessage@j 00C0              __size_of_deplace 013E       __end_of_lcd_lireDonnees 1FE0  
                    _matCGRAM 0154       __end_of_lcd_curseurHome 1FD2                      __ptext10 18C4  
                    __ptext11 1FCA                      __ptext20 19F4                      __ptext12 1DD8  
                    __ptext21 1D8A                      __ptext13 1FBA                      __ptext30 1F76  
                    __ptext22 1CE4                      __ptext14 1574                      __ptext23 1EEE  
                    __ptext15 1436                      __ptext24 1A82                      __ptext16 1F22  
                    __ptext25 1B60                      __ptext17 175E                      __ptext26 1FD2  
                    __ptext18 0618                      __ptext27 1F9E                      __ptext19 1966  
                    __ptext28 1E6C                      __ptext29 1FDA             metToucheCombien@i 00CB  
           metToucheCombien@j 00CC                      _lcd_busy 1E6C                      _lcd_init 1F4E  
          __end_of_initTabVue 1686              rempliMines@i_490 00D1      calculToucheCombien@ligne 00BE  
                    _m_tabVue 0100                    strcpy@from 00C0                 __size_of_main 00D8  
               __size_of_rand 0056                      deplace@x 00BD                      deplace@y 00BF  
                 ??_getAnalog 00B8         __end_of_afficheTabVue 19F4                      main@lose 00D7  
                    main@posX 00D9                      main@posY 00D8                   ??_lcd_wrCom 00BA  
               _lcd_ecritChar 1CE4                    _INTCONbits 000FF2                afficheTabVue@i 00C1  
               _lcd_initCGRam 18C4                   _rempliMines 1172     __size_of_metToucheCombien 015E  
              _lcd_putMessage 1D8A                ?_lcd_ecritChar 00B8              ?_lcd_lireDonnees 00B8  
                    strcpy@cp 00C2                      strcpy@to 00BE            _enleveTuilesAutour 0618  
            ?_lcd_curseurHome 00B8      __size_of_afficheTabMines 008E                ?_lcd_initCGRam 00B8  
         ?_enleveTuilesAutour 00B8             __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 1DD8  
